<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pms.mdnotice">
	<select id="list" resultType="ccsNotice" parameterType="ccsNoticeSearch">
			/* [pms.mdnotice.list][roy][2016. 6. 20.] */
		<include refid="ccs.common.pagingPre"/>
		SELECT RE.*
		FROM (SELECT 
			   t.*
			  ,CASE
		          WHEN t.INS_ID IS NOT NULL
		          THEN
		                (SELECT USR.NAME
		                   FROM CCS_USER USR
		                  WHERE USR.USER_ID = t.INS_ID)
		          ELSE '' END INS_NAME
		      ,CASE
		          WHEN t.UPD_ID IS NOT NULL
		          THEN
		                (SELECT USR.NAME
		                   FROM CCS_USER USR
		                  WHERE USR.USER_ID = t.UPD_ID)
		          ELSE '' END UPD_NAME
		  FROM ccs_notice t) RE
		 WHERE RE.store_id = #{storeId}
		 		AND RE.NOTICE_TYPE_CD = 'NOTICE_TYPE_CD.PRODUCT'
		<if test='startDate != null and startDate != ""' >
			<if test='endDate != null and endDate != ""'>
				AND RE.ins_dt BETWEEN TO_DATE (#{startDate}, 'YYYY-MM-DD HH24:MI:SS')
			                AND TO_DATE (#{endDate}, 'YYYY-MM-DD HH24:MI:SS')
			</if>
		</if>
		 <if test='noticeNos != null and noticeNos != ""'>
		 AND RE.NOTICE_NO IN (${noticeNos})
		 </if>
		 <if test="displayYnCds != null and displayYnCds != ''">           
			AND RE.DISPLAY_YN IN (${displayYnCds})
		</if>
		 <if test='title != null and title != ""'>
		 AND RE.title like '%' || #{title} || '%'
		 </if>
		 <include refid="ccs.common.pagingPost"/>
	</select>
	
	<resultMap id="noticeproductListResult" type="ccsNoticeproduct" autoMapping="true">
		<id property="noticeNo" 				column="NOTICE_NO"/>
	</resultMap>
	
	<resultMap id="productListResult" autoMapping="true" type="pmsProduct">
		<id property="storeId" column="STORE_ID" />
		<id property="productId" column="PRODUCT_ID" />
		<result property="dmsCategoryName" column="DMS_CATEGORY_NAME"/>
		<result property="productGubun" column="PRODUCT_GUBUN"/>
		<result property="productCopyReg" column="PRODUCT_COPY_REG"/>
		<association property="pmsCategory" column="CATEGORY_ID" javaType="pmsCategory">
	    	<id property="storeId" column="STORE_ID" />
	    	<id property="categoryId" column="CATEGORY_ID"/>
	    	<result property="name" column="PMS_CATEGORY_NAME"/>	    
	    </association>
	    <association property="pmsBrand" column="BRAND_ID" javaType="pmsBrand">
	    	<id property="storeId" column="STORE_ID" />
	    	<id property="brandId" column="BRAND_ID"/>
	    	<result property="name" column="BRAND_NAME"/>	    
	    </association>
	</resultMap>
	
	<select id="productlist" resultMap="productListResult">
		/* [pms.mdnotice.productlist][roy][2016. 6. 20.] */
		<include refid="ccs.common.pagingPre"/>
		
		SELECT PP.*,
	       PB.NAME AS BRAND_NAME,
	       PC.NAME AS PMS_CATEGORY_NAME,
	       C1.DMS_CATEGORY_NAME,
	       RTRIM (
	          (   DECODE (PP.RESERVE_YN, 'Y', '예약 / ')
	           || DECODE (PP.OFFSHOP_PICKUP_YN, 'Y', '픽업 / ')
	           || DECODE (PP.REGULAR_DELIVERY_YN, 'Y', '정기배송 / ')
	           || DECODE (PP.FIXED_DELIVERY_YN, 'Y', '지정일배송 / ')
	           || DECODE (PP.GIFT_YN, 'Y', '기프티콘 / ')
	           || DECODE (PP.WRAP_YN, 'Y', '선물포장')),
	          '/ ') AS PRODUCT_GUBUN,
	       '복사등록' AS PRODUCT_COPY_REG
	  FROM PMS_PRODUCT PP
	       LEFT OUTER JOIN PMS_CATEGORY PC
	          ON PC.CATEGORY_ID = PP.CATEGORY_ID AND PC.STORE_ID = PP.STORE_ID
	       LEFT OUTER JOIN PMS_BRAND PB
	          ON PB.BRAND_ID = PP.BRAND_ID AND PB.STORE_ID = PP.STORE_ID
	       LEFT OUTER JOIN (  SELECT PP.PRODUCT_ID,
	                            LISTAGG (DDC.DMS_CATEGORY_NAME, ',')
	                               WITHIN GROUP (ORDER BY PP.PRODUCT_ID)
	                               DMS_CATEGORY_NAME
	                       FROM PMS_PRODUCT PP
	                            INNER JOIN DMS_DISPLAYCATEGORYPRODUCT DDCP
	                               ON     DDCP.PRODUCT_ID = PP.PRODUCT_ID
	                                  AND DDCP.STORE_ID = PP.STORE_ID
	                            INNER JOIN (    SELECT SUBSTR (
	                                                      SYS_CONNECT_BY_PATH (A1.NAME,
	                                                                           ' &gt; '),
	                                                      3)
	                                                      DMS_CATEGORY_NAME,
	                                                   A1.*
	                                              FROM (  SELECT *
	                                                        FROM DMS_DISPLAYCATEGORY
	                                                    ORDER BY DISPLAY_CATEGORY_ID ASC) A1
	                                        START WITH     UPPER_DISPLAY_CATEGORY_ID
	                                                          IS NULL
	                                                   AND A1.LEAF_YN = 'N'
	                                        CONNECT BY PRIOR A1.DISPLAY_CATEGORY_ID =
	                                                      A1.UPPER_DISPLAY_CATEGORY_ID) DDC
	                               ON     DDC.DISPLAY_CATEGORY_ID =
	                                         DDCP.DISPLAY_CATEGORY_ID
	                                  AND DDC.STORE_ID = PP.STORE_ID
	                   GROUP BY PP.PRODUCT_ID
	                   ORDER BY PP.PRODUCT_ID ASC) C1
	          ON C1.PRODUCT_ID = PP.PRODUCT_ID
		 WHERE     PP.STORE_ID = #{ storeId }
		 AND PP.PRODUCT_ID in (
			SELECT PRODUCT_ID 		
		  	FROM CCS_NOTICEPRODUCT t
		 	WHERE t.STORE_ID = #{storeId}
		 	<if test='noticeNos != null and noticeNos != ""'>
		 	AND t.NOTICE_NO = #{noticeNos}
		 	</if>
		)
		<include refid="ccs.common.pagingPost"/>
	</select>
	
	<select id="selectProductList" resultType="string" parameterType="ccsNoticeSearch">
		/* [pms.mdnotice.selectProductList][roy][2016. 6. 22.] */
			SELECT DISTINCT 1
			FROM CCS_NOTICEPRODUCT NP
			WHERE NP.NOTICE_NO = #{noticeNos}
			AND NP.STORE_ID = #{storeId}
	</select>
	
	<select id="selectOne" resultType="string" parameterType="ccsNoticeproduct">
		/* [pms.mdnotice.selectOne][roy][2016. 6. 21.] */
			SELECT NP.NOTICE_NO
			FROM CCS_NOTICEPRODUCT NP
			WHERE NP.NOTICE_NO = #{noticeNo}
			AND NP.PRODUCT_ID = #{productId}
			AND NP.STORE_ID = #{storeId}
	</select>
	
<!-- 	<insert id="insertNoticeproduct">
		/* [pms.mdnotice.insertNoticeproduct][roy][2016. 6. 22.] */
		INSERT INTO CCS_NOTICEPRODUCT (STORE_ID,
                      NOTICE_NO,
                      PRODUCT_ID,
                      INS_DT,
                      INS_ID,
                      UPD_DT,
                      UPD_ID)
     	VALUES (#{storeId},
     			#{noticeNo},
     			#{productId},
     			SYSDATE,
     			#{insId},
     			SYSDATE,
     			#{updId})
	</insert>
	 -->
	<select id="selectNoticeNo" resultType="string" parameterType="ccsNoticeSearch">
		/* [pms.mdnotice.selectNoticeNo][roy][2016. 6. 22.] */
			SELECT NVL (NOTICE_NO, 1) noticeNo
		  		FROM (SELECT MAX (TO_NUMBER (NOTICE_NO)) NOTICE_NO FROM CCS_NOTICE WHERE STORE_ID= #{storeId}) DUAL
	</select>
	
	<delete id="deleteNoticeproduct">
		/* [pms.mdnotice.deleteNoticeproduct][roy][2016. 6. 22.] */
		DELETE FROM CCS_NOTICEPRODUCT
     	WHERE STORE_ID = #{storeId}
     	AND NOTICE_NO = #{noticeNos}
     	<if test='productIds != null and productIds != "" and productIds.length > 0'>
     		AND PRODUCT_ID NOT IN
     		<foreach collection="productIds" item="productIds" open="(" separator=","  close=")">
				 #{productIds}
	    	</foreach>
		</if>
	</delete>
	
	<delete id="deleteMdnoticeproduct">
		/* [pms.mdnotice.deleteMdnoticeproduct][roy][2016. 6. 22.] */
		DELETE FROM CCS_NOTICEPRODUCT
     	WHERE STORE_ID = #{storeId}
     	AND NOTICE_NO = #{noticeNos}
	</delete>
	
</mapper>