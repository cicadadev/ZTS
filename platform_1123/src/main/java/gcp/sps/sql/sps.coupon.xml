<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sps.coupon">
	
	<resultMap id="couponList" autoMapping="true" type="spsCoupon" >
		<id property="storeId" column="STORE_ID"/>
		<id property="couponId" column="COUPON_ID"/>
		
		<result property="chgDcValue" column="CHG_DC_VALUE"/>
		<result property="couponCopyReg" column="COUPON_COPY_REG"/>
		<association property="ccsBusiness" javaType="ccsBusiness">
			<id property="businessId" column="BUSINESS_ID"/>
			<result property="name" column="BUSINESS_NAME"/>
		</association>
	</resultMap>	
	<select id="getCouponList" resultMap="couponList">
		/* [sps.coupon.getCouponList][ian][2016. 6. 8.] */
		SELECT I1.*,
			(SELECT US.NAME FROM CCS_USER US WHERE I1.INS_ID = US.USER_ID AND ROWNUM=1) AS INS_NAME,
			(SELECT US.NAME FROM CCS_USER US WHERE I1.UPD_ID = US.USER_ID AND ROWNUM=1) AS UPD_NAME
		 FROM (
		<include refid="ccs.common.pagingPre" />
		SELECT /*+ leading(t1) */ T1.*,
		       CASE T1.DC_APPLY_TYPE_CD
		          WHEN 'DC_APPLY_TYPE_CD.RATE' THEN TO_CHAR (T1.DC_VALUE) || '%'
		          WHEN 'DC_APPLY_TYPE_CD.AMT' THEN TO_CHAR (T1.DC_VALUE)
		       END
		          AS CHG_DC_VALUE,
		       '쿠폰 복사' AS COUPON_COPY_REG,
		       CB.NAME AS BUSINESS_NAME
		  FROM SPS_COUPON T1
		  	   LEFT OUTER JOIN CCS_BUSINESS CB 
				  ON CB.BUSINESS_ID = T1.BUSINESS_ID AND CB.STORE_ID = #{storeId}
		  WHERE T1.STORE_ID = #{storeId}
		  	<if test="startDate != null and startDate != ''" >
				<if test="endDate != null and endDate != ''" >
					AND ( T1.ISSUE_START_DT <![CDATA[<=]]> TO_DATE (#{endDate}, 'YYYY-MM-DD HH24:MI:SS')
						AND T1.ISSUE_END_DT <![CDATA[>=]]> TO_DATE (#{startDate}, 'YYYY-MM-DD HH24:MI:SS') )	
				</if>
			</if>
<!-- 			<if test="name != null and name != ''"> -->
<!-- 				AND T1.NAME LIKE '%' || #{name} || '%' -->
<!-- 			</if>		 -->
			<if test="couponStateCds != null and couponStateCds != ''">
				AND T1.COUPON_STATE_CD IN ( ${couponStateCds} )
			</if>
			<if test="couponTypeCds != null and couponTypeCds != ''">
				AND T1.COUPON_TYPE_CD IN ( ${couponTypeCds} )
			</if>
            <if test="searchKeyword != null and searchKeyword !=''">
                <if test=" 'NAME'.equals(infoType)">
            	AND T1.NAME LIKE '%' || #{searchKeyword} || '%'
                </if>
                <if test=" 'ID'.equals(infoType)">
            	AND T1.COUPON_ID = #{searchKeyword}
                </if>
            </if>
            <if test="businessId != null and businessId != '' ">
            	AND T1.BUSINESS_ID = #{businessId}
            </if>
            <if test="poBusinessId != null and poBusinessId != '' ">
	            AND T1.INS_ID IN
	              (SELECT CU.USER_ID
	                 FROM    CCS_USER CU
	                      INNER JOIN
	                         CCS_BUSINESS CB
	                      ON     CB.BUSINESS_ID = CU.BUSINESS_ID
	                         AND CB.STORE_ID = CU.STORE_ID
	                         AND CB.BUSINESS_ID = #{poBusinessId}
	                WHERE CU.STORE_ID = #{storeId})
            </if>
			<if test="productId != null and productId != '' ">
		        <include refid="ccs.common.existsCheckApplytarget" />
			</if>
		ORDER BY T1.INS_DT DESC
	<include refid="ccs.common.pagingPost" />) I1	
	</select>		
	
<!-- 	<insert id="insertCoupon" parameterType="spsCoupon"> -->
<!-- 		<selectKey keyProperty="couponId" resultType="String" order="BEFORE"> -->
<!-- 		/* [sps.coupon.insertCoupon][ian][2016.06.13] */ -->
<!-- 		SELECT NVL (COUPON_ID, 1) couponId -->
<!-- 		  FROM (SELECT MAX (TO_NUMBER (COUPON_ID)) + 1 COUPON_ID FROM SPS_COUPON WHERE STORE_ID= #{storeId}) DUAL -->
<!-- 		</selectKey>	 -->
<!-- 		INSERT INTO ZEROTO7.SPS_COUPON (STORE_ID, -->
<!-- 	                                COUPON_ID, -->
<!-- 	                                NAME, -->
<!-- 	                                COUPON_TYPE_CD, -->
<!-- 	                                DOWN_SHOW_YN, -->
<!-- 	                                DEAL_APPLY_YN, -->
<!-- 	                                DC_APPLY_TYPE_CD, -->
<!-- 	                                DC_VALUE, -->
<!-- 	                                AFFILIATE_YN, -->
<!-- 	                                TERM_TYPE_CD, -->
<!-- 	                                MAX_MEM_ISSUE_QTY, -->
<!-- 	                                MAX_ISSUE_QTY, -->
<!-- 	                                ISSUE_START_DT, -->
<!-- 	                                ISSUE_END_DT, -->
<!-- 	                                COUPON_ISSUE_TYPE_CD, -->
<!-- 	                                FEE_LIMIT_APPLY_YN, -->
<!-- 	                                DISCOUNT_DUP_YN, -->
<!-- 	                                COUPON_STATE_CD, -->
<!-- 	                                APPLY_NO, -->
<!-- 	                                CONTROL_NO, -->
<!-- 	                                MAX_DC_AMT, -->
<!-- 	                                BUSINESS_ID, -->
<!-- 	                                BUSINESS_BURDEN_RATE, -->
<!-- 	                                MIN_ORDER_AMT, -->
<!-- 	                                TERM_DAYS, -->
<!-- 	                                TERM_START_DT, -->
<!-- 	                                TERM_END_DT, -->
<!-- 	                                INS_DT, -->
<!-- 	                                INS_ID, -->
<!-- 	                                UPD_DT, -->
<!-- 	                                UPD_ID) -->
<!-- 	     VALUES ( #{ storeId, jdbcType=VARCHAR }, -->
<!-- 		          #{ couponId, jdbcType=VARCHAR }, -->
<!-- 		          #{ name, jdbcType=VARCHAR }, -->
<!-- 		          #{ couponTypeCd, jdbcType=VARCHAR }, -->
<!-- 		          #{ downShowYn, jdbcType=VARCHAR }, -->
<!-- 		          #{ dealApplyYn, jdbcType=VARCHAR }, -->
<!-- 		          #{ dcApplyTypeCd, jdbcType=VARCHAR }, -->
<!-- 		          #{ dcValue, jdbcType=NUMERIC }, -->
<!-- 		          #{ affiliateYn, jdbcType=VARCHAR }, -->
<!-- 		          #{ termTypeCd, jdbcType=VARCHAR }, -->
<!-- 		          #{ maxMemIssueQty, jdbcType=INTEGER}, -->
<!-- 		          #{ maxIssueQty, jdbcType=INTEGER}, -->
<!-- 		          #{ issueStartDt, jdbcType=TIMESTAMP}, -->
<!-- 		          #{ issueEndDt, jdbcType=TIMESTAMP}, -->
<!-- 		          #{ couponIssueTypeCd, jdbcType=VARCHAR }, -->
<!-- 		          #{ feeLimitApplyYn, jdbcType=VARCHAR }, -->
<!-- 		          #{ discountDupYn, jdbcType=VARCHAR }, -->
<!-- 		          #{ couponStateCd, jdbcType=VARCHAR }, -->
<!-- 		          #{ applyNo, jdbcType=INTEGER}, -->
<!-- 		          #{ controlNo, jdbcType=INTEGER}, -->
<!-- 		          #{ maxDcAmt, jdbcType=NUMERIC }, -->
<!-- 		          #{ businessId, jdbcType=VARCHAR }, -->
<!-- 		          #{ businessBurdenRate, jdbcType=NUMERIC }, -->
<!-- 		          #{ minOrderAmt, jdbcType=NUMERIC }, -->
<!-- 		          #{ termDays, jdbcType=INTEGER}, -->
<!-- 		          #{ termStartDt, jdbcType=TIMESTAMP}, -->
<!-- 		          #{ termEndDt, jdbcType=TIMESTAMP}, -->
<!-- 		          SYSDATE, -->
<!-- 		          #{ insId, jdbcType=VARCHAR }, -->
<!-- 		          SYSDATE, -->
<!-- 		          #{ updId, jdbcType=VARCHAR } -->
<!-- 	            ) -->
<!-- 	</insert> -->

	<select id="getCouponDeal" parameterType="spsCoupon" resultType="spsCoupondeal">
	/* [sps.coupon.getCouponDeal][ian][2016. 6. 14.] */
		SELECT STORE_ID, DEAL_ID
		  FROM SPS_DEAL
		 WHERE STORE_ID = #{storeId} AND DEAL_TYPE_CD IN (${dealTypeCds})
	</select>
	
	<delete id="deleteCouponDeal" parameterType="spsCoupon">
	/* [sps.coupon.deleteCouponDeal][ian][2016. 6. 15.] */
		DELETE 
		  FROM SPS_COUPONDEAL 
		 WHERE STORE_ID = #{storeId} 
		   AND COUPON_ID = #{couponId} 
	</delete>

	<resultMap id="couponStateCount" autoMapping="true" type="spsCouponissue" >
		<id property="storeId" column="STORE_ID" />
		<id property="couponId" column="COUPON_ID" />
		<result property="couponIssueStateCd" column="COUPON_ISSUE_STATE_CD"/>
		<result property="count" column="COUNT"/>
	</resultMap>	
	<select id="getCouponIssueState" parameterType="spsCouponSearch" resultMap="couponStateCount">
	/* [sps.coupon.getCouponIssueState][ian][2016. 7. 14.] */
          SELECT COUPON_ISSUE_STATE_CD, COUNT (COUPON_ISSUE_STATE_CD) AS COUNT
            FROM SPS_COUPONISSUE
           WHERE STORE_ID = #{storeId} AND COUPON_ID = #{couponId}
           <if test="memberNo != null and memberNo != ''">
           AND MEMBER_NO = #{memberNo}
           </if>
        GROUP BY ROLLUP (COUPON_ISSUE_STATE_CD)
	</select>
	
    <delete id="deleteIssueCoupon" parameterType="spsCouponissue">
    /* [sps.coupon.deleteIssueCoupon][ian][2016. 7. 14.] */
        DELETE SPS_COUPONISSUE
         WHERE     STORE_ID = #{storeId}
               AND COUPON_ID = #{couponId}
               <if test="deleteType != null and deleteType != '' ">
                    AND COUPON_ISSUE_STATE_CD = 'COUPON_ISSUE_STATE_CD.ISSUE'
                    AND ROWNUM &lt;= #{count}
               </if>
    </delete>
    
	<select id="getMemIssueUseCount" parameterType="spsCouponissue" resultType="BigDecimal">
	/* [sps.coupon.getMemMonthIssueCount][ian][2016. 9. 6.] */
		SELECT NVL(COUNT (*), 0)
		  FROM SPS_COUPONISSUE
		 WHERE     STORE_ID = #{storeId}
		       AND COUPON_ID = #{couponId}
		       AND MEMBER_NO = #{memberNo}
		       AND COUPON_ISSUE_STATE_CD IN ('COUPON_ISSUE_STATE_CD.REG', 'COUPON_ISSUE_STATE_CD.USE')
		       <if test=" 'MEM_ISSUE_BASIS_CD.MONTH'.equals(memIssueBasisCd)">
			   AND REG_DT BETWEEN TRUNC (SYSDATE, 'MM')
			                  AND LAST_DAY (TRUNC (SYSDATE)) + 23.9998 / 24
		       </if>
		       <if test=" 'MEM_ISSUE_BASIS_CD.WEEK'.equals(memIssueBasisCd)">
		       AND REG_DT BETWEEN TRUNC (SYSDATE, 'IW')
		                      AND (TRUNC (SYSDATE, 'IW') + 7) + 23.9998 / 24
		       </if>
		       <if test=" 'MEM_ISSUE_BASIS_CD.DAY'.equals(memIssueBasisCd)">
		       AND REG_DT BETWEEN TRUNC (SYSDATE, 'DD')
		                      AND (TRUNC (SYSDATE)) + 23.9998 / 24
		       </if>
	</select>
	
	<resultMap id="getCouponDetails" autoMapping="true" type="spsCoupon" >
		<id property="storeId" column="STORE_ID"/>
		<id property="couponId" column="COUPON_ID"/>
		
		<result property="privateCin" column="PRIVATE_CIN" />
		<association property="ccsApply" javaType="ccsApply">
			<id column="APPLY_NO" property="applyNo"/>
			<result column="TARGET_TYPE_CD" property="targetTypeCd"/>
		</association>	
		<collection property="spsDeals" ofType="spsDeal">
			<id property="dealId" column="DEAL_ID"/>
			<result property="dealTypeCd" column="DEAL_TYPE_CD" />
		</collection>
	</resultMap>
	<select id="getCouponDetail" parameterType="String" resultMap="getCouponDetails">
	/* [sps.coupon.getCouponDetail][ian][2016. 6. 8.] */
		SELECT 
			   DISTINCT SD.DEAL_TYPE_CD,
			   SC.*,
		       CA.TARGET_TYPE_CD,
		       (SELECT PRIVATE_CIN
		          FROM SPS_COUPONISSUE
		         WHERE STORE_ID = #{storeId} AND COUPON_ID = #{couponId} AND ROWNUM = 1)
		          AS PRIVATE_CIN
		  FROM SPS_COUPON SC
		       INNER JOIN CCS_APPLY CA
		          ON CA.STORE_ID = SC.STORE_ID AND CA.APPLY_NO = SC.APPLY_NO
		       LEFT OUTER JOIN SPS_COUPONDEAL SCD
		          ON SCD.STORE_ID = SC.STORE_ID AND SCD.COUPON_ID = SC.COUPON_ID
		       LEFT OUTER JOIN SPS_DEAL SD
		          ON SD.STORE_ID = SCD.STORE_ID AND SD.DEAL_ID = SCD.DEAL_ID
		 WHERE SC.STORE_ID = #{storeId} AND SC.COUPON_ID = #{couponId}
	</select>
	
	<select id="getIssueableCoupon" resultType="spsCoupon">
	/* [sps.coupon.getIssueableCoupon][ian][2016. 6. 8.] */
		SELECT SC.*
		  FROM SPS_COUPON SC
		 WHERE SC.STORE_ID = #{storeId} 
		   AND SC.COUPON_ID = #{couponId}
		   AND SYSDATE BETWEEN SC.ISSUE_START_DT AND SC.ISSUE_END_DT
		   AND SC.COUPON_STATE_CD = 'COUPON_STATE_CD.RUN'
	   <if test='campaignYn == "Y"'>
		   AND SC.CAMPAIGN_YN = 'Y'
	   </if>
	</select>
		
	 <resultMap id="getCouponIssuedRst" autoMapping="true" type="spsCouponissue">
		<id property="storeId" column="STORE_ID"/>
	    <id property="couponId" column="COUPON_ID"/>
	    <id property="couponIssueNo" column="COUPON_ISSUE_NO" />
        
	 	<association property="mmsMember" javaType="mmsMember" >
	    	<id property="memberNo" column="MEMBER_NO"/>
			<result property="memberId" column="MEMBER_ID" />
	    	<result property="memberName" column="MEMBER_NAME" />
	    	
		 	<association property="mmsMemberZts" javaType="mmsMemberZts" >
		    	<id property="memberNo" column="MEMBER_NO"/>
		    	<result property="memberNo" column="MEMBER_NO" />
			</association>
		</association>
	 	<association property="omsOrdercoupon" javaType="omsOrdercoupon" >
		    	<id property="orderId" column="ORDER_ID"/>
		    	<id property="couponId" column="COUPON_ID"/>
		    	<id property="couponIssueNo" column="COUPON_ISSUE_NO"/>
		    	<result property="orderId" column="ORDER_ID" />
		</association>
	</resultMap> 
	
	<select id="getCouponIssuedList" resultMap="getCouponIssuedRst">
	<include refid="ccs.common.pagingPre" />
	/*[sps.coupon.getCouponIssuedList][ian][2016. 6. 14]*/
		 SELECT A1.*
		   FROM (
		   <!-- 		   미발급 -->
		   		 SELECT COUPON_ID,
		                COUPON_ISSUE_NO,
		                PRIVATE_CIN,
		                REG_DT,
		                MEMBER_NO,
		                '' AS MEMBER_NAME,
		                '' AS MEMBER_ID,
		                USE_START_DT,
		                USE_END_DT,
		                COUPON_ISSUE_STATE_CD,
		                USE_DT,
		                '' AS ORDER_ID,
                        INS_ID,
		                INS_DT,
                        UPD_ID,
                        UPD_DT,
                        (SELECT US.NAME FROM CCS_USER US WHERE SPS_COUPONISSUE.INS_ID = US.USER_ID AND ROWNUM=1) AS INS_NAME,
			  			(SELECT US.NAME FROM CCS_USER US WHERE SPS_COUPONISSUE.UPD_ID = US.USER_ID AND ROWNUM=1) AS UPD_NAME
		           FROM SPS_COUPONISSUE
		          WHERE     STORE_ID = #{storeId}
		                AND COUPON_ID = #{couponId}
					 <if test="couponIssueStateCds != null and couponIssueStateCds !=''">
					 	AND COUPON_ISSUE_STATE_CD IN (${couponIssueStateCds})
					 </if>
					 <if test="privateCin != null and privateCin !=''">
					 	AND PRIVATE_CIN = #{privateCin}
					 </if>
		                AND MEMBER_NO IS NULL
		         UNION
		         <!-- 등록 -->
		         SELECT T1.COUPON_ID,
		                T1.COUPON_ISSUE_NO,
		                T1.PRIVATE_CIN,
		                T1.REG_DT,
		                T2.MEMBER_NO,
		                T5.MEMBER_NAME,
		                T5.MEMBER_ID,
		                T1.USE_START_DT,
		                T1.USE_END_DT,
		                T1.COUPON_ISSUE_STATE_CD,
		                T1.USE_DT,
		                '' AS ORDER_ID,
		                T1.INS_ID,
		                T1.INS_DT,
                        T1.UPD_ID,
                        T1.UPD_DT,
                        (SELECT US.NAME FROM CCS_USER US WHERE T1.INS_ID = US.USER_ID AND ROWNUM=1) AS INS_NAME,
			  			(SELECT US.NAME FROM CCS_USER US WHERE T1.UPD_ID = US.USER_ID AND ROWNUM=1) AS UPD_NAME
		           FROM SPS_COUPONISSUE T1
		                INNER JOIN MMS_MEMBER_ZTS T2
		                   ON     T2.MEMBER_NO = T1.MEMBER_NO
		                      AND T2.STORE_ID = T1.STORE_ID
		                INNER JOIN MMS_MEMBER T5
		                   ON T5.MEMBER_NO = T2.MEMBER_NO
		          WHERE     T1.STORE_ID = #{storeId}
		                AND T1.COUPON_ID = #{couponId}
					    <if test="startDate != null and startDate !=''">
					        <if test="endDate != null and endDate !=''">
					 			AND T1.REG_DT BETWEEN TO_DATE (#{startDate}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE (#{endDate}, 'YYYY-MM-DD HH24:MI:SS')
					        </if>
				        </if>
				        <if test="couponIssueStateCds != null and couponIssueStateCds !=''">
		                	AND T1.COUPON_ISSUE_STATE_CD IN (${couponIssueStateCds})
		                </if>
		                <if test="searchKeyword != null and searchKeyword !=''">
                            <if test=" 'NAME'.equals(infoType)">
		                	AND T5.MEMBER_NAME = #{searchKeyword}
                            </if>
                            <if test=" 'ID'.equals(infoType)">
		                	AND T5.MEMBER_ID = #{searchKeyword}
                            </if>
		                </if>
					 	<if test="privateCin != null and privateCin !=''">
					 		AND T1.PRIVATE_CIN = #{privateCin}
					 	</if>
		                <if test="memGradeCds != null and memGradeCds !=''">
		                	AND T2.MEM_GRADE_CD IN (${memGradeCds})
		                </if>
		                AND T1.COUPON_ISSUE_STATE_CD NOT IN
		                       ('COUPON_ISSUE_STATE_CD.ISSUE',
		                        'COUPON_ISSUE_STATE_CD.USE')
		         UNION
		         <!-- 사용 -->
		         SELECT T1.COUPON_ID,
		                T1.COUPON_ISSUE_NO,
		                T1.PRIVATE_CIN,
		                T1.REG_DT,
		                T2.MEMBER_NO,
		                T5.MEMBER_NAME,
		                T5.MEMBER_ID,
		                T1.USE_START_DT,
		                T1.USE_END_DT,
		                T1.COUPON_ISSUE_STATE_CD,
		                T1.USE_DT,
		                T3.ORDER_ID,
		                T1.INS_ID,
		                T1.INS_DT,
                        T1.UPD_ID,
                        T1.UPD_DT,
                        (SELECT US.NAME FROM CCS_USER US WHERE T1.INS_ID = US.USER_ID AND ROWNUM=1) AS INS_NAME,
			  			(SELECT US.NAME FROM CCS_USER US WHERE T1.UPD_ID = US.USER_ID AND ROWNUM=1) AS UPD_NAME
		           FROM SPS_COUPONISSUE T1
		                INNER JOIN MMS_MEMBER_ZTS T2
		                   ON     T2.MEMBER_NO = T1.MEMBER_NO
		                      AND T2.STORE_ID = T1.STORE_ID
		                INNER JOIN MMS_MEMBER T5
		                   ON T5.MEMBER_NO = T2.MEMBER_NO

		                INNER JOIN OMS_ORDERCOUPON T3
		                   ON     T3.COUPON_ID = T1.COUPON_ID
		                      AND T3.COUPON_ISSUE_NO = T1.COUPON_ISSUE_NO
		                INNER JOIN OMS_ORDER T4
		                   ON     T4.ORDER_ID = T3.ORDER_ID
		                      AND T4.MEMBER_NO = T1.MEMBER_NO
		                      AND T4.STORE_ID = T1.STORE_ID
		          WHERE     T1.STORE_ID = #{storeId}
		                AND T1.COUPON_ID = #{couponId}
		                AND T1.COUPON_ISSUE_STATE_CD = 'COUPON_ISSUE_STATE_CD.USE'
		                <if test="startDate != null and startDate !=''">
					        <if test="endDate != null and endDate !=''">
								AND T1.REG_DT BETWEEN TO_DATE (#{startDate}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE (#{endDate}, 'YYYY-MM-DD HH24:MI:SS')
					        </if>
			         	</if>
			         	<if test="couponIssueStateCds != null and couponIssueStateCds !=''">
		                	AND T1.COUPON_ISSUE_STATE_CD IN (${couponIssueStateCds})
		                </if>
		                <if test="searchKeyword != null and searchKeyword !=''">
                            <if test=" 'NAME'.equals(infoType)">
		                	AND T5.MEMBER_NAME = #{searchKeyword}
                            </if>
                            <if test=" 'ID'.equals(infoType)">
		                	AND T5.MEMBER_ID = #{searchKeyword}
                            </if>
		                </if>
					 	<if test="privateCin != null and privateCin !=''">
					 		AND T1.PRIVATE_CIN = #{privateCin}
					 	</if>
		                <if test="memGradeCds != null and memGradeCds !=''">
		                	AND T2.MEM_GRADE_CD IN (${memGradeCds})
		                </if>
		    	) A1
			ORDER BY A1.INS_DT DESC
	<include refid="ccs.common.pagingPost" />	   
	</select>
	
	<select id="getDuplicateCheck" parameterType="spsCouponIssueSearch" resultType="int">
	/*[sps.coupon.getDuplicateCheck][ian][2016. 5. 20]*/ 
	   	   SELECT COUNT(PRIVATE_CIN) 
			 FROM SPS_COUPONISSUE
			WHERE STORE_ID = #{storeId} 
			  AND PRIVATE_CIN = #{privateCin}
	</select>
	
	<select id="getMemberCouponList" resultType="spsCouponIssue">
	/* [sps.coupon.getMemberCouponList][allen][2016. 7. 15.] */
		<include refid="ccs.common.pagingPre" />
		SELECT     RESULT.*
        		, (SELECT COUNT(*) 
        			 FROM SPS_COUPONISSUE 
        			WHERE MEMBER_NO = #{memberNo} 
        			  AND COUPON_ISSUE_STATE_CD = 'COUPON_ISSUE_STATE_CD.REG'
        			  AND SYSDATE BETWEEN USE_START_DT AND USE_END_DT)  AS NOUSECOUNT
        			  , (SELECT COUNT(*) 
        			 FROM SPS_COUPONISSUE 
        			WHERE MEMBER_NO = #{memberNo} 
        			)  AS COUPON_TOTAL_COUNT
 		  FROM
				(
					SELECT 
					         T2.COUPON_ID
					       , T1.NAME    AS COUPONNAME
					       , T1.COUPON_TYPE_CD
					       , T1.DC_APPLY_TYPE_CD
					       , DECODE(T1.DC_APPLY_TYPE_CD, 'DC_APPLY_TYPE_CD.RATE' , T1.DC_VALUE || '%', TO_CHAR(T1.DC_VALUE, 'FM9,999,999')) AS DC_VALUE  
					       , T2.COUPON_ISSUE_STATE_CD
					       , T2.REG_DT
					       , T2.USE_START_DT
					       , T2.USE_END_DT
					       , T2.COUPON_ISSUE_NO
					       , T2.INS_DT
					       , T2.INS_ID
					       , T2.UPD_DT
					       , T2.UPD_ID
					       , T2.USE_DT
					       , T3.ORDER_ID
					       , (SELECT US.NAME FROM CCS_USER US WHERE T2.INS_ID = US.USER_ID AND ROWNUM=1) AS INS_NAME
			  			   , (SELECT US.NAME FROM CCS_USER US WHERE T2.UPD_ID = US.USER_ID AND ROWNUM=1) AS UPD_NAME
					  FROM SPS_COUPON T1 
					  JOIN SPS_COUPONISSUE T2
					    ON T1.COUPON_ID = T2.COUPON_ID 
					  LEFT JOIN OMS_ORDERCOUPON T3
					    ON T2.COUPON_ID = T3.COUPON_ID
					   		 AND T2.COUPON_ISSUE_NO = T3.COUPON_ISSUE_NO AND T3.COUPON_STATE_CD = 'COUPON_STATE_CD.APPLY'
					  WHERE T2.STORE_ID = #{storeId}
					    AND T2.MEMBER_NO = #{memberNo}
					    <if test="startDate != null and startDate != ''">
	                		<if test="endDate != null and endDate != ''">
	                    		AND	T2.INS_DT <![CDATA[>=]]> TO_DATE (#{startDate}, 'YYYY-MM-DD HH24:MI:SS')
	                    		AND T2.INS_DT <![CDATA[<=]]> TO_DATE (#{endDate}, 'YYYY-MM-DD HH24:MI:SS')
	                		</if>
            		 	</if>
            		 	<if test="couponIssueStateCds != null and couponIssueStateCds !=''">
					 		AND T2.COUPON_ISSUE_STATE_CD IN (${couponIssueStateCds})
					 	</if>
			    ) RESULT
		<include refid="ccs.common.pagingPost" />
	</select>
	
	<select id="getMemberCouponCnt" resultType="spsCouponIssue">
		/* [sps.coupon.getMemberCouponCnt][allen][2016. 7. 15.] */
		SELECT 
				TOTAL_COUNT
    		  , (SELECT COUNT(*) FROM SPS_COUPONISSUE WHERE MEMBER_NO = 1 AND COUPON_ISSUE_STATE_CD = 'COUPON_ISSUE_STATE_CD.REG')  AS NOUSECOUNT            
     	  FROM (
        		SELECT     
                 		COUNT(*) AS TOTAL_COUNT
          		  FROM SPS_COUPONISSUE T2  
          		 WHERE T2.STORE_ID = #{storeId}
            	   AND T2.MEMBER_NO = #{memberNo}
          )
	</select>
		
	<select id="getApplyCouponList" resultType="spsCoupon">
		/* [sps.coupon.getApplyCouponList][dennis][2016. 7. 11.] */
		SELECT AP.STORE_ID,
			   AP.COUPON_ID,
			   AP.NAME,
			   AP.COUPON_TYPE_CD,
			   AP.DC_APPLY_TYPE_CD,
			   AP.DC_VALUE,
			   (CASE WHEN AP.MAX_DC_AMT IS NULL OR AP.MAX_DC_AMT = 0
			   		 THEN 9999999
			   		 ELSE AP.MAX_DC_AMT
			   		 END) AS MAX_DC_AMT,	/* NULL, 0 일때 9,999,999 */
			   AP.AFFILIATE_YN,
			   AP.BUSINESS_ID, 
			   AP.BUSINESS_BURDEN_RATE,
			   NVL(AP.MIN_ORDER_AMT,0) AS MIN_ORDER_AMT,
			   AP.FEE_LIMIT_APPLY_YN,			   
			   AP.DEAL_APPLY_YN,
			   AP.CONTROL_NO,
			   AP.COUPON_ISSUE_NO,
			   AP.DEAL_ID,
			   AP.DOWN_SHOW_YN,
			   DECODE(AP.COUPON_TYPE_CD,'COUPON_TYPE_CD.WRAP','Y',AP.SINGLE_APPLY_YN) AS SINGLE_APPLY_YN			   
		FROM 
			(SELECT S.*,
					SI.COUPON_ISSUE_NO,
					
					MAX(AP.TYPE_SEQ) OVER (PARTITION BY S.COUPON_ID) AS MAX_TYPE_SEQ,
	        	    AP.TYPE_SEQ,
	        	    AP.TARGET_TYPE_CD,
	        	    
	        	    DECODE(S.COUPON_TYPE_CD,'COUPON_TYPE_CD.PRODUCT',1
	        	    					   ,'COUPON_TYPE_CD.PLUS',2
	        	    					   ,'COUPON_TYPE_CD.ORDER',3
	        	    					   ,'COUPON_TYPE_CD.DELIVERY',4
	        	    					   ,'COUPON_TYPE_CD.WRAP',5
	        	    					   ,99
	        	    	) AS ORDER_SEQ,
	        	    SD.DEAL_ID
	        	    	                	                 
			 	FROM SPS_COUPON S
				 LEFT OUTER JOIN SPS_COUPONDEAL SD
				 	ON S.COUPON_ID = SD.COUPON_ID	
				 	AND S.STORE_ID = SD.STORE_ID
				 	AND S.COUPON_TYPE_CD IN ('COUPON_TYPE_CD.PRODUCT','COUPON_TYPE_CD.PLUS','COUPON_TYPE_CD.ORDER')	/* 딜은 상품,PLUS , ORDER 쿠폰만.*/			 	
				 LEFT OUTER JOIN SPS_COUPONISSUE SI
				 	ON S.COUPON_ID = SI.COUPON_ID
				 	AND S.STORE_ID = SI.STORE_ID
				 	AND SI.USE_START_DT &lt;= SYSDATE
				    AND SI.USE_END_DT &gt;= SYSDATE
				    AND SI.COUPON_ISSUE_STATE_CD = 'COUPON_ISSUE_STATE_CD.REG'		     
				    AND SI.MEMBER_NO = #{memberNo}
				 LEFT OUTER JOIN (SELECT APPLY_NO,TYPE_SEQ,TARGET_TYPE_CD
					                FROM (
					                    SELECT CT.APPLY_NO,
					                           1 AS TYPE_SEQ,
					                           CT.TARGET_ID,
					                           CA.TARGET_TYPE_CD 
					                    FROM CCS_APPLYTARGET CT,
					                         CCS_APPLY CA 
					                    WHERE CT.APPLY_NO = CA.APPLY_NO
					                    AND CT.STORE_ID = CA.STORE_ID 
					                    AND CA.TARGET_TYPE_CD = 'TARGET_TYPE_CD.PRODUCT' 
					                    AND CT.TARGET_ID = #{productId}
					                    AND CA.STORE_ID = #{storeId}
					                    UNION ALL
					                    SELECT CT.APPLY_NO,
					                           2 AS TYPE_SEQ,
					                           CT.TARGET_ID,
					                           CA.TARGET_TYPE_CD 
					                    FROM CCS_APPLYTARGET CT,
					                         CCS_APPLY CA 
					                    WHERE CT.APPLY_NO = CA.APPLY_NO
					                    AND CT.STORE_ID = CA.STORE_ID
					                    AND CA.TARGET_TYPE_CD = 'TARGET_TYPE_CD.BRAND' 
					                    AND CA.STORE_ID = #{storeId}
					                    AND CT.TARGET_ID = (SELECT PP.BRAND_ID 
					                    					  FROM PMS_PRODUCT PP 
					                    					 WHERE PP.PRODUCT_ID = #{productId}
					                    					 AND PP.STORE_ID = #{storeId})
					                    UNION ALL
					                    SELECT CT.APPLY_NO,
					                           3 AS TYPE_SEQ,
					                           CT.TARGET_ID,
					                           CA.TARGET_TYPE_CD 
					                    FROM CCS_APPLYTARGET CT,
					                         CCS_APPLY CA 
					                    WHERE CT.APPLY_NO = CA.APPLY_NO
					                    AND CT.STORE_ID = CA.STORE_ID 
					                    AND CA.TARGET_TYPE_CD = 'TARGET_TYPE_CD.CATEGORY' 
					                    AND EXISTS (SELECT 'X' 
			                    					   FROM DMS_DISPLAYCATEGORY DD,
			                    					   		DMS_DISPLAYCATEGORYPRODUCT DP
			                    					  WHERE DD.DISPLAY_CATEGORY_ID = CT.TARGET_ID 
			                    					  AND DD.DISPLAY_CATEGORY_ID = DP.DISPLAY_CATEGORY_ID
			                    					  AND DD.STORE_ID = DP.STORE_ID
			                    					  AND DD.LEAF_YN = 'Y'
			                    					  AND DD.DISPLAY_YN = 'Y'
			                    					  AND DP.DISPLAY_YN = 'Y'
			                    					  AND DP.PRODUCT_ID = #{productId}
			                    					  AND DP.STORE_ID = #{storeId})
					                    UNION ALL
					                    SELECT CE.APPLY_NO,
					                           99 AS TYPE_SEQ,
					                           CE.PRODUCT_ID,
					                           CA.TARGET_TYPE_CD
					                    FROM CCS_EXCPRODUCT CE,
					                         CCS_APPLY CA
					                    WHERE CE.APPLY_NO = CA.APPLY_NO
					                    AND CE.STORE_ID = CA.STORE_ID
					                    AND CA.TARGET_TYPE_CD != 'TARGET_TYPE_CD.PRODUCT'
					                    AND CE.PRODUCT_ID = #{productId}
					                    AND CE.STORE_ID = #{storeId}
					                    UNION ALL
					                    SELECT CA.APPLY_NO,
					                           98 AS TYPE_SEQ,
					                           #{productId} AS PRODUCT_ID,
					                           CA.TARGET_TYPE_CD
					                    FROM CCS_APPLY CA
					                    WHERE CA.TARGET_TYPE_CD = 'TARGET_TYPE_CD.ALL'
					                    AND CA.STORE_ID = #{storeId}					                    		                   
					                )) AP
					     		ON S.APPLY_NO = AP.APPLY_NO
		     	WHERE S.COUPON_STATE_CD = 'COUPON_STATE_CD.RUN'	
		     	AND (	(S.COUPON_TYPE_CD NOT IN ('COUPON_TYPE_CD.DELIVERY','COUPON_TYPE_CD.WRAP') AND S.APPLY_NO = AP.APPLY_NO)
		     			OR S.COUPON_TYPE_CD IN ('COUPON_TYPE_CD.DELIVERY','COUPON_TYPE_CD.WRAP')
		     		) 	     					
		     	<if test="couponId != null and couponId != ''">
		     	AND S.COUPON_ID = #{couponId}		     	
		     	</if>
		     	<choose>
		     	<when test="memberCouponYn != null and memberCouponYn != ''">		     	
			     AND S.COUPON_ID = SI.COUPON_ID
			     <if test="dealId != null and dealId !=''">
			     	AND (
			     		(S.DEAL_APPLY_YN = 'Y' AND SD.DEAL_ID = #{dealId})
			     		OR S.COUPON_TYPE_CD IN ('COUPON_TYPE_CD.DELIVERY','COUPON_TYPE_CD.WRAP')
			     		)
			     </if>
			    </when>
			    <otherwise>
			     	<if test="downShowYn != null and downShowYn != ''">		     	
				     AND S.DOWN_SHOW_YN = #{downShowYn}
				     AND S.ISSUE_START_DT &lt;= SYSDATE
				     AND S.ISSUE_END_DT &gt;= SYSDATE
				     AND (S.MAX_ISSUE_QTY &gt; (SELECT COUNT(*) 
				     							 FROM SPS_COUPONISSUE CI 
				     							WHERE CI.COUPON_ID = S.COUPON_ID
				     							AND CI.STORE_ID = #{storeId}
				     							)
				     		OR SI.COUPON_ISSUE_NO IS NOT NULL						
				     	 )	
				     AND S.MAX_MEM_ISSUE_QTY &gt;= (SELECT COUNT(*) 
					     							  FROM SPS_COUPONISSUE CI 
					     							 WHERE CI.COUPON_ID = S.COUPON_ID
					     							 AND CI.STORE_ID = #{storeId}
					     							 AND CI.MEMBER_NO = #{memberNo}
					     							)
				    </if>	     			     				   
			    </otherwise>	
		     	</choose>
		     ) AP
	     WHERE AP.MAX_TYPE_SEQ &lt; 99
	     <if test="couponTypeCd != null and couponTypeCd !=''">
	     AND AP.COUPON_TYPE_CD = #{couponTypeCd}
	     </if>	     
	     ORDER BY AP.ORDER_SEQ
	</select>
	
	<select id="getCouponCountByMemberNo" resultType="int">
		/* [sps.coupon.getCouponCountByMemberNo][dennis][2016. 7. 19.] */
		SELECT COUNT(*)
		FROM SPS_COUPONISSUE SI
		WHERE SI.USE_START_DT &lt;= SYSDATE
	    AND SI.USE_END_DT &gt;= SYSDATE
	    AND SI.COUPON_ISSUE_STATE_CD = 'COUPON_ISSUE_STATE_CD.REG'		     
	    AND SI.MEMBER_NO = #{memberNo}
	</select>
	
	<update id="updateCouponState">
		/* [sps.coupon.updateCouponState][ian][2016. 8. 22.] */
		UPDATE SPS_COUPON
		   SET COUPON_STATE_CD = #{couponStateCd}, UPD_ID = #{updId}, UPD_DT = SYSDATE
		 WHERE STORE_ID = #{storeId} AND COUPON_ID = #{couponId}
	</update>
	
	<update id="issuePrivateCinCoupon">
		/* [sps.coupon.issuePrivateCinCoupon][ian][2016. 9. 7.] */
		UPDATE SPS_COUPONISSUE
		   SET COUPON_ISSUE_STATE_CD = #{couponIssueStateCd},
		       REG_DT = TO_DATE (#{regDt}, 'YYYY-MM-DD HH24:MI:SS'),
		       USE_START_DT = TO_DATE (#{useStartDt}, 'YYYY-MM-DD HH24:MI:SS'),
		       USE_END_DT = TO_DATE (#{useEndDt}, 'YYYY-MM-DD HH24:MI:SS'),
		       MEMBER_NO = #{memberNo},
		       UPD_ID = #{updId},
		       UPD_DT = SYSDATE
		 WHERE     STORE_ID = #{storeId}
		       AND COUPON_ID = #{couponId}
		       AND COUPON_ISSUE_NO = #{couponIssueNo}
		       AND PRIVATE_CIN = #{privateCin}
	</update>
	
	<update id="issuePublicCoupon" parameterType="Map">
		/* [sps.coupon.issuePublicCoupon][ian][2016. 10. 24.] */
		BEGIN
           <foreach collection="issues" item="item" >
           INSERT /*+ append*/ INTO SPS_COUPONISSUE
			   (STORE_ID,
			    COUPON_ID,
			    COUPON_ISSUE_NO,
			    COUPON_ISSUE_STATE_CD,
			    PRIVATE_CIN,
			    MEMBER_NO,
			    REG_DT,
			    USE_START_DT,
			    USE_END_DT,
			    USE_DT,
			    CAMPAIGN_ID,
			    CAMPAIGN_ORDER,
			    SEGMENT_ID,
			    INS_DT,
			    INS_ID,
			    UPD_DT,
			    UPD_ID)
     	   VALUES (
     	   		#{item.storeId},
		        #{item.couponId},
		        (SELECT NVL (ISSUE_NO, 1)
		           FROM (SELECT MAX (COUPON_ISSUE_NO) + 1 ISSUE_NO
		                   FROM SPS_COUPONISSUE
		                  WHERE STORE_ID = #{item.storeId} 
		                    AND COUPON_ID = #{item.couponId})
		         ),
		         #{item.couponIssueStateCd},
		         #{item.privateCin},
		         #{item.memberNo},
		         #{item.regDt},
		         #{item.useStartDt},
		         #{item.useEndDt},
		         #{item.useDt},
		         #{item.campaignId},
		         #{item.campaignOrder},
		         #{item.segmentId},
		         SYSDATE,
		         #{item.insId},
		         SYSDATE,
		         #{item.updId}
		         );
           </foreach>
	    END;
	</update>
	
	<update id="issueCampaignCoupon" parameterType="Map">
		/* [sps.coupon.issueCampaignCoupon][ian][2016. 11. 23.] */
		BEGIN
           <foreach collection="issues" item="item" >
           INSERT /*+ append*/ INTO SPS_COUPONISSUE
			   (STORE_ID,
			    COUPON_ID,
			    COUPON_ISSUE_NO,
			    COUPON_ISSUE_STATE_CD,
			    PRIVATE_CIN,
			    MEMBER_NO,
			    REG_DT,
			    USE_START_DT,
			    USE_END_DT,
			    USE_DT,
			    CAMPAIGN_ID,
			    CAMPAIGN_ORDER,
			    SEGMENT_ID,
			    INS_DT,
			    INS_ID,
			    UPD_DT,
			    UPD_ID)
     	   VALUES (
     	   		#{item.storeId},
		        #{item.couponId},
		        (SELECT NVL (ISSUE_NO, 1)
		           FROM (SELECT MAX (COUPON_ISSUE_NO) + 1 ISSUE_NO
		                   FROM SPS_COUPONISSUE
		                  WHERE STORE_ID = #{item.storeId} 
		                    AND COUPON_ID = #{item.couponId})
		         ),
		         #{item.couponIssueStateCd},
		         #{item.privateCin},
		         #{item.memberNo},
		         #{item.regDt},
		         #{item.useStartDt},
		         #{item.useEndDt},
		         #{item.useDt},
		         #{item.campaignId},
		         #{item.campaignOrder},
		         #{item.segmentId},
		         SYSDATE,
		         #{item.insId},
		         SYSDATE,
		         #{item.updId}
		         );
           </foreach>
	    END;
	</update>
	
	<update id="issuePrivateCoupon" parameterType="Map">
		/* [sps.coupon.issuePrivateCoupon][ian][2016. 10. 24.] */
		BEGIN
           <foreach collection="issues" item="item" >
           INSERT /*+ append*/ INTO SPS_COUPONISSUE
			   (STORE_ID,
			    COUPON_ID,
			    COUPON_ISSUE_NO,
			    COUPON_ISSUE_STATE_CD,
			    PRIVATE_CIN,
			    MEMBER_NO,
			    REG_DT,
			    USE_START_DT,
			    USE_END_DT,
			    USE_DT,
			    CAMPAIGN_ID,
			    CAMPAIGN_ORDER,
			    SEGMENT_ID,
			    INS_DT,
			    INS_ID,
			    UPD_DT,
			    UPD_ID)
     	   VALUES (
     	   		#{item.storeId},
		        #{item.couponId},
		        (SELECT NVL (ISSUE_NO, 1)
		           FROM (SELECT MAX (COUPON_ISSUE_NO) + 1 ISSUE_NO
		                   FROM SPS_COUPONISSUE
		                  WHERE STORE_ID = #{item.storeId} 
		                    AND COUPON_ID = #{item.couponId})
		         ),
		         #{item.couponIssueStateCd},
		         DBMS_RANDOM.STRING ('X', 14),
		         #{item.memberNo},
		         #{item.regDt},
		         #{item.useStartDt},
		         #{item.useEndDt},
		         #{item.useDt},
		         #{item.campaignId},
		         #{item.campaignOrder},
		         #{item.segmentId},
		         SYSDATE,
		         #{item.insId},
		         SYSDATE,
		         #{item.updId}
		         );
           </foreach>
	    END;
	</update>
	
	<select id="getPrivateCinCouponCheckStep1" resultType="spsCoupon">
		/* [sps.coupon.getPrivateCinCouponCheckStep1][ian][2016. 10. 24.] */
		SELECT SC.*
		  FROM    SPS_COUPON SC
		       INNER JOIN
		          (SELECT *
		             FROM SPS_COUPONISSUE
		            WHERE STORE_ID = #{storeId} AND PRIVATE_CIN = #{privateCin}) SCI
		       ON SC.STORE_ID = SCI.STORE_ID AND SC.COUPON_ID = SCI.COUPON_ID
		 WHERE ROWNUM &lt; 2
	</select>
	
	<select id="getPrivateCinCouponCheckStep2" resultType="spsCouponIssue">
		/*[sps.coupon.getPrivateCinCouponCheckStep2][ian][2016. 10. 24.]*/ 
   	   SELECT *
		 FROM SPS_COUPONISSUE
		WHERE STORE_ID = #{storeId}
		  AND COUPON_ID = #{couponId}
		  AND PRIVATE_CIN = #{privateCin}
		  AND REG_DT IS NULL
		  AND COUPON_ISSUE_STATE_CD = 'COUPON_ISSUE_STATE_CD.ISSUE' 
	 ORDER BY COUPON_ISSUE_NO ASC
	</select>
	
	<update id="createOffshopCoupon" parameterType="spsCouponissue" statementType="CALLABLE">		 	
		{ call ZTS_WEB.DBO.UP_OMS_CRE_MCOUPON(#{offshopDataAreaId}, #{offshopType} , #{offshopMemberNo}, #{offshopCouponType}, #{offshopSalePrice}, #{offshopValidDt}, #{result,jdbcType=VARCHAR,mode=OUT}) }
	</update>
	
	<select id="getFirstBuyMemberList" resultType="mmsMember">
		/*[sps.coupon.getFirstBuyMemberList][ian][2016. 10. 31.]*/
		  SELECT M1.MEMBER_NO
		       , M1.MEMBER_NAME
		       , M1.MEMBER_ID
		       , M1.EMAIL
		    FROM MMS_MEMBER M1, OMS_ORDER O1
		   WHERE     M1.MEMBER_NO = O1.MEMBER_NO and O1.STORE_ID = #{storeId}
		         AND ORDER_DELIVERY_STATE_CD = 'ORDER_DELIVERY_STATE_CD.SHIP'
		         AND M1.MEMBER_NO = 1000000100 <!-- 삭제예정 -->
		         AND NOT EXISTS
		                (SELECT /* + no_unnest index(cp)*/
		                        MEMBER_NO
		                   FROM SPS_COUPONISSUE CP
		                  WHERE STORE_ID = #{storeId} AND COUPON_ID = #{couponId} AND M1.MEMBER_NO = CP.MEMBER_NO)
		GROUP BY M1.MEMBER_NO, M1.MEMBER_NAME, M1.MEMBER_ID, M1.EMAIL
	</select>
	
	<update id="updateCoupon" parameterType="spsCoupon">
		/*[sps.coupon.updateCoupon][ian][2016. 11. 22.]*/
		UPDATE SPS_COUPON
		SET    
		       NAME                 = #{name},
		       COUPON_TYPE_CD       = #{couponTypeCd},
		       DOWN_SHOW_YN         = #{downShowYn},
		       DEAL_APPLY_YN        = #{dealApplyYn},
		       APPLY_NO             = #{applyNo},
		       CONTROL_NO           = #{controlNo},
		       DC_APPLY_TYPE_CD     = #{dcApplyTypeCd},
		       DC_VALUE             = #{dcValue},
		       MAX_DC_AMT           = #{maxDcAmt},
		       AFFILIATE_YN         = #{affiliateYn},
		       BUSINESS_ID          = #{businessId},
		       BUSINESS_BURDEN_RATE = #{businessBurdenRate},
		       MIN_ORDER_AMT        = #{minOrderAmt},
		       TERM_TYPE_CD         = #{termTypeCd},
		       TERM_DAYS            = #{termDays},
		       TERM_START_DT        = #{termStartDt},
		       TERM_END_DT          = #{termEndDt},
		       MEM_ISSUE_BASIS_CD   = #{memIssueBasisCd},
		       MAX_MEM_ISSUE_QTY    = #{maxMemIssueQty},
		       MAX_ISSUE_QTY        = #{maxIssueQty},
		       ISSUE_START_DT       = #{issueStartDt},
		       ISSUE_END_DT         = #{issueEndDt},
		       COUPON_ISSUE_TYPE_CD = #{couponIssueTypeCd},
		       FEE_LIMIT_APPLY_YN   = #{feeLimitApplyYn},
		       SINGLE_APPLY_YN      = #{singleApplyYn},
		       DISCOUNT_DUP_YN      = #{discountDupYn},
		       COUPON_STATE_CD      = #{couponStateCd},
		       CAMPAIGN_YN          = #{campaignYn},
		       INS_DT               = SYSDATE,
		       INS_ID               = #{insId},
		       UPD_DT               = SYSDATE,
		       UPD_ID               = #{updId}
		WHERE  STORE_ID             = #{storeId}
		AND    COUPON_ID            = #{couponId}
	</update>
</mapper>