<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="oms.pickup">

	<!-- 1. default resultmap -->
	<resultMap type="omsPickup" id="omsPickupMap" autoMapping="true">
		<id property="pickupId" column="pickup_id" />
	</resultMap>
	<resultMap type="omsPickupproduct" id="omsPickupproductMap" autoMapping="true">
		<id property="pickupId" column="pickup_id" />
		<id property="productNo" column="product_no" />
		
		<result property="offshopId" column="shop_id" />
		<result property="pickupMaxDt" column="pickup_max_dt" />
		
<!-- 		<result property="pickupMaxDt" column="pickup_max_dt" /> -->
		<result property="pickupMinDt" column="pickup_min_dt" />
		<result property="offshopName" column="offshop_name" />
		<result property="pickupReqDt" column="product_pickup_req_dt" />
		
		<association property="ccsOffshop" resultMap="ccsOffshopMap"/>
	</resultMap>
	<resultMap type="ccsOffshop" id="ccsOffshopMap" autoMapping="true">
		<id property="storeId" column="store_id" />
		<id property="offshopId" column="offshop_id" />
	</resultMap>
	
	<!-- 2. extends resultmap -->
	<resultMap type="omsPickup" id="omsPickupExtendsMap" extends="omsPickupMap" autoMapping="true">
		<collection property="omsPickupproducts" column="{pidkupId=pickup_id}" resultMap="omsPickupproductMap"/>
	</resultMap>
	<resultMap type="omsPickupproduct" id="omsPickupproductExtendsMap" extends="omsPickupproductMap" autoMapping="true">
		<association property="omsPickup" column="{pickupId=pickup_id}" resultMap="omsPickupMap"/>
		<association property="pickupMaxDt" column="{offshopId=offshop_id}" select="pickupMaxDt" javaType="string" />
	</resultMap>
	<resultMap type="ccsOffshop" id="ccsOffshopMapAreaMap" autoMapping="true">
		<id property="areaDiv1" column="area_div1" />
		<collection property="ccsOffshops" column="{areaDiv1=area_div1}" ofType="ccsOffshop">
			<id property="areaDiv1" column="area_div1" />
			<id property="areaDiv2" column="area_div2" />
			<collection property="ccsOffshops" column="{areaDiv1=area_div1,areaDiv2=area_div2}" ofType="ccsOffshop">
				<id property="areaDiv1" column="area_div1" />
				<id property="areaDiv2" column="area_div2" />
				<id property="name" 	column="name" />
				<id property="offshopId" column="OFFSHOP_ID" />
			</collection>
		</collection>
	</resultMap>
	
	<sql id="list">
		SELECT t1.member_no
		      ,t1.member_id
		      ,t1.name1
		      ,t1.phone1
		      ,t1.phone2
		      ,t1.pickup_req_dt
		      ,t1.pickup_id
		      
<!-- 		      ,t2.store_id -->
		      ,t2.offshop_id as shop_id   
		      ,t2.product_no
		      ,t2.product_id
		      ,t2.product_name
		      ,t2.saleproduct_id
		      ,t2.saleproduct_name
		      ,t2.order_qty
		      ,t2.order_amt * t2.order_qty as order_amt 
		      ,t2.pickup_product_state_cd
		      ,TO_CHAR(t2.pickup_req_dt,'YYYY-MM-DD') as product_pickup_req_dt 
		      ,TO_CHAR(t2.pickup_reserve_dt,'YYYY-MM-DD') AS pickup_reserve_dt
		      ,t2.pickup_delivery_dt
		      ,TO_CHAR(SYSDATE, 'YYYY-MM-DD') as pickup_min_dt
<!-- 		      ,t2.pickup_req_dt + 3 as pickup_max_dt -->

		      ,t2.pickup_cancel_dt
		      ,t2.upd_id
		      
		      ,s.address1
		      ,s.address2
		      ,s.address3
		      ,s.address4
		      ,s.address_info
		      ,s.area_div1
		      ,s.area_div2
		      ,s.holiday_info
		      ,s.latitude
		      ,s.longitude
		      ,s.manager_phone
		      ,s.name
		      ,s.offshop_affiliation
		      ,s.offshop_id
		      ,s.offshop_pickup_yn
		      ,s.offshop_state_cd
		      ,s.offshop_type_cd
		      ,s.store_id
		      ,s.zip_cd
		      
		  FROM oms_pickup t1
		       INNER JOIN oms_pickupproduct t2
		          ON t1.pickup_id = t2.pickup_id
		       INNER JOIN ccs_offshop s
		          ON t2.offshop_id = s.offshop_id 
		         AND t2.store_id = s.store_id
		 WHERE 1 = 1
		<if test='startDate != null and startDate != ""' >
		   AND t1.pickup_req_dt &gt;= TO_DATE(#{startDate},'YYYY-MM-DD HH24:MI:SS')  
		</if>
		<if test='endDate != null and endDate != ""'>
		   AND t1.pickup_req_dt &lt;= TO_DATE(#{endDate},'YYYY-MM-DD HH24:MI:SS')
		</if>
		<if test='orderer != null and orderer != ""'>
			<if test='ordererType == "name"'>
		   AND t1.name1 like #{orderer} || '%'
			</if>
			<if test='ordererType == "id"'>
		   AND t1.member_id like #{orderer} || '%'
			</if>
			<if test='ordererType == "number"'>
		   AND t1.member_no = #{orderer}
			</if>
			<if test='ordererType == "mobile"'>
		   AND t1.phone2 like '%' || #{orderer}
			</if>
		</if>
	</sql>
	
	<select id="pickupMaxDt" resultType="string">
		/* [oms.pickkup.pickupMaxDt][dennis][2016. 8. 11.] */
		SELECT MAX(open_date) as pickup_max_dt
		  FROM (
				<bind name="offshopId" value="offshopId"/>
				<include refid="ccs.offshop.getOffshopOpenday"/>
				)				
	</select>

	<select id="selectList" parameterType="omsPickupSearch" resultMap="omsPickupproductExtendsMap">
		/* [oms.pickup.selectList][victor][2016. 08. 23.] */
		<include refid="ccs.common.pagingPre" />
				
			<include refid="oms.pickup.list" />

			<if test='pickupProductStateCds != null and pickupProductStateCds != ""'>	 
			   AND t2.pickup_product_state_cd IN (${pickupProductStateCds})
			</if>
			<if test='offShop != null and offShop != ""'>
				<if test='offShopType == "name"'>
			   AND s.name like #{offShop} || '%'
				</if>
				<if test='offShopType == "id"'>
			   AND s.offshop_id like #{offShop} || '%'
				</if>
			</if>
			<if test='productId != null and productId != ""'>
			   AND t2.product_id = #{productId}
			</if>
		  ORDER BY t2.pickup_id DESC, t2.product_no ASC
		<include refid="ccs.common.pagingPost" />
	</select>
		
	<select id="selectFoList" parameterType="omsOrderSearch" resultMap="omsPickupExtendsMap">
		/* [oms.pickup.selectFoList][victor][2016. 09. 23.] */
		
		<include refid="oms.pickup.list" />
		
		<if test='pickupProductStateCd != null and pickupProductStateCd != ""'>	 
		   AND t2.pickup_product_state_cd = #{pickupProductStateCd}
		</if>
		<if test='orderId != null and orderId != ""'>
		   AND t1.pickup_id = #{orderId}
		</if>
		<if test='area1 != null and area1 != ""'>
		   AND s.area_div1 = #{area1}
		</if>
		<if test='area2 != null and area2 != ""'>
		   AND s.area_div2 = #{area2}
		</if>
		<if test='offshopId != null and offshopId != ""'>
		   AND s.offshop_id = #{offshopId}
		</if>
		<if test='product != null and product != ""'>
			<if test='productType == "id"'>
		   AND t2.product_id = #{product}
			</if>
			<if test='productType == "name"'>
		   AND t2.product_name like '%' || #{product} || '%'
			</if>
		</if>
	  ORDER BY t2.pickup_id DESC, t2.product_no ASC
	</select>
	
<!-- 	<select id="selectOne" parameterType="omsPickupSearch" resultMap="omsPickupproductMap"> -->
	<select id="selectOne" parameterType="omsPickupSearch" resultMap="omsPickupproductExtendsMap">
		/* [oms.pickup.selectOne][victor][2016. 09. 23.] */
		
		<include refid="oms.pickup.list" />
		  
		   AND t1.pickup_id = #{pickupId}
		<if test='pickupProductStateCd != null and pickupProductStateCd != ""'>	 
		   AND t1.pickup_product_state_cd = #{pickupProductStateCd}
		</if>		 
	</select>
	
	<select id="selectAreaList" parameterType="omsOrderSearch" resultMap="ccsOffshopMapAreaMap">
		/* [oms.pickup.selectAreaList][victor][2016. 09. 23.] */
		SELECT s.area_div1
		      ,s.area_div2
		      ,s.name
		      ,s.offshop_id
		      
		  FROM oms_pickup t1
		       INNER JOIN oms_pickupproduct t2
		          ON t1.pickup_id = t2.pickup_id
		       INNER JOIN ccs_offshop s
		          ON t2.offshop_id = s.offshop_id 
		         AND t2.store_id = s.store_id
		 WHERE t1.member_no = #{memberNo}
	  GROUP BY s.area_div1, s.area_div2, s.name, s.offshop_id
	  ORDER BY s.area_div1, s.area_div2
	</select>

	<update id="updatePickupProduct" parameterType="omsPickupproduct">
		/* [oms.pickup.updatePickupProduct][victor][2016. 08. 23.] */
		UPDATE oms_pickupproduct
		   SET upd_dt = TO_DATE(#{updDt},'YYYY-MM-DD HH24:MI:SS')
		      ,upd_id = #{updId}
		      <if test='pickupCancelDt != null and pickupCancelDt != ""'>
		      ,pickup_cancel_dt = TO_DATE(#{pickupCancelDt},'YYYY-MM-DD HH24:MI:SS')
		      </if>
		      <if test='pickupProductStateCd != null and pickupProductStateCd != ""'>
		      ,pickup_product_state_cd = #{pickupProductStateCd}
		      </if>
		      <if test='pickupReserveDt != null and pickupReserveDt != ""'>
		      ,pickup_reserve_dt = TO_DATE(#{pickupReserveDt},'YYYY-MM-DD HH24:MI:SS')
		      </if>
		 WHERE pickup_id = #{pickupId} 
	      <if test='productNo != null and productNo != ""'>
		   AND product_no = #{productNo}
		  </if>
	</update>
	
	<update id="updateOffshopStock" parameterType="pmsOffshopstock">
		/* [oms.pickup.updateOffshopStock][victor][2016. 08. 23.] */
		UPDATE pms_offshopstock
		   SET upd_dt = TO_DATE(#{updDt},'YYYY-MM-DD HH24:MI:SS')
		      ,upd_id = #{updId}
		      ,real_stock_qty = (real_stock_qty + #{realStockQty})
		 WHERE store_id = #{storeId}
		   AND saleproduct_id = #{saleproductId}
		   AND offshop_id = #{offshopId}
	</update>
	
	<resultMap type="omsPickup" id="getPicupAutoCancelListResult">
		<id column="PICKUP_ID" property="pickupId"/>
		<collection property="omsPickupproducts" resultMap="oms.pickup.getPicupAutoCancelListResult2"/>			
	</resultMap>
	<resultMap type="omsPickupproduct" id="getPicupAutoCancelListResult2" autoMapping="true">
		<id column="PICKUP_ID" property="pickupId"/>
		<id column="PRODUCT_NO" property="productNo"/>
		<association property="ccsOffshop" javaType="ccsOffshop">				
			<result column="OFFSHOP_NAME" property="name"/>
			<result column="MANAGER_PHONE" property="managerPhone"/>
		</association>
	</resultMap>
	<select id="getPicupAutoCancelList" resultMap="getPicupAutoCancelListResult">
		SELECT 	A.PICKUP_ID,
				A.NAME1,
				A.PHONE2,
				B.STORE_ID,
				B.PRODUCT_NO,
				B.PRODUCT_NAME,
				B.PICKUP_RESERVE_DT,
				B.OFFSHOP_ID,
				C.NAME AS OFFSHOP_NAME,
				C.MANAGER_PHONE
		  FROM OMS_PICKUP A, OMS_PICKUPPRODUCT B, CCS_OFFSHOP C		  
		 WHERE  A.PICKUP_ID = B.PICKUP_ID
		 	AND B.STORE_ID = C.STORE_ID
		 	AND B.OFFSHOP_ID = C.OFFSHOP_ID
		 	AND B.PICKUP_PRODUCT_STATE_CD IN ('PICKUP_PRODUCT_STATE_CD.REQ', 'PICKUP_PRODUCT_STATE_CD.READY')
		   	AND B.PICKUP_RESERVE_DT &lt; TO_DATE(TO_CHAR(SYSDATE- 2,'YYYYMMDD') || '000000','YYYYMMDDHH24MISS')
	</select>
	
	<update id="cancelPickupAuto">
		/* [oms.pickup.cancelPickupAuto][dennis][2016. 10. 13.] */
		UPDATE OMS_PICKUPPRODUCT
		   SET PICKUP_PRODUCT_STATE_CD = 'PICKUP_PRODUCT_STATE_CD.CANCEL'
		 WHERE PICKUP_ID = #{pickupId}
		 AND PRODUCT_NO = #{productNo}     
		 AND PICKUP_PRODUCT_STATE_CD IN ('PICKUP_PRODUCT_STATE_CD.REQ', 'PICKUP_PRODUCT_STATE_CD.READY')
		 AND PICKUP_RESERVE_DT &lt; TO_DATE(TO_CHAR(SYSDATE- 2,'YYYYMMDD') || '000000','YYYYMMDDHH24MISS') 
	</update>
</mapper>