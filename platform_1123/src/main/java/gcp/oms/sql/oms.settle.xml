<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="oms.settle">

	<select id="getAllChannelList" parameterType="String" resultType="ccsChannel">
	/* [oms.settle.getAllChannelList][peter][2016. 10. 28.] */
		SELECT
			CHANNEL_ID
			, NAME
		FROM CCS_CHANNEL
		WHERE STORE_ID = #{storeId}
		  AND CHANNEL_TYPE_CD = 'CHANNEL_TYPE_CD.AD'
		  AND CHANNEL_STATE_CD = 'CHANNEL_STATE_CD.RUN'
	</select>

	<select id="getSettleList" parameterType="omsSettleSearch" resultType="omsSettle">
	/* [oms.settle.getSettleList][peter][2016. 10. 10.] */
		<include refid="ccs.common.pagingPre" />
			SELECT 
			    CASE WHEN OO.ORDER_TYPE_CD = 'ORDER_TYPE_CD.EXTERNAL'
			    	  THEN 'B2B(외부몰/중국몰)'
			    	 ELSE (CASE WHEN OE.DEAL_TYPE_CD = 'DEAL_TYPE_CD.EMPLOYEE'
			    	 			 THEN '임직원가'
			    	 			WHEN OE.DEAL_TYPE_CD = 'DEAL_TYPE_CD.SHOCKDEAL'
			    	 			 THEN '쇼킹제로가'
			    	 			WHEN OE.DEAL_TYPE_CD = 'DEAL_TYPE_CD.MEMBER'
			    	 			 THEN '멤버십가'
			    	 			WHEN OE.DEAL_TYPE_CD = 'DEAL_TYPE_CD.PREMIUM'
			    	 			 THEN '프리미엄멤버십가'
			    	 			WHEN OE.DEAL_TYPE_CD = 'DEAL_TYPE_CD.CHILDREN'
			    	 			 THEN '다자녀가'
			    	 			WHEN OE.DEAL_TYPE_CD = 'DEAL_TYPE_CD.B2E'
			    	 			 THEN 'B2E가'
			    	 			ELSE '일반가'
			    	 		END
			    	 	)
			    END										AS ORDER_TYPE
			    , TO_CHAR(OE.FIXED_DT, 'YYYY/MM/DD')	AS SALE_STANDARD_DT
			    , TO_CHAR(OO.ORDER_DT, 'YYYY/MM/DD')	AS ORDER_DT
			    , OE.ORDER_ID
			    , CASE WHEN OE.SALE_TYPE_CD = 'SALE_TYPE_CD.PURCHASE'
          				THEN '사입'
          			   WHEN OE.SALE_TYPE_CD = 'SALE_TYPE_CD.CONSIGN'
          			    THEN (CASE WHEN OE.PURCHASE_YN = 'Y'
          							THEN '위탁사입'
          						   ELSE '위탁'
          					  END)
          		  	   ELSE NULL
       			  END							AS SETTLE_TYPE
			    , OE.BUSINESS_ID
			    , OE.BUSINESS_NAME
			    , OE.ERP_BUSINESS_ID
			    , OE.PRODUCT_ID
			    , OE.PRODUCT_NAME
			    , OE.SALEPRODUCT_ID
			    , OE.SALEPRODUCT_NAME
			    , OE.SUPPLY_PRICE
			    , OE.TOTAL_SALE_PRICE			AS SALE_PRICE
			    , DECODE(OE.ERP_ORDER_TYPE_CD, 'ERP_ORDER_TYPE_CD.RETURN', (OE.SUPPLY_PRICE * OE.QTY)*(-1), (OE.SUPPLY_PRICE * OE.QTY))		AS SUPPLY_AMT
			    , DECODE(OE.ERP_ORDER_TYPE_CD, 'ERP_ORDER_TYPE_CD.RETURN', OE.SALE_AMT*(-1), OE.SALE_AMT)				AS SALE_AMT
			    , CASE WHEN OE.ERP_PRODUCT_TYPE_CD = 'ERP_PRODUCT_TYPE_CD.PRODUCT'
			    		THEN (CASE WHEN OE.SALE_TYPE_CD = 'SALE_TYPE_CD.CONSIGN' AND OE.PURCHASE_YN = 'N'
			    					THEN OE.COMMISSION_RATE
			    	   			   ELSE 0
			    	   		  END)
			    	   ELSE 0   
			      END							AS COMMISSION_RATE
			    , 0 AS PAYMENT_AMT
			    , 0 AS PURCHASE_SALES
			    , 0 AS CONSIGN_SALES
			    , DECODE(OE.ERP_ORDER_TYPE_CD, 'ERP_ORDER_TYPE_CD.RETURN', OE.USE_POINT*(-1), OE.USE_POINT)				AS MAEIL_POINT
			    , DECODE(OE.ERP_ORDER_TYPE_CD, 'ERP_ORDER_TYPE_CD.RETURN', OE.DEPOSIT_AMT*(-1), OE.DEPOSIT_AMT)			AS DEPOSIT_AMT
			    , DECODE(OE.ERP_ORDER_TYPE_CD, 'ERP_ORDER_TYPE_CD.RETURN', OE.OWN_DC_AMT*(-1), OE.OWN_DC_AMT)			AS OWN_COUPON_AMT
			    , DECODE(OE.ERP_ORDER_TYPE_CD, 'ERP_ORDER_TYPE_CD.RETURN', OE.BUSINESS_DC_AMT*(-1), OE.BUSINESS_DC_AMT) 			AS BIZ_COUPON_AMT
			    , DECODE(OE.ERP_ORDER_TYPE_CD, 'ERP_ORDER_TYPE_CD.RETURN', OE.PLUS_COUPON_DC_AMT*(-1), OE.PLUS_COUPON_DC_AMT)		AS PLUS_COUPON_AMT
			    , DECODE(OE.ERP_ORDER_TYPE_CD, 'ERP_ORDER_TYPE_CD.RETURN', OE.ORDER_COUPON_DC_AMT*(-1), OE.ORDER_COUPON_DC_AMT)		AS BASKET_COUPON_AMT
			    , DECODE(OE.ERP_ORDER_TYPE_CD, 'ERP_ORDER_TYPE_CD.RETURN', OE.QTY*(-1), OE.QTY)							AS QTY
			    , OO.SITE_ID
			    , (SELECT NAME FROM CCS_SITE WHERE STORE_ID = OO.STORE_ID AND SITE_ID = OO.SITE_ID AND USE_YN = 'Y')	AS SITE_NAME
			    , NVL(OP.CATEGORY_ID, '')		AS CATEGORY_ID
			    , NVL((SELECT NAME FROM PMS_CATEGORY WHERE CATEGORY_ID = OP.CATEGORY_ID AND USE_YN = 'Y'), '')			AS CATEGORY_NAME
			    , OE.TAX_TYPE_CD
			    , OC.CLAIM_TYPE_CD
			    , OE.CLAIM_NO
			    , DECODE(OE.ERP_ORDER_TYPE_CD, 'ERP_ORDER_TYPE_CD.SHIP', OE.FIXED_DT, '')		AS SHIP_DT
			    , DECODE(OE.ERP_ORDER_TYPE_CD, 'ERP_ORDER_TYPE_CD.RETURN', OE.FIXED_DT, '')		AS RETURN_DT
			    , DECODE(OC.CLAIM_TYPE_CD, 'CLAIM_TYPE_CD.RETURN', OC.COMPLETE_DT, '')			AS CLAIM_DT
			    , OE.ERP_PRODUCT_TYPE_CD
			    , OE.SALE_TYPE_CD
			    , OE.PURCHASE_YN
			    , CC.NAME						AS CHANNEL_NAME
			    , OO.OKCASHBAG_NO
			FROM OMS_ERPIF OE
			INNER JOIN OMS_ORDER OO
					ON OO.ORDER_ID = OE.ORDER_ID
				<if test="orderType != null and orderType != ''">
				  <if test="orderType eq 'B2B'.toString()">
				   	AND OO.ORDER_TYPE_CD = 'ORDER_TYPE_CD.EXTERNAL'
				  </if>
				  <if test="orderType eq 'B2E'.toString()">
				   	AND OO.ORDER_TYPE_CD = 'ORDER_TYPE_CD.B2E'
				  </if>
				  <if test="orderType eq 'GNR'.toString() or orderType eq 'DEAL'.toString()">
				   	AND OO.ORDER_TYPE_CD NOT IN ('ORDER_TYPE_CD.B2E', 'ORDER_TYPE_CD.EXTERNAL')
				  </if>
				</if>
				<if test="siteId != null and siteId != ''">
				   AND OO.SITE_ID = #{siteId}
				</if>
			LEFT OUTER JOIN CCS_CHANNEL CC
						 ON CC.STORE_ID = OO.STORE_ID
						AND CC.CHANNEL_ID = OO.CHANNEL_ID
						AND CC.CHANNEL_TYPE_CD = 'CHANNEL_TYPE_CD.AD'
						AND CC.CHANNEL_STATE_CD = 'CHANNEL_STATE_CD.RUN'
			LEFT OUTER JOIN OMS_ORDERPRODUCT OP
						 ON OP.ORDER_ID = OE.ORDER_ID
						AND OP.ORDER_PRODUCT_NO = OE.ORDER_PRODUCT_NO
			LEFT OUTER JOIN OMS_CLAIM OC
						 ON OC.ORDER_ID = OE.ORDER_ID
						AND OC.CLAIM_NO = OE.CLAIM_NO
			WHERE OE.ERP_ORDER_TYPE_CD IN ('ERP_ORDER_TYPE_CD.SHIP','ERP_ORDER_TYPE_CD.RETURN')
			<if test="startDate != null and startDate != '' ">
		  	  AND OE.FIXED_DT &gt;= TO_DATE(#{startDate}, 'YYYY-MM-DD HH24:MI:SS')
		  	</if>
		  	<if test="endDate != null and endDate != '' ">
		  	  AND OE.FIXED_DT &lt;= TO_DATE(#{endDate}, 'YYYY-MM-DD HH24:MI:SS')
		  	</if>
		  	<if test="productId != null and productId != ''">
			  AND OE.PRODUCT_ID = #{productId}
			</if>
			<if test="saleproductId != null and saleproductId != ''">
			  AND OE.SALEPRODUCT_ID = #{saleproductId}
			</if>
			<if test="orderId != null and orderId != ''">
			  AND OE.ORDER_ID = #{orderId}
			</if>
			<if test="dealTypeCd != null and dealTypeCd != ''">
			  <if test="dealTypeCd eq 'GNR'.toString() or dealTypeCd eq 'B2B'.toString()">
			   	AND OE.DEAL_TYPE_CD IS NULL
			  </if>
			  <if test="orderType eq 'B2E'.toString() or orderType eq 'DEAL'.toString()">
			   	AND OE.DEAL_TYPE_CD = #{dealTypeCd}
			  </if>
			</if>
			<if test="settleTypeValue != null and settleTypeValue != ''">
			  <if test="settleTypeValue eq '1'.toString()"><!-- 사입 -->
			  	AND OE.SALE_TYPE_CD = 'SALE_TYPE_CD.PURCHASE'
			  	<!-- AND OP.PURCHASE_YN = 'N' -->
			  </if>
			  <if test="settleTypeValue eq '2'.toString()"><!-- 위탁 -->
			  	AND OE.SALE_TYPE_CD = 'SALE_TYPE_CD.CONSIGN'
			  	AND OE.PURCHASE_YN = 'N'
			  </if>
			  <if test="settleTypeValue eq '3'.toString()"><!-- 사입,위탁 -->
			  	AND OE.SALE_TYPE_CD IN ('SALE_TYPE_CD.PURCHASE', 'SALE_TYPE_CD.CONSIGN')
			  	AND OE.PURCHASE_YN = 'N'
			  </if>
			  <if test="settleTypeValue eq '4'.toString()"><!-- 위탁사입 -->
			  	AND OE.SALE_TYPE_CD = 'SALE_TYPE_CD.CONSIGN'
			  	AND OE.PURCHASE_YN = 'Y'
			  </if>
			  <if test="settleTypeValue eq '5'.toString()"><!-- 사입,위탁사입 -->
			  	AND (OE.SALE_TYPE_CD = 'SALE_TYPE_CD.PURCHASE' 
			  		OR (OE.SALE_TYPE_CD = 'SALE_TYPE_CD.CONSIGN' AND OE.PURCHASE_YN = 'Y'))
			  </if>
			  <if test="settleTypeValue eq '6'.toString()"><!-- 위탁,위탁사입 -->
			  	AND OE.SALE_TYPE_CD = 'SALE_TYPE_CD.CONSIGN'
			  </if>
			</if>
			<if test="businessId != null and businessId != ''">
			   AND (OE.BUSINESS_ID = #{businessId} OR OE.ERP_BUSINESS_ID = #{businessId})
			</if>
			ORDER BY OE.FIXED_DT DESC
		<include refid="ccs.common.pagingPost" />
	</select>

</mapper>