<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mms.mypage">

	<resultMap id="mypageMain" type="mmsMemberZts" autoMapping="true">
		<id property="memberNo" 				column="MEMBER_NO"/>
		<result property="memGradeCd" 			column="MEM_GRADE_CD"/>
		<result property="cpnIssueCnt" 			column="CPN_ISSUE_CNT"/>
		<result property="depositBalanceAmt" 	column="DEPOSIT_BALANCE_AMT"/>
		<result property="carrotBalanceAmt" 	column="CARROT_BALANCE_AMT"/>
		<result property="babyMonth" 			column="BABY_MONTH"/>
		
		<association property="mmsMember"  		javaType="mmsMember">
			<id property="memberNo" 				column="MEMBER_NO"/>
			<result property="memberId" 		column="MEMBER_ID"/>
			<result property="memberName" 		column="MEMBER_NAME"/>
		</association>
	</resultMap>
	<select id="getMypageMemberInfo" resultMap="mypageMain">
		/* [mms.mypage.getMypageMemberInfo][ian][2016. 7. 20.] */
		SELECT MM.MEMBER_NO,
		       MM.MEMBER_ID,
		       MM.MEMBER_NAME,
		       MMZ.MEM_GRADE_CD,
		       MMZ.BABY_YN_CD,
		       MMZ.BABY_GENDER_CD,
		       MMZ.BABY_BIRTHDAY,
		       CASE
		          WHEN MMZ.BABY_BIRTHDAY > SYSDATE
		          THEN
		             '출산예정'
		          WHEN     MMZ.BABY_BIRTHDAY &lt;= SYSDATE AND MMZ.BABY_BIRTHDAY > ADD_MONTHS (SYSDATE, -1)
		          THEN
		             TO_CHAR (TRUNC (SYSDATE - CAST(MMZ.BABY_BIRTHDAY as DATE))) || ' 일'
		          WHEN     MMZ.BABY_BIRTHDAY &lt;= ADD_MONTHS (SYSDATE, -1) AND MMZ.BABY_BIRTHDAY >= ADD_MONTHS (SYSDATE, -24)
		          THEN
		             TRUNC (MONTHS_BETWEEN (SYSDATE, MMZ.BABY_BIRTHDAY)) || ' 개월'
		          WHEN MMZ.BABY_BIRTHDAY &lt; ADD_MONTHS (SYSDATE, -24)
		          THEN
		             FLOOR (MONTHS_BETWEEN (SYSDATE, MMZ.BABY_BIRTHDAY) / 12) || ' 세'
		       END
		          AS BABY_MONTH,
		       CP.CPN_ISSUE_CNT AS CPN_ISSUE_CNT,
		       MD.BALANCE_AMT AS DEPOSIT_BALANCE_AMT,
		       MC.BALANCE_AMT AS CARROT_BALANCE_AMT
		  FROM MMS_MEMBER MM
		       INNER JOIN MMS_MEMBER_ZTS MMZ
		          ON MMZ.MEMBER_NO = MM.MEMBER_NO
		       LEFT OUTER JOIN (  SELECT /*+  index(SUB IDX_SPS_COUPONISSUE_MEM)*/  
		                                SUB.MEMBER_NO,
		                                 COUNT (SUB.COUPON_ID) AS CPN_ISSUE_CNT
		                            FROM    SPS_COUPON MA
		                                 INNER JOIN
		                                    SPS_COUPONISSUE SUB
		                                 ON     SUB.STORE_ID = #{storeId}
		                                    AND SUB.MEMBER_NO = #{memberNo}
		                                    AND SUB.COUPON_ISSUE_STATE_CD = 'COUPON_ISSUE_STATE_CD.REG'
		                                    AND SUB.STORE_ID = MA.STORE_ID
		                                    AND SUB.COUPON_ID = MA.COUPON_ID
		                           WHERE     MA.STORE_ID = #{storeId}
		                                 AND MA.COUPON_STATE_CD = 'COUPON_STATE_CD.RUN'
		                                 AND (    EXTRACT (DAY FROM SUB.USE_END_DT - SYSDATE) * 24 * 60 * 60
		                                      +   EXTRACT (HOUR FROM SUB.USE_END_DT - SYSDATE) * 60 * 60
		                                      +   EXTRACT (MINUTE FROM SUB.USE_END_DT - SYSDATE) * 60
		                                      + EXTRACT (SECOND FROM SUB.USE_END_DT - SYSDATE)) > 0
		                        GROUP BY MEMBER_NO) CP
		          ON (MM.MEMBER_NO = CP.MEMBER_NO)
		       LEFT OUTER JOIN (  SELECT DE.MEMBER_NO,
		                                 NVL (SUM (DE.DEPOSIT_AMT), 0) AS BALANCE_AMT
		                            FROM MMS_DEPOSIT DE
		                        GROUP BY DE.MEMBER_NO) MD
		          ON MM.MEMBER_NO = MD.MEMBER_NO
		       LEFT OUTER JOIN (  SELECT MEMBER_NO,
		                                 NVL (SUM (BALANCE_CARROT), 0) AS BALANCE_AMT
		                            FROM MMS_CARROT
		                           WHERE     MEMBER_NO = #{memberNo}
		                                 AND CARROT > 0
		                                 AND EXPIRE_DT > SYSDATE
		                        GROUP BY MEMBER_NO) MC
		          ON MM.MEMBER_NO = MC.MEMBER_NO
		 WHERE MMZ.MEMBER_NO = #{memberNo}
	</select>
	
    <resultMap id="carrotInfo" type="mmsCarrot" autoMapping="true">
        <id property="memberNo" column="MEMBER_NO"/>
        <result property="endCarrot" column="END_CARROT"/>
        <result property="plus" column="PLUS"/>
        <result property="minus" column="MINUS"/>
    </resultMap>
    <select id="getCarrotInfo" resultMap="carrotInfo">
        /* [mms.mypage.getCarrotInfo][ian][2016. 7. 20.] */
        SELECT NVL (SUM(T1.BALANCE_CARROT), 0) AS BALANCE_AMT,
               NVL (T2.END_CARROT, 0) AS END_CARROT,
               NVL (T3.TYPE, 0) AS "PLUS",
               NVL (T4.TYPE, 0) AS "MINUS"
          FROM    MMS_CARROT T1
               LEFT OUTER JOIN
                  (  SELECT MEMBER_NO, NVL(SUM (BALANCE_CARROT), 0) AS END_CARROT
                       FROM MMS_CARROT
                      WHERE     TO_CHAR (INS_DT, 'YYYY/MM/DD') BETWEEN 
                                                TO_CHAR (ADD_MONTHS (INS_DT, 5), 'YYYY/MM/DD')
                                                AND TO_CHAR (EXPIRE_DT, 'YYYY/MM/DD')
                            AND MEMBER_NO = #{memberNo}
                            AND CARROT &gt; 0
                   GROUP BY MEMBER_NO) T2
               ON T2.MEMBER_NO = T1.MEMBER_NO
               LEFT OUTER JOIN ( SELECT MEMBER_NO, COUNT (*) AS TYPE
                                   FROM MMS_CARROT
                                  WHERE MEMBER_NO = #{memberNo} AND CARROT &gt; 0
									   <if test="startDate != null and startDate != ''">
										  <if test="endDate != null and endDate != ''">
											AND INS_DT BETWEEN TO_DATE(#{startDate}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{endDate}, 'YYYY-MM-DD HH24:MI:SS')
										  </if>
									   </if>
                                 GROUP BY MEMBER_NO) T3
               ON T3.MEMBER_NO = T1.MEMBER_NO
               LEFT OUTER JOIN ( SELECT MEMBER_NO, COUNT (*) AS TYPE
                                   FROM MMS_CARROT
                                  WHERE MEMBER_NO = #{memberNo} AND CARROT &lt; 0
									   <if test="startDate != null and startDate != ''">
										  <if test="endDate != null and endDate != ''">
											AND INS_DT BETWEEN TO_DATE(#{startDate}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{endDate}, 'YYYY-MM-DD HH24:MI:SS')
										  </if>
									   </if>
                                 GROUP BY MEMBER_NO) T4
               ON T4.MEMBER_NO = T1.MEMBER_NO
         WHERE     T1.MEMBER_NO = #{memberNo}
               AND T1.CARROT &gt; 0
               AND T1.EXPIRE_DT &gt; SYSDATE
         GROUP BY T1.MEMBER_NO, T2.END_CARROT, T3.TYPE, T4.TYPE
    </select>
    
    <resultMap id="carrotList" type="mmsCarrot" autoMapping="true">
        <id property="memberNo" column="MEMBER_NO"/>
        <id property="carrotNo" column="CARROT_NO"/>
        <result property="term" column="TERM"/>
        
    </resultMap>
    <select id="getCarrotList" resultMap="carrotList">
        /* [mms.mypage.getCarrotInfo][ian][2016. 7. 20.] */
		<include refid="ccs.common.pagingPre"/>
          SELECT CARROT_NO,
          		 TO_CHAR (INS_DT, 'YYYY/MM/DD') AS INS_DT,
                 CARROT_TYPE_CD,
                 NOTE,
                 CARROT,
                    TO_CHAR (INS_DT, 'YYYY/MM/DD')
                 || ' ~ '
                 || TO_CHAR (EXPIRE_DT, 'YYYY/MM/DD')
                    AS TERM
            FROM MMS_CARROT
           WHERE     MEMBER_NO = #{memberNo}
				<if test="startDate != null and startDate != ''">
				    <if test="endDate != null and endDate != ''">
				    	AND INS_DT BETWEEN TO_DATE(#{startDate}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{endDate}, 'YYYY-MM-DD HH24:MI:SS')
				    </if>
				</if>
				<if test="saveType != null and saveType != ''">
				    <if test="'PLUS'.equals(saveType)">
				    	AND CARROT &gt; 0
				    </if>
				    <if test="'MINUS'.equals(saveType)">
				    	AND CARROT &lt; 0
				    </if>
				</if>
        ORDER BY CARROT_NO DESC
		<include refid="ccs.common.pagingPost"/>
    </select>
    
    <resultMap id="couponInfo" type="spsCouponissue" autoMapping="true">
        <id property="memberNo" column="MEMBER_NO"/>
        <result property="useCoupon" column="USE_COUPON"/>
        <result property="endCoupon" column="END_COUPON"/>
    </resultMap>
    <select id="getCouponInfo" resultMap="couponInfo">
        /* [mms.mypage.getCouponInfo][ian][2016. 7. 20.] */
	        SELECT DISTINCT
	               M1.MEMBER_NO,
	               NVL (T1.USE_COUPON, 0) AS USE_COUPON,
	               NVL (T2.END_COUPON, 0) AS END_COUPON
	          FROM SPS_COUPONISSUE M1
	               LEFT OUTER JOIN (  SELECT MEMBER_NO, COUNT (*) AS USE_COUPON
	                                    FROM SPS_COUPONISSUE C1
			                                 INNER JOIN
			                                    SPS_COUPON SC
			                                 ON     SC.COUPON_ID = C1.COUPON_ID
			                                    AND SC.COUPON_STATE_CD = 'COUPON_STATE_CD.RUN'
			                           WHERE     MEMBER_NO = #{memberNo}
			                                 AND C1.COUPON_ISSUE_STATE_CD = 'COUPON_ISSUE_STATE_CD.REG'
			                                 AND (  EXTRACT (DAY FROM C1.USE_END_DT - SYSDATE) * 24 * 60 * 60
									              + EXTRACT (HOUR FROM C1.USE_END_DT - SYSDATE) * 60 * 60
									              + EXTRACT (MINUTE FROM C1.USE_END_DT - SYSDATE) * 60
									              + EXTRACT (SECOND FROM C1.USE_END_DT - SYSDATE)) &gt; 0
	                        		GROUP BY MEMBER_NO) T1
	                  ON T1.MEMBER_NO = M1.MEMBER_NO
	               LEFT OUTER JOIN (  SELECT MEMBER_NO, COUNT (*) AS END_COUPON
	                                    FROM SPS_COUPONISSUE C1
			                                 INNER JOIN
			                                    SPS_COUPON SC
			                                 ON     SC.COUPON_ID = C1.COUPON_ID
			                                    AND SC.COUPON_STATE_CD = 'COUPON_STATE_CD.RUN'
			                           WHERE     MEMBER_NO = #{memberNo}
			                                 AND C1.COUPON_ISSUE_STATE_CD = 'COUPON_ISSUE_STATE_CD.REG'
			                                 AND (  EXTRACT (DAY FROM C1.USE_END_DT - SYSDATE) * 24 * 60 * 60
								                  + EXTRACT (HOUR FROM C1.USE_END_DT - SYSDATE) * 60 * 60
								                  + EXTRACT (MINUTE FROM C1.USE_END_DT - SYSDATE) * 60
								                  + EXTRACT (SECOND FROM C1.USE_END_DT - SYSDATE)) BETWEEN 0 AND   7 * 24 * 60 * 60
	                                GROUP BY MEMBER_NO) T2
	                  ON T2.MEMBER_NO = T1.MEMBER_NO
	         WHERE M1.MEMBER_NO = #{memberNo}
    </select>
    
    <resultMap id="couponList" type="spsCouponissue" autoMapping="true">
        <id property="memberNo" column="MEMBER_NO"/>
        <id property="couponId" column="COUPON_ID"/>
        <id property="couponIssueNo" column="COUPON_ISSUE_NO"/>
        <result property="deadLine" column="DEADLINE"/>
        <result property="isApp" column="IS_APP"/>
        <association property="spsCoupon" javaType="spsCoupon">
            <id property="couponId" column="COUPON_ID"/>
            
	        <result property="downShowYn" column="DOWN_SHOW_YN"/>
	        <result property="dcValue" column="DC_VALUE"/>
	        <result property="dcApplyTypeCd" column="DC_APPLY_TYPE_CD"/>
	        <result property="couponTypeCd" column="COUPON_TYPE_CD"/>
	        <result property="name" column="NAME"/>
	        <result property="minOrderAmt" column="MIN_ORDER_AMT"/>
	        <result property="maxDcAmt" column="MAX_DC_AMT"/>
        </association>
    </resultMap>
    <select id="getCouponList" resultMap="couponList">
        /* [mms.mypage.getCouponList][ian][2016. 7. 20.] */
		<include refid="ccs.common.pagingPre"/>
          SELECT 
          		 T1.MEMBER_NO,
          		 T1.COUPON_ID,
          		 T1.COUPON_ISSUE_NO,
          		 T2.DOWN_SHOW_YN,
          		 T2.DC_VALUE,
                 T2.DC_APPLY_TYPE_CD,
                 T2.COUPON_TYPE_CD,
                 T2.NAME,
                 T2.MIN_ORDER_AMT,
                 T2.MAX_DC_AMT,
                 T2.TERM_TYPE_CD,
				 TO_CHAR (T1.USE_START_DT, 'YYYYMMDD') AS USE_START_DT,
				 TO_CHAR (T1.USE_END_DT, 'YYYYMMDD') AS USE_END_DT,
		         CASE
		            WHEN (  EXTRACT (DAY FROM T1.USE_END_DT - SYSDATE) * 24 * 60 * 60
		                  + EXTRACT (HOUR FROM T1.USE_END_DT - SYSDATE) * 60 * 60
		                  + EXTRACT (MINUTE FROM T1.USE_END_DT - SYSDATE) * 60
		                  + EXTRACT (SECOND FROM T1.USE_END_DT - SYSDATE)) BETWEEN 0 AND   7 * 24 * 60 * 60
		            THEN
		               'Y'
		            ELSE
		               'N'
		         END
		            AS DEADLINE,
		         CASE C2.DEVICE_TYPE_CD WHEN 'DEVICE_TYPE_CD.APP' THEN 'Y' ELSE 'N' END AS IS_APP
            FROM    SPS_COUPONISSUE T1
                 INNER JOIN
                    SPS_COUPON T2
                 ON     T1.COUPON_ID = T2.COUPON_ID
                    AND T2.COUPON_STATE_CD = 'COUPON_STATE_CD.RUN'
		         LEFT OUTER JOIN CCS_CONTROL C1
		            ON T2.CONTROL_NO = C1.CONTROL_NO AND T2.STORE_ID = C1.STORE_ID
		         LEFT OUTER JOIN CCS_CONTROLDEVICE C2
		            ON     T2.CONTROL_NO = C2.CONTROL_NO
		               AND T2.STORE_ID = C2.STORE_ID
		               AND C2.DEVICE_TYPE_CD = 'DEVICE_TYPE_CD.APP'
           WHERE     T1.MEMBER_NO = #{memberNo}
                 AND T1.COUPON_ISSUE_STATE_CD = 'COUPON_ISSUE_STATE_CD.REG'
	            <if test="couponTypeCd != null and couponTypeCd != ''">
	               AND T2.COUPON_TYPE_CD = #{couponTypeCd}
	            </if>
		         AND (  EXTRACT (DAY FROM T1.USE_END_DT - SYSDATE) * 24 * 60 * 60
		              + EXTRACT (HOUR FROM T1.USE_END_DT - SYSDATE) * 60 * 60
		              + EXTRACT (MINUTE FROM T1.USE_END_DT - SYSDATE) * 60
		              + EXTRACT (SECOND FROM T1.USE_END_DT - SYSDATE)) &gt; 0
        ORDER BY T1.REG_DT DESC
        <include refid="ccs.common.pagingPost"/>
    </select>
    
    <resultMap id="depositInfo" type="mmsDeposit" autoMapping="true">
        <id property="memberNo" column="MEMBER_NO"/>
        <result property="plus" column="PLUS"/>
        <result property="minus" column="MINUS"/>
    </resultMap>
    <select id="getDepositInfo" resultMap="depositInfo">
        /* [mms.mypage.getDepositInfo][ian][2016. 8. 16.] */
		SELECT NVL (T1.DEPOSIT_AMT
			       + (SELECT NVL(SUM (DEPOSIT_AMT), 0)
			            FROM MMS_DEPOSIT
			           WHERE DEPOSIT_NO &lt; T1.DEPOSIT_NO AND MEMBER_NO = T1.MEMBER_NO), 0) AS BALANCE_AMT,
		       NVL (T3.TYPE, 0) AS "PLUS",
		       NVL (T4.TYPE, 0) AS "MINUS"
		  FROM MMS_DEPOSIT T1
		       LEFT OUTER JOIN (  SELECT MEMBER_NO, COUNT (*) AS TYPE
		                            FROM MMS_DEPOSIT
		                           WHERE MEMBER_NO = #{memberNo} AND DEPOSIT_AMT <![CDATA[>]]> 0
									<if test="startDate != null and startDate != ''">
									    <if test="endDate != null and endDate != ''">
									    	AND INS_DT BETWEEN TO_DATE(#{startDate}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{endDate}, 'YYYY-MM-DD HH24:MI:SS')
									    </if>
									</if>
		                        GROUP BY MEMBER_NO) T3
		          ON T3.MEMBER_NO = T1.MEMBER_NO
		       LEFT OUTER JOIN (  SELECT MEMBER_NO, COUNT (*) AS TYPE
		                            FROM MMS_DEPOSIT
		                           WHERE MEMBER_NO = #{memberNo} AND DEPOSIT_AMT <![CDATA[<]]> 0
									<if test="startDate != null and startDate != ''">
									    <if test="endDate != null and endDate != ''">
									    	AND INS_DT BETWEEN TO_DATE(#{startDate}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{endDate}, 'YYYY-MM-DD HH24:MI:SS')
									    </if>
									</if>
		                        GROUP BY MEMBER_NO) T4
		          ON T4.MEMBER_NO = T1.MEMBER_NO
		 WHERE     T1.MEMBER_NO = #{memberNo}
		       AND T1.DEPOSIT_NO = (SELECT MAX (DEPOSIT_NO)
		                             FROM MMS_DEPOSIT
		                            WHERE MEMBER_NO = #{memberNo})
    </select>
    
    <resultMap id="depositList" type="mmsDeposit" autoMapping="true">
        <id property="memberNo" column="MEMBER_NO"/>
        <id property="depositNo" column="DEPOSIT_NO"/>
    </resultMap>
    <select id="getDepositList" resultMap="depositList">
        /* [mms.mypage.getDepositList][ian][2016. 8. 16.] */
        <include refid="ccs.common.pagingPre"/>
		  SELECT DEPOSIT_NO,
		  		 TO_CHAR (INS_DT, 'YYYY/MM/DD') AS INS_DT,
		         DEPOSIT_TYPE_CD,
		         NOTE,
		         DEPOSIT_AMT, 
		         ORDER_ID
		    FROM MMS_DEPOSIT
           WHERE     MEMBER_NO = #{memberNo}
				<if test="startDate != null and startDate != ''">
				    <if test="endDate != null and endDate != ''">
				    	AND INS_DT BETWEEN TO_DATE(#{startDate}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{endDate}, 'YYYY-MM-DD HH24:MI:SS')
				    </if>
				</if>
				<if test="saveType != null and saveType != ''">
				    <if test=" 'PLUS'.equals(saveType)">
				    	AND DEPOSIT_AMT <![CDATA[>]]> 0
				    </if>
				    <if test=" 'MINUS'.equals(saveType)">
				    	AND DEPOSIT_AMT <![CDATA[<]]> 0
				    </if>
				</if>
		ORDER BY DEPOSIT_NO DESC
		<include refid="ccs.common.pagingPost"/>
    </select>
    
    <resultMap id="myQaInfo" type="ccsInquiry" autoMapping="true">
    	<id property="storeId" column="STORE_ID"/>
        <id property="memberNo" column="MEMBER_NO"/>
        <result property="completeCount" column="COMPLETE_COUNT"/>
        <result property="answerCount" column="ANSWER_COUNT"/>
    </resultMap>
    <select id="getMyQaInfo" resultMap="myQaInfo">
	    /* [mms.mypage.getMyQaInfo][ian][2016. 8. 22.] */
	    SELECT MM.MEMBER_NO, NVL (T1.CNT, 0) AS COMPLETE_COUNT, NVL (T2.CNT, 0) AS ANSWER_COUNT
		  FROM MMS_MEMBER_ZTS MMZ
		       INNER JOIN MMS_MEMBER MM
		          ON MMZ.MEMBER_NO = MM.MEMBER_NO AND MMZ.MEMBER_NO = MM.MEMBER_NO
		       LEFT OUTER JOIN (  SELECT CI.MEMBER_NO, COUNT (*) AS CNT
		                            FROM CCS_INQUIRY CI
		                           WHERE     CI.STORE_ID = #{storeId}
		                                 AND CI.INQUIRY_STATE_CD =
		                                        'INQUIRY_STATE_CD.COMPLETE'
										<if test="startDate != null and startDate != ''">
										    <if test="endDate != null and endDate != ''">
										    	AND CI.INS_DT BETWEEN TO_DATE(#{startDate}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{endDate}, 'YYYY-MM-DD HH24:MI:SS')
										    </if>
										</if>
		                        GROUP BY CI.MEMBER_NO) T1
		          ON T1.MEMBER_NO = MM.MEMBER_NO
		       LEFT OUTER JOIN (  SELECT CI.MEMBER_NO, COUNT (*) AS CNT
		                            FROM CCS_INQUIRY CI
		                           WHERE     CI.STORE_ID = #{storeId}
		                                 AND CI.INQUIRY_STATE_CD !=
		                                        'INQUIRY_STATE_CD.COMPLETE'
										<if test="startDate != null and startDate != ''">
										    <if test="endDate != null and endDate != ''">
										    	AND CI.INS_DT BETWEEN TO_DATE(#{startDate}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{endDate}, 'YYYY-MM-DD HH24:MI:SS')
										    </if>
										</if>
		                        GROUP BY CI.MEMBER_NO) T2
		          ON T2.MEMBER_NO = MM.MEMBER_NO
		 WHERE MMZ.STORE_ID = #{storeId} AND MMZ.MEMBER_NO = #{memberNo}
    </select>

    <resultMap id="myQaList" type="ccsInquiry" autoMapping="true">
        <id property="storeId" column="STORE_ID"/>
        <id property="inquiryNo" column="INQUIRY_NO"/>
    </resultMap>
    <select id="getMyQaList" resultMap="myQaList">
        /* [mms.mypage.getMyQaList][ian][2016. 8. 22.] */
        <include refid="ccs.common.pagingPre"/>
		SELECT CI.STORE_ID,
		       CI.INQUIRY_NO,
		       CI.INQUIRY_TYPE_CD,
		       CI.TITLE,
		       CI.DETAIL,
		       TO_CHAR (CI.INS_DT, 'YYYY/MM/DD') AS INS_DT,
		       CI.INQUIRY_STATE_CD,
		       CI.ANSWER_ID,
		       TO_CHAR (CI.ANSWER_DT, 'YYYY/MM/DD') AS ANSWER_DT,
		       CI.ANSWER
		  FROM CCS_INQUIRY CI
		       INNER JOIN MMS_MEMBER MM
		          ON MM.MEMBER_NO = CI.MEMBER_NO
		       INNER JOIN MMS_MEMBER_ZTS MMZ
		          ON     MMZ.MEMBER_NO = MM.MEMBER_NO
		             AND MMZ.STORE_ID = CI.STORE_ID
		             AND MMZ.MEMBER_NO = CI.MEMBER_NO
		 WHERE CI.STORE_ID = #{storeId} AND CI.MEMBER_NO = #{memberNo}
				<if test="startDate != null and startDate != ''">
				    <if test="endDate != null and endDate != ''">
				    	AND CI.INS_DT BETWEEN TO_DATE(#{startDate}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{endDate}, 'YYYY-MM-DD HH24:MI:SS')
				    </if>
				</if>
				<if test="inquiryStateCd != null and inquiryStateCd != ''">
				    <if test="'INQUIRY_STATE_CD.COMPLETE'.equals(inquiryStateCd)">
				    	AND CI.INQUIRY_STATE_CD = 'INQUIRY_STATE_CD.COMPLETE'
				    </if>
<!-- 				    <if test="!'INQUIRY_STATE_CD.COMPLETE'.equals(inquiryStateCd)"> -->
<!-- 				    	AND CI.INQUIRY_STATE_CD IN ('INQUIRY_TYPE_CD.ACCEPT', 'INQUIRY_TYPE_CD.ANSWER') -->
<!-- 				    </if> -->
				</if>
		ORDER BY CI.INQUIRY_NO DESC
		<include refid="ccs.common.pagingPost"/>
    </select>
    
    <resultMap id="productQnaInfo" type="pmsProductqna" autoMapping="true">
    	<id property="storeId" column="STORE_ID"/>
        <id property="memberNo" column="MEMBER_NO"/>
        <result property="completeCount" column="COMPLETE_COUNT"/>
        <result property="answerCount" column="ANSWER_COUNT"/>
    </resultMap>
    <select id="getProductQnaInfo" resultMap="productQnaInfo">
	    /* [mms.mypage.getProductQnaInfo][ian][2016. 8. 22.] */
		SELECT MM.MEMBER_NO, NVL (T1.CNT, 0) AS COMPLETE_COUNT, NVL (T2.CNT, 0) AS ANSWER_COUNT
		  FROM MMS_MEMBER_ZTS MMZ
		       INNER JOIN MMS_MEMBER MM
		          ON MMZ.MEMBER_NO = MM.MEMBER_NO AND MMZ.MEMBER_NO = MM.MEMBER_NO
		       LEFT OUTER JOIN (  SELECT PQ.MEMBER_NO, COUNT (*) AS CNT
		                            FROM PMS_PRODUCTQNA PQ
		                           WHERE     PQ.STORE_ID = #{storeId}
		                                 AND PQ.PRODUCT_QNA_STATE_CD =
		                                        'PRODUCT_QNA_STATE_CD.COMPLETE'
										<if test="startDate != null and startDate != ''">
										    <if test="endDate != null and endDate != ''">
										    	AND PQ.INS_DT BETWEEN TO_DATE(#{startDate}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{endDate}, 'YYYY-MM-DD HH24:MI:SS')
										    </if>
										</if>
		                        GROUP BY PQ.MEMBER_NO) T1
		          ON T1.MEMBER_NO = MM.MEMBER_NO
		       LEFT OUTER JOIN (  SELECT PQ.MEMBER_NO, COUNT (*) AS CNT
		                            FROM PMS_PRODUCTQNA PQ
		                           WHERE     PQ.STORE_ID = #{storeId}
		                                 AND PQ.PRODUCT_QNA_STATE_CD !=
		                                        'PRODUCT_QNA_STATE_CD.COMPLETE'
										<if test="startDate != null and startDate != ''">
										    <if test="endDate != null and endDate != ''">
										    	AND PQ.INS_DT BETWEEN TO_DATE(#{startDate}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{endDate}, 'YYYY-MM-DD HH24:MI:SS')
										    </if>
										</if>
		                        GROUP BY PQ.MEMBER_NO) T2
		          ON T2.MEMBER_NO = MM.MEMBER_NO
		 WHERE MMZ.STORE_ID = #{storeId} AND MMZ.MEMBER_NO = #{memberNo}
    </select>
    
    <resultMap id="productQnaList" type="pmsProductqna" autoMapping="true">
        <id property="storeId" column="STORE_ID"/>
        <id property="productQnaNo" column="PRODUCT_QNA_NO"/>
        
		<association property="pmsProduct" javaType="pmsProduct">
	        <id property="storeId" column="STORE_ID"/>
			<id property="productId" column="PRODUCT_ID" />
			<result property="name" column="PRODUCT_NAME" />
		</association>
		<association property="pmsSaleproduct" javaType="pmsSaleproduct">
	        <id property="storeId" column="STORE_ID"/>
			<id property="saleproductId" column="SALEPRODUCT_ID" />
			<result property="name" column="SALEPRODUCT_NAME" />
		</association>
    </resultMap>
    <select id="getProductQnaList" resultMap="productQnaList">
        /* [mms.mypage.getProductQnaList][ian][2016. 8. 22.] */
        <include refid="ccs.common.pagingPre"/>
		SELECT PQ.STORE_ID,
		       PQ.PRODUCT_QNA_NO,
		       PQ.PRODUCT_QNA_TYPE_CD,
		       PQ.TITLE,
		       PQ.DETAIL,
		       TO_CHAR (PQ.INS_DT, 'YYYY/MM/DD') AS INS_DT,
		       PQ.PRODUCT_QNA_STATE_CD,
		       PQ.ANSWER_ID,
		       TO_CHAR (PQ.ANSWER_DT, 'YYYY/MM/DD') AS ANSWER_DT,
		       PQ.ANSWER,
		       PP.PRODUCT_ID,
		       PS.SALEPRODUCT_ID,
		       PP.NAME AS PRODUCT_NAME,
		       PS.NAME AS SALEPRODUCT_NAME
		  FROM PMS_PRODUCTQNA PQ
		       INNER JOIN MMS_MEMBER MM
		          ON MM.MEMBER_NO = PQ.MEMBER_NO
		       INNER JOIN MMS_MEMBER_ZTS MMZ
		          ON     MMZ.MEMBER_NO = MM.MEMBER_NO
		             AND MMZ.STORE_ID = PQ.STORE_ID
		             AND MMZ.MEMBER_NO = PQ.MEMBER_NO
		       INNER JOIN PMS_PRODUCT PP
		          ON PP.PRODUCT_ID = PQ.PRODUCT_ID AND PP.STORE_ID = PQ.STORE_ID
		       LEFT OUTER JOIN PMS_BRAND PB
		          ON PB.BRAND_ID = PP.BRAND_ID AND PB.STORE_ID = PQ.STORE_ID
		       LEFT OUTER JOIN PMS_SALEPRODUCT PS
		          ON     PS.SALEPRODUCT_ID = PQ.SALEPRODUCT_ID
		             AND PS.PRODUCT_ID = PQ.PRODUCT_ID
		             AND PS.STORE_ID = PQ.STORE_ID
		 WHERE PQ.STORE_ID = #{storeId} AND PQ.MEMBER_NO = #{memberNo}
				<if test="startDate != null and startDate != ''">
				    <if test="endDate != null and endDate != ''">
				    	AND PQ.INS_DT BETWEEN TO_DATE(#{startDate}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{endDate}, 'YYYY-MM-DD HH24:MI:SS')
				    </if>
				</if>
				<if test="productQnaStateCd != null and productQnaStateCd != ''">
				    <if test="'PRODUCT_QNA_STATE_CD.COMPLETE'.equals(productQnaStateCd)">
				    	AND PQ.PRODUCT_QNA_STATE_CD = 'PRODUCT_QNA_STATE_CD.COMPLETE'
				    </if>
<!-- 				    <if test="!'PRODUCT_QNA_STATE_CD.COMPLETE'.equals(productQnaStateCd)"> -->
<!-- 				    	AND PQ.PRODUCT_QNA_STATE_CD IN ('PRODUCT_QNA_STATE_CD.ACCEPT', 'PRODUCT_QNA_STATE_CD.ANSWER') -->
<!-- 				    </if> -->
				</if>
		ORDER BY PQ.PRODUCT_QNA_NO DESC
		<include refid="ccs.common.pagingPost"/>
    </select>

    <resultMap id="receiptList" type="omsOrder" autoMapping="true">
        <id property="storeId" column="STORE_ID"/>
        <id property="orderId" column="ORDER_ID"/>
        
		<association property="omsOrderproduct" javaType="omsOrderproduct">
			<id property="storeId" column="STORE_ID"/>
	        <id property="orderId" column="ORDER_ID"/>
			<id property="orderProductNo" column="ORDER_PRODUCT_NO" />
			<id property="productName" column="PRODUCT_NAME" />
			
			<result property="productName" column="PRODUCT_NAME" />
			<result property="productCnt" column="CNT" />
		</association>
		<collection property="omsPayments" ofType="omsPayment" resultMap="paymentList">
		</collection>
    </resultMap>
    <resultMap id="paymentList" type="omsPayment" autoMapping="true">
    	<id property="paymentNo" column="PAYMENT_NO"/>
    	<id property="orderId" column="ORDER_ID"/>
    </resultMap>
    <select id="getReceiptList" resultMap="receiptList">
        /* [mms.mypage.getReceiptList][ian][2016. 9. 12.] */
        <include refid="ccs.common.pagingPre"/>
		SELECT *
		  FROM (SELECT TO_CHAR (OO.ORDER_DT, 'YYYY/MM/DD') AS ORDER_DT,
		               OO.ORDER_ID,
		               OP.ORDER_PRODUCT_NO,
		               OP.PRODUCT_NAME,
		               COUNT (*) OVER (PARTITION BY OP.ORDER_ID) AS CNT,
		               PAY.PAYMENT_NO,
		               PAY.PAYMENT_AMT,
		               PAY.PAYMENT_METHOD_CD,
		               PAY.PG_APPROVAL_NO,
		               PAY.CASH_RECEIPT_APPROVAL_NO,
		               RANK ()
		                  OVER (PARTITION BY OP.ORDER_ID ORDER BY ORDER_PRODUCT_NO)
		                  AS RN
		          FROM OMS_ORDER OO
		               INNER JOIN OMS_ORDERPRODUCT OP
		                  ON     OP.ORDER_ID = OO.ORDER_ID
		                     AND OP.ORDER_PRODUCT_TYPE_CD IN
		                            ('ORDER_PRODUCT_TYPE_CD.SET',
		                             'ORDER_PRODUCT_TYPE_CD.GENERAL')
		               INNER JOIN OMS_PAYMENT PAY
		                  ON PAY.ORDER_ID = OO.ORDER_ID
		         WHERE     OO.STORE_ID = #{storeId}
		               AND OO.MEMBER_NO = #{memberNo}
		               AND OO.ORDER_TYPE_CD LIKE '%'
					<if test="startDate != null and startDate != ''">
					    <if test="endDate != null and endDate != ''">
					    	AND OO.ORDER_DT BETWEEN TO_DATE(#{startDate}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{endDate}, 'YYYY-MM-DD HH24:MI:SS')
					    </if>
					</if>
					<if test="orderId != null and orderId != ''">
						AND OO.ORDER_ID = #{orderId}
					</if>
		               AND PAY.PAYMENT_STATE_CD = 'PAYMENT_STATE_CD.PAYMENT'
		               AND PAY.MAJOR_PAYMENT_YN = 'Y') M
		 WHERE M.RN = 1
		ORDER BY M.ORDER_ID DESC
		<include refid="ccs.common.pagingPost"/>
    </select>
    
    <resultMap type="pmsProduct" id="getwishlistResult" autoMapping="true">
    	<id property="productId" column="PRODUCT_ID" />
    	<association property="pmsProductprice" javaType="pmsProductprice" resultMap="productpriceWish" />
    </resultMap>
    <resultMap id="productpriceWish" type="pmsProductprice" autoMapping="true">
        <id property="storeId" column="STORE_ID"/>
        <id property="productId" column="PRODUCT_ID"/>
    </resultMap>  
    <select id="getShoppingWishlist" resultMap="getwishlistResult">
    	/* [mms.mypage.getShoppingWishlist][stella][2016. 9. 12.] */
    	<include refid="ccs.common.pagingPre"/>
		SELECT 
			P.*,
			PRI.SALE_PRICE,
	        PRI.POINT_YN,
	        PRI.DELIVERY_FEE_FREE_YN,
	        PRI.COUPON_ID,
	        PRI.PRESTIGE_SALE_PRICE,
	        PRI.PRESTIGE_POINT_YN,
	        PRI.PRESTIGE_DELIVERY_FEE_FREE_YN,
	        PRI.PRESTIGE_COUPON_ID,
	        PRI.VIP_SALE_PRICE,
	        PRI.VIP_POINT_YN,
	        PRI.VIP_DELIVERY_FEE_FREE_YN,
	        PRI.VIP_COUPON_ID,
	        PRI.GOLD_SALE_PRICE,
	        PRI.GOLD_POINT_YN,
	        PRI.GOLD_DELIVERY_FEE_FREE_YN,
	        PRI.GOLD_COUPON_ID,
	        PRI.SILVER_SALE_PRICE,
	        PRI.SILVER_POINT_YN,
	        PRI.SILVER_DELIVERY_FEE_FREE_YN,
	        PRI.SILVER_COUPON_ID,
	        PRI.FAMILY_SALE_PRICE,
	        PRI.FAMILY_POINT_YN,
	        PRI.FAMILY_DELIVERY_FEE_FREE_YN,
	        PRI.FAMILY_COUPON_ID,
	        PRI.WELCOME_SALE_PRICE,
	        PRI.WELCOME_POINT_YN,
	        PRI.WELCOME_DELIVERY_FEE_FREE_YN,
	        PRI.WELCOME_COUPON_ID
		  FROM			
			 PMS_PRODUCTPRICE PRI
			 , (SELECT
			 		PP.PRODUCT_ID,
			        PP.NAME,
			       (SELECT SUM (REAL_STOCK_QTY)
			          FROM PMS_SALEPRODUCT
			         WHERE PRODUCT_ID = PP.PRODUCT_ID AND STORE_ID = PP.STORE_ID) AS REAL_STOCK_QTY,
			        W.INS_DT	AS WISH_INSDT,
			        PP.INS_DT		AS P_INSDT
			      FROM
			     	PMS_PRODUCT PP
			     	JOIN MMS_WISHLIST W
			     		ON W.STORE_ID = PP.STORE_ID
			     		AND W.PRODUCT_ID = PP.PRODUCT_ID
			     		AND W.MEMBER_NO = #{memberNo}
			     WHERE
			     	PP.STORE_ID = #{storeId} ) P
		 WHERE
		 	PRI.STORE_ID = #{storeId}
		 	AND PRI.PRODUCT_ID = P.PRODUCT_ID
		 ORDER BY
		 	P.WISH_INSDT DESC, P.P_INSDT DESC
		<include refid="ccs.common.pagingPost"/>	 	
    </select>
    
    <delete id="deleteWishlist" parameterType="mmsWishlist">
    	/* [mms.mypage.getShoppingWishlist][stella][2016. 9. 12.] */
    	DELETE
    		MMS_WISHLIST
    	 WHERE
    	 	STORE_ID = #{storeId}
    	 	AND MEMBER_NO = #{memberNo}
    	 	<if test="productId != null and productId != ''">
    	 		AND PRODUCT_ID = #{productId}
    	 	</if>  	 	
    </delete>
    
    <resultMap id="latestProductList" type="pmsProduct" autoMapping="true">
        <id property="storeId" column="STORE_ID"/>
        <id property="productId" column="PRODUCT_ID"/>

		<association property="pmsProductprice" javaType="pmsProductprice" resultMap="productprices" />
    </resultMap>
    <resultMap id="productprices" type="pmsProductprice" autoMapping="true">
        <id property="storeId" column="STORE_ID"/>
        <id property="productId" column="PRODUCT_ID"/>
    </resultMap>    
    <select id="getLatestProductListMypage" resultMap="latestProductList">
    	/* [mms.mypage.getLatestProductListMypage][ian][2016. 9. 21.] */
    	<include refid="ccs.common.pagingPre"/>
	    SELECT PP.PRODUCT_ID,
			   PP.NAME,
		       (SELECT SUM (REAL_STOCK_QTY)
		          FROM PMS_SALEPRODUCT
		         WHERE PRODUCT_ID = PP.PRODUCT_ID AND STORE_ID = PP.STORE_ID)
		          AS REAL_STOCK_QTY,
		       PRI.SALE_PRICE,
			   PRI.POINT_YN,
			   PRI.DELIVERY_FEE_FREE_YN,
			   PRI.COUPON_ID,
			   PRI.PRESTIGE_SALE_PRICE,
			   PRI.PRESTIGE_POINT_YN,
			   PRI.PRESTIGE_DELIVERY_FEE_FREE_YN,
			   PRI.PRESTIGE_COUPON_ID,
			   PRI.VIP_SALE_PRICE,
			   PRI.VIP_POINT_YN,
			   PRI.VIP_DELIVERY_FEE_FREE_YN,
			   PRI.VIP_COUPON_ID,
			   PRI.GOLD_SALE_PRICE,
			   PRI.GOLD_POINT_YN,
			   PRI.GOLD_DELIVERY_FEE_FREE_YN,
			   PRI.GOLD_COUPON_ID,
			   PRI.SILVER_SALE_PRICE,
			   PRI.SILVER_POINT_YN,
			   PRI.SILVER_DELIVERY_FEE_FREE_YN,
			   PRI.SILVER_COUPON_ID,
			   PRI.FAMILY_SALE_PRICE,
			   PRI.FAMILY_POINT_YN,
			   PRI.FAMILY_DELIVERY_FEE_FREE_YN,
			   PRI.FAMILY_COUPON_ID,
			   PRI.WELCOME_SALE_PRICE,
			   PRI.WELCOME_POINT_YN,
			   PRI.WELCOME_DELIVERY_FEE_FREE_YN,
			   PRI.WELCOME_COUPON_ID
		  FROM PMS_PRODUCT PP
		       INNER JOIN PMS_PRODUCTPRICE PRI
		          ON PRI.STORE_ID = PP.STORE_ID AND PRI.PRODUCT_ID = PP.PRODUCT_ID
		 WHERE     PP.STORE_ID = #{storeId}
		       AND PP.PRODUCT_ID IN (${productIds})
		<include refid="ccs.common.pagingPost"/>
    </select>
    
    <resultMap id="deliveryStep" type="omsOrder"> 
    	<id property="orderId" column="orderId"/>
    	<result property="deliveryStep" column="STEP"/>
    	<result property="stepCnt" column="CNT"/>
    </resultMap>
    <select id="getDeliveryStep" resultMap="deliveryStep">
    	/* [mms.mypage.getDeliveryStep][ian][2016. 10. 11.] */
		  SELECT STEP, COUNT (*) AS CNT
		    FROM (SELECT CASE ORDER_STATE_CD
		                    WHEN 'ORDER_STATE_CD.REQ'
		                    THEN
		                       'STEP1_ORDER_REQ'
		                    WHEN 'ORDER_STATE_CD.PAYED'
		                    THEN
		                       'STEP2_PAYED'
		                    WHEN 'ORDER_STATE_CD.COMPLETE'
		                    THEN
		                       CASE
		                          WHEN     ORDER_DELIVERY_STATE_CD != 'ORDER_DELIVERY_STATE_CD.SHIP'
		                               AND ORDER_DELIVERY_STATE_CD != 'ORDER_DELIVERY_STATE_CD.DELIVERY'
		                          THEN
		                             'STEP3_PRODUCT_READY'
		                          WHEN ORDER_DELIVERY_STATE_CD = 'ORDER_DELIVERY_STATE_CD.SHIP'
		                          THEN
		                             'STEP4_DELIVERY'
		                          WHEN ORDER_DELIVERY_STATE_CD = 'ORDER_DELIVERY_STATE_CD.DELIVERY'
		                          THEN
		                             'STEP5_DELIVERY_COMPLETE'
		                       END
		                 END
		                    AS STEP
		            FROM OMS_ORDER
		           WHERE     STORE_ID = #{storeId}
		           		 AND MEMBER_NO = #{memberNo}
		           		 AND ORDER_TYPE_CD LIKE '%'
		                 AND ORDER_STATE_CD NOT IN ('ORDER_STATE_CD.CONFIRMED', 'ORDER_STATE_CD.CANCEL')
		           UNION ALL
		           SELECT CASE OP2.PICKUP_PRODUCT_STATE_CD
		                     WHEN 'PICKUP_PRODUCT_STATE_CD.REQ'
		                     THEN
		                        'STEP1_ORDER_REQ'
		                     WHEN 'PICKUP_PRODUCT_STATE_CD.READY'
		                     THEN
		                        'STEP3_PRODUCT_READY'
		                     WHEN 'PICKUP_PRODUCT_STATE_CD.DELIVERY'
		                     THEN
		                        'STEP5_DELIVERY_COMPLETE'
		                  END
		             FROM    OMS_PICKUP OP1
		                  INNER JOIN
		                     OMS_PICKUPPRODUCT OP2
		                  ON     OP1.PICKUP_ID = OP2.PICKUP_ID
		                     AND OP2.STORE_ID = #{storeId}
		                     AND PICKUP_PRODUCT_STATE_CD != 'PICKUP_PRODUCT_STATE_CD.CANCEL'
		            WHERE MEMBER_NO = #{memberNo})
		GROUP BY STEP
    </select>
    
    <resultMap type="omsOrder" id="latestOrderList" autoMapping="true">
    	<id property="orderId" column="ORDER_ID" />
    	<collection property="omsOrderproducts" ofType="omsOrderproduct" resultMap="orderList" />
    	<collection property="omsPickupproducts" ofType="omsPickupproduct" resultMap="pickupList" />
    </resultMap>
    <resultMap type="omsOrderproduct" id="orderList" autoMapping="true">
	    <id property="orderId" column="ORDER_ID" />
	    <id property="orderProductNo" column="ORDER_PRODUCT_NO" />
    </resultMap>
    <resultMap type="omsPickupproduct" id="pickupList" autoMapping="true">
    	<id property="pickupId" column="ORDER_ID" />
    	<id property="productNo" column="PICK_PRODUCT_NO" />
    	
    	<result property="pickupProductStateCd" column="PICK_PICKUP_PRODUCT_STATE_CD"/>
    	<result property="orderAmt" column="PICK_ORDER_AMT"/>
    	<result property="offshopId" column="PICK_OFFSHOP_ID"/>
    	<result property="orderQty" column="PICK_ORDER_QTY"/>
    	<result property="productId" column="PICK_PRODUCT_ID"/>
    	<result property="productName" column="PICK_PRODUCT_NAME"/>
    	<result property="saleproductId" column="PICK_SALEPRODUCT_ID"/>
    	<result property="saleproductName" column="PICK_SALEPRODUCT_NAME"/>
    	<result property="pickupReserveDt" column="PICK_PICKUP_RESERVE_DT"/>
    	<result property="pickupDeliveryDt" column="PICK_PICKUP_DELIVERY_DT"/>
    	<result property="pickupCancelDt" column="PICK_PICKUP_CANCEL_DT"/>
    	<result property="offshopName" column="PICK_OFFSHOP_NAME"/>
    </resultMap>
    <select id="getLatestOrderList" resultMap="latestOrderList">
		  SELECT ORDER_ID,
		         TO_CHAR (CHG_ORDER_DT, 'YYYY-MM-DD') AS ORDER_DT,
		         ORDER_TYPE_CD,
		         ORDER_STATE_CD,
		         ORDER_AMT,
		         OFFSHOP_ID,
		         ORDER_ID AS SUB_ORDER_ID,
		         ORDER_PRODUCT_NO,
		         ORDER_PRODUCT_STATE_CD,
		         ORDER_PRODUCT_TYPE_CD,
		         ORDER_QTY,
		         PRESENT_ID,
		         PRESENT_NAME,
		         PRODUCT_ID,
		         PRODUCT_NAME,
		         SALEPRODUCT_ID,
		         SALEPRODUCT_NAME,
		         SALE_PRICE,
		         SET_QTY,
		         TOTAL_SALE_PRICE,
		         UPPER_ORDER_PRODUCT_NO,
		         WRAP_YN,
		         PICK_PRODUCT_NO,
		         PICK_PICKUP_PRODUCT_STATE_CD,
		         PICK_ORDER_AMT,
		         PICK_OFFSHOP_ID,
		         PICK_ORDER_QTY,
		         PICK_PRODUCT_ID,
		         PICK_PRODUCT_NAME,
		         PICK_SALEPRODUCT_ID,
		         PICK_SALEPRODUCT_NAME,
		         PICK_PICKUP_RESERVE_DT,
		         PICK_PICKUP_DELIVERY_DT,
		         PICK_PICKUP_CANCEL_DT,
		         PICK_OFFSHOP_NAME
		    FROM (SELECT T1.ORDER_ID,
		                 T1.ORDER_DT AS CHG_ORDER_DT,
		                 T1.ORDER_TYPE_CD,
		                 T1.ORDER_STATE_CD,
		                 T1.ORDER_AMT,
		                 T4.OFFSHOP_ID,
		                 T4.ORDER_ID AS SUB_ORDER_ID,
		                 T4.ORDER_PRODUCT_NO,
		                 T4.ORDER_PRODUCT_STATE_CD,
		                 T4.ORDER_PRODUCT_TYPE_CD,
		                 T4.ORDER_QTY,
		                 T4.PRESENT_ID,
		                 T4.PRESENT_NAME,
		                 T4.PRODUCT_ID,
		                 T4.PRODUCT_NAME,
		                 T4.SALEPRODUCT_ID,
		                 T4.SALEPRODUCT_NAME,
		                 T4.SALE_PRICE,
		                 T4.SET_QTY,
		                 T4.TOTAL_SALE_PRICE,
		                 T4.UPPER_ORDER_PRODUCT_NO,
		                 T4.WRAP_YN,
		                 0 AS PICK_PRODUCT_NO,
		                 NULL AS PICK_PICKUP_PRODUCT_STATE_CD,
		                 NULL AS PICK_ORDER_AMT,
		                 NULL AS PICK_OFFSHOP_ID,
		                 NULL AS PICK_ORDER_QTY,
		                 NULL AS PICK_PRODUCT_ID,
		                 NULL AS PICK_PRODUCT_NAME,
		                 NULL AS PICK_SALEPRODUCT_ID,
		                 NULL AS PICK_SALEPRODUCT_NAME,
		                 NULL AS PICK_PICKUP_RESERVE_DT,
		                 NULL AS PICK_PICKUP_DELIVERY_DT,
		                 NULL AS PICK_PICKUP_CANCEL_DT,
		                 NULL AS PICK_OFFSHOP_NAME
		            FROM    OMS_ORDER T1
		                 INNER JOIN
		                    OMS_ORDERPRODUCT T4
		                 ON T1.ORDER_ID = T4.ORDER_ID
		           WHERE     T1.STORE_ID = #{storeId}
		                 AND T1.MEMBER_NO = #{memberNo}
		                 AND T1.ORDER_TYPE_CD LIKE '%'
		                 AND T1.ORDER_DT BETWEEN SYSDATE - 7 AND SYSDATE
		          UNION ALL
		          SELECT T1.PICKUP_ID AS ORDER_ID,
		                 T1.PICKUP_REQ_DT,
		                 '',
		                 '',
		                 0,
		                 '',
		                 '',
		                 0,
		                 '',
		                 '',
		                 0,
		                 '',
		                 '',
		                 '',
		                 '',
		                 '',
		                 '',
		                 0,
		                 0,
		                 0,
		                 0,
		                 '',
		                 T2.PRODUCT_NO,
		                 T2.PICKUP_PRODUCT_STATE_CD,
		                 T2.ORDER_AMT * T2.ORDER_QTY AS ORDER_AMT,
		                 T2.OFFSHOP_ID AS SHOP_ID,
		                 T2.ORDER_QTY,
		                 T2.PRODUCT_ID,
		                 T2.PRODUCT_NAME,
		                 T2.SALEPRODUCT_ID,
		                 T2.SALEPRODUCT_NAME,
		                 TO_CHAR (T2.PICKUP_RESERVE_DT, 'YYYY-MM-DD') AS PICKUP_RESERVE_DT,
		                 T2.PICKUP_DELIVERY_DT,
		                 T2.PICKUP_CANCEL_DT,
		                 S.NAME
		            FROM OMS_PICKUP T1
		                 INNER JOIN OMS_PICKUPPRODUCT T2
		                    ON T1.PICKUP_ID = T2.PICKUP_ID
		                 INNER JOIN CCS_OFFSHOP S
		                    ON     T2.OFFSHOP_ID = S.OFFSHOP_ID
		                       AND T2.STORE_ID = S.STORE_ID
		           WHERE     T1.MEMBER_NO = #{memberNo}
		                 AND T1.PICKUP_REQ_DT BETWEEN SYSDATE - 7 AND SYSDATE
		                 AND T2.STORE_ID = #{storeId})
		ORDER BY CHG_ORDER_DT DESC
    </select>

</mapper>