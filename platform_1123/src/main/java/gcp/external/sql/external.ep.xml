<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="external.ep">

	<select id="getEpProductList" parameterType="hashMap" resultType="pmsProduct">
	/* [external.ep.getEpProductList][peter][2016. 10. 22.] */
		SELECT 
			PRODUCT_ID
			, NAME
			, LIST_PRICE
			, SALE_PRICE
			, TRUNC(SALE_PRICE * (POINT_SAVE_RATE / 100), -1)		AS TOTAL_POINT
			, DETAIL1
			, DETAIL2
			, DETAIL3
			, DETAIL4
			, DETAIL5
			, DETAIL6
			, OVERSEAS_PURCHASE_YN
			, BRAND_NAME
			, MAKER
			, ORIGIN
			, DELIVERY_FEE_FREE_YN
			, NVL(DELIVERY_FEE, 0)					AS DELIVERY_FEE
			, NVL(MIN_DELIVERY_FREE_AMT, 0)			AS MIN_DELIVERY_FREE_AMT
			, DECODE(GENDER_TYPE_CD, 'GENDER_TYPE_CD.MALE', '남성', 'GENDER_TYPE_CD.FEMALE', '여성', '남녀공용')	AS DETAIL7
			, CASE WHEN INS_DT = UPD_DT
					THEN 'I'
				   ELSE (CASE WHEN SALE_STATE_CD = 'SALE_STATE_CD.SALE'
				   				THEN 'U'
				   			  ELSE 'D'
				   		 END)
			  END									AS SAVE_TYPE
			, TO_CHAR(UPD_DT, 'YYYYMMDDHH24MISS')	AS UPD_DT
			, IMG								AS IMG_URL
		FROM (SELECT 
				PP.PRODUCT_ID
				, PP.NAME
				, PP.LIST_PRICE
				, PP.SALE_PRICE
				, PP.POINT_SAVE_RATE
				, MIN(DC1.NAME)						AS DETAIL1
				, MIN(DC1.DISPLAY_CATEGORY_ID)		AS DETAIL2
				, MIN(DC2.NAME)						AS DETAIL3
				, MIN(DC2.DISPLAY_CATEGORY_ID)		AS DETAIL4
				, MIN(DC3.NAME)						AS DETAIL5
				, MIN(DC3.DISPLAY_CATEGORY_ID)		AS DETAIL6
				, PP.OVERSEAS_PURCHASE_YN
				, PB.NAME							AS BRAND_NAME
				, PP.MAKER
				, PP.ORIGIN
				, PP.DELIVERY_FEE_FREE_YN
				, DP.DELIVERY_FEE
				, DP.MIN_DELIVERY_FREE_AMT
				, PP.GENDER_TYPE_CD
				, PP.SALE_STATE_CD
				, PP.INS_DT
				, PP.UPD_DT
				, PI.IMG
			FROM (SELECT * FROM PMS_PRODUCT 
				  WHERE PRODUCT_ID IN (SELECT PRODUCT_ID FROM PMS_PRODUCT 
	      								MINUS
	      								(SELECT PRODUCT_ID FROM PMS_EPEXCPRODUCT WHERE STORE_ID = #{storeId} AND EXC_PRODUCT_TYPE_CD = 'EXC_PRODUCT_TYPE_CD.PRODUCT'
	       								 UNION ALL
	       								 SELECT P.PRODUCT_ID FROM PMS_EPEXCPRODUCT E
	       								 INNER JOIN PMS_PRODUCT P
	           									 ON P.STORE_ID = E.STORE_ID
	            								AND P.BUSINESS_ID = E.BUSINESS_ID
	       								 WHERE E.STORE_ID = #{storeId}
	         							   AND E.EXC_PRODUCT_TYPE_CD = 'EXC_PRODUCT_TYPE_CD.BUSINESS'))
	     	) PP
			INNER JOIN PMS_BRAND PB
					ON PB.STORE_ID = PP.STORE_ID
				   AND PB.BRAND_ID = PP.BRAND_ID
			INNER JOIN PMS_PRODUCTIMG PI
					ON PI.STORE_ID = PP.STORE_ID
				   AND PI.PRODUCT_ID = PP.PRODUCT_ID
				   AND PI.IMG_NO = 0
			INNER JOIN DMS_DISPLAYCATEGORYPRODUCT CP
					ON CP.STORE_ID = PP.STORE_ID
				   AND CP.PRODUCT_ID = PP.PRODUCT_ID
				   AND CP.DISPLAY_YN = 'Y'
			INNER JOIN DMS_DISPLAYCATEGORY DC3
					ON DC3.STORE_ID = CP.STORE_ID
				   AND DC3.DISPLAY_CATEGORY_ID = CP.DISPLAY_CATEGORY_ID
				   AND DC3.DISPLAY_YN = 'Y'
			INNER JOIN DMS_DISPLAYCATEGORY DC2
					ON DC2.STORE_ID = DC3.STORE_ID
				   AND DC2.DISPLAY_CATEGORY_ID = DC3.UPPER_DISPLAY_CATEGORY_ID 
				   AND DC2.DISPLAY_YN = 'Y'
			INNER JOIN DMS_DISPLAYCATEGORY DC1
					ON DC1.STORE_ID = DC2.STORE_ID
				   AND DC1.DISPLAY_CATEGORY_ID = DC2.UPPER_DISPLAY_CATEGORY_ID
				   AND DC1.UPPER_DISPLAY_CATEGORY_ID = '00001'
				   AND DC1.DISPLAY_YN = 'Y'
			INNER JOIN CCS_DELIVERYPOLICY DP
					ON DP.STORE_ID = PP.STORE_ID
				   AND DP.BUSINESS_ID = PP.BUSINESS_ID
			WHERE PP.STORE_ID = #{storeId}
			  AND PP.PRODUCT_TYPE_CD IN ('PRODUCT_TYPE_CD.GENERAL', 'PRODUCT_TYPE_CD.SET')
			  AND PP.USE_YN = 'Y'
			  AND PP.SALE_STATE_CD IN ('SALE_STATE_CD.SALE', 'SALE_STATE_CD.SOLDOUT', 'SALE_STATE_CD.STOP', 'SALE_STATE_CD.MDSTOP', 'SALE_STATE_CD.END')
			  AND PP.CONTROL_NO IS NULL
		  	<if test="getDataTime != null and getDataTime != ''">
			  AND PP.UPD_DT &gt; TRUNC(SYSDATE,'HH24') - (#{getDataTime}/24)
			</if>
			GROUP BY PP.PRODUCT_ID
					, PP.NAME
					, PP.LIST_PRICE
					, PP.SALE_PRICE
					, PP.POINT_SAVE_RATE
					, PP.OVERSEAS_PURCHASE_YN
					, PB.NAME
					, PP.MAKER
					, PP.ORIGIN
					, PP.DELIVERY_FEE_FREE_YN
					, DP.DELIVERY_FEE
					, DP.MIN_DELIVERY_FREE_AMT
					, PP.GENDER_TYPE_CD
					, PP.SALE_STATE_CD
					, PP.INS_DT
					, PP.UPD_DT
					, PI.IMG
			)
	</select>

	<select id="getEpNaverSaleList" resultType="gcp.external.model.EpNaver">
	/* [external.ep.getEpNaverSaleList][peter][2016. 8. 31.] */
		SELECT	PRODUCT_ID
				, SUM(OUT_QTY - RETURN_QTY - CANCEL_QTY)	AS SUM_ORDER_QTY
				, SUM((SALE_PRICE + ADD_SALE_PRICE - ORDER_COUPON_DC_AMT) * (OUT_QTY - RETURN_QTY - CANCEL_QTY))	AS SUM_SALE_PRICE
		  FROM OMS_ORDERPRODUCT
		 WHERE ORDER_ID IN (SELECT ORDER_ID 
		 					  FROM OMS_ORDER
							 WHERE CHANNEL_ID = '7'
							   AND ORDER_DT BETWEEN TRUNC(SYSDATE)-2 AND TRUNC(SYSDATE)-1)
		   AND ORDER_PRODUCT_TYPE_CD IN ('ORDER_PRODUCT_TYPE_CD.GENERAL','ORDER_PRODUCT_TYPE_CD.SUB')
		   AND ((SALE_PRICE + ADD_SALE_PRICE - ORDER_COUPON_DC_AMT) * (OUT_QTY - RETURN_QTY - CANCEL_QTY)) > 0
		GROUP BY PRODUCT_ID
	</select>

	<select id="getEpNaverSaleReviewCount" parameterType="hashMap" resultType="int">
	/* [external.ep.getEpNaverSaleList][peter][2016. 9. 1.] */
		SELECT	COUNT(*)
		  FROM PMS_REVIEW
		 WHERE STORE_ID = #{storeId}
		   AND PRODUCT_ID = #{productId}
	</select>

	<select id="getEpCoochaXmlList" parameterType="String" resultType="pmsProduct">
	/* [external.ep.getEpCoochaXmlList][peter][2016. 11. 2.] */
		SELECT 
			PRODUCT_ID
			, NAME
			, TO_CHAR(SALE_START_DT, 'YYYY-MM-DD HH24:MI:SS')	AS SALE_START_DT
			, TO_CHAR(SALE_END_DT, 'YYYY-MM-DD HH24:MI:SS')		AS SALE_END_DT
			, LIST_PRICE
			, SALE_PRICE
			, TRUNC(100 - ((SALE_PRICE / LIST_PRICE) * 100))	AS COMMISSION_RATE
			, DETAIL1
			, DETAIL2
			, DETAIL3
			, MIN_QTY
			, DELIVERY_FEE_FREE_YN
			, NVL(DELIVERY_FEE, 0)				AS DELIVERY_FEE
			, NVL(MIN_DELIVERY_FREE_AMT, 0)		AS MIN_DELIVERY_FREE_AMT
			, IMG								AS IMG_URL
		FROM (SELECT 
				PP.PRODUCT_ID
				, PP.NAME
				, PP.SALE_START_DT
				, PP.SALE_END_DT
				, PP.LIST_PRICE
				, PP.SALE_PRICE
				, MIN(DC1.NAME)					AS DETAIL1
				, MIN(DC2.NAME)					AS DETAIL2
				, MIN(DC3.NAME)					AS DETAIL3
				, PP.MIN_QTY
				, PP.DELIVERY_FEE_FREE_YN
				, DP.DELIVERY_FEE
				, DP.MIN_DELIVERY_FREE_AMT
				, PI.IMG
			FROM (SELECT * FROM PMS_PRODUCT 
				  WHERE PRODUCT_ID IN (SELECT PRODUCT_ID FROM PMS_PRODUCT 
	      								MINUS
	      								(SELECT PRODUCT_ID FROM PMS_EPEXCPRODUCT WHERE STORE_ID = #{storeId} AND EXC_PRODUCT_TYPE_CD = 'EXC_PRODUCT_TYPE_CD.PRODUCT'
	       								 UNION ALL
	       								 SELECT P.PRODUCT_ID FROM PMS_EPEXCPRODUCT E
	       								 INNER JOIN PMS_PRODUCT P
	           									 ON P.STORE_ID = E.STORE_ID
	            								AND P.BUSINESS_ID = E.BUSINESS_ID
	       								 WHERE E.STORE_ID = #{storeId}
	         							   AND E.EXC_PRODUCT_TYPE_CD = 'EXC_PRODUCT_TYPE_CD.BUSINESS'))
	     	) PP
			INNER JOIN PMS_PRODUCTIMG PI
					ON PI.STORE_ID = PP.STORE_ID
				   AND PI.PRODUCT_ID = PP.PRODUCT_ID
				   AND PI.IMG_NO = 0
			INNER JOIN DMS_DISPLAYCATEGORYPRODUCT CP
					ON CP.STORE_ID = PP.STORE_ID
				   AND CP.PRODUCT_ID = PP.PRODUCT_ID
				   AND CP.DISPLAY_YN = 'Y'
			INNER JOIN DMS_DISPLAYCATEGORY DC3
					ON DC3.STORE_ID = CP.STORE_ID
				   AND DC3.DISPLAY_CATEGORY_ID = CP.DISPLAY_CATEGORY_ID
				   AND DC3.DISPLAY_YN = 'Y'
			INNER JOIN DMS_DISPLAYCATEGORY DC2
					ON DC2.STORE_ID = DC3.STORE_ID
				   AND DC2.DISPLAY_CATEGORY_ID = DC3.UPPER_DISPLAY_CATEGORY_ID 
				   AND DC2.DISPLAY_YN = 'Y'
			INNER JOIN DMS_DISPLAYCATEGORY DC1
					ON DC1.STORE_ID = DC2.STORE_ID
				   AND DC1.DISPLAY_CATEGORY_ID = DC2.UPPER_DISPLAY_CATEGORY_ID
				   AND DC1.UPPER_DISPLAY_CATEGORY_ID = '00001'
				   AND DC1.DISPLAY_YN = 'Y'
			INNER JOIN CCS_DELIVERYPOLICY DP
					ON DP.STORE_ID = PP.STORE_ID
				   AND DP.BUSINESS_ID = PP.BUSINESS_ID
			WHERE PP.STORE_ID = #{storeId}
			  AND PP.PRODUCT_TYPE_CD IN ('PRODUCT_TYPE_CD.GENERAL', 'PRODUCT_TYPE_CD.SET')
			  AND PP.USE_YN = 'Y'
			  AND PP.SALE_STATE_CD IN ('SALE_STATE_CD.SALE', 'SALE_STATE_CD.SOLDOUT', 'SALE_STATE_CD.STOP', 'SALE_STATE_CD.MDSTOP', 'SALE_STATE_CD.END')
			  AND PP.CONTROL_NO IS NULL
			GROUP BY PP.PRODUCT_ID
					, PP.NAME
					, PP.SALE_START_DT
					, PP.SALE_END_DT
					, PP.LIST_PRICE
					, PP.SALE_PRICE
					, PP.MIN_QTY
					, PP.DELIVERY_FEE_FREE_YN
					, DP.DELIVERY_FEE
					, DP.MIN_DELIVERY_FREE_AMT
					, PI.IMG
					, PP.UPD_DT
			ORDER BY PP.UPD_DT DESC
			)
		WHERE ROWNUM &lt;= 1000
	</select>

	<select id="getRecobellProductList" parameterType="hashMap" resultType="recobellData">
	/* [external.ep.getRecobellProductList][peter][2016. 10. 22.] */
		SELECT 
			PP.PRODUCT_ID
			, PP.ERP_PRODUCT_ID
			, NVL2(PB.ERP_BRAND_ID, PB.ERP_BRAND_ID, PB.BRAND_ID)	AS BRAND_ID
			, MIN(DC1.DISPLAY_CATEGORY_ID)	AS DISPLAY_CATEGORY_ID1
			, MIN(DC2.DISPLAY_CATEGORY_ID)	AS DISPLAY_CATEGORY_ID2
			, MIN(DC3.DISPLAY_CATEGORY_ID)	AS DISPLAY_CATEGORY_ID3
			, PP.LIST_PRICE
			, PP.SALE_PRICE
		FROM PMS_PRODUCT PP
		INNER JOIN PMS_BRAND PB
				ON PB.STORE_ID = PP.STORE_ID
			   AND PB.BRAND_ID = PP.BRAND_ID
		INNER JOIN DMS_DISPLAYCATEGORYPRODUCT CP
				ON CP.STORE_ID = PP.STORE_ID
			   AND CP.PRODUCT_ID = PP.PRODUCT_ID
			   AND CP.DISPLAY_YN = 'Y'
		INNER JOIN DMS_DISPLAYCATEGORY DC3
				ON DC3.STORE_ID = CP.STORE_ID
			   AND DC3.DISPLAY_CATEGORY_ID = CP.DISPLAY_CATEGORY_ID
			   AND DC3.DISPLAY_YN = 'Y'
		INNER JOIN DMS_DISPLAYCATEGORY DC2
				ON DC2.STORE_ID = DC3.STORE_ID
			   AND DC2.DISPLAY_CATEGORY_ID = DC3.UPPER_DISPLAY_CATEGORY_ID 
			   AND DC2.DISPLAY_YN = 'Y'
		INNER JOIN DMS_DISPLAYCATEGORY DC1
				ON DC1.STORE_ID = DC2.STORE_ID
			   AND DC1.DISPLAY_CATEGORY_ID = DC2.UPPER_DISPLAY_CATEGORY_ID
			   AND DC1.UPPER_DISPLAY_CATEGORY_ID = '00001'
			   AND DC1.DISPLAY_YN = 'Y'
		WHERE PP.STORE_ID = #{storeId}
		  AND PP.PRODUCT_TYPE_CD IN ('PRODUCT_TYPE_CD.GENERAL', 'PRODUCT_TYPE_CD.SET')
		  AND PP.SALE_STATE_CD = 'SALE_STATE_CD.SALE'
		  AND PP.USE_YN = 'Y'
		GROUP BY PP.PRODUCT_ID
				, PP.ERP_PRODUCT_ID
				, NVL2(PB.ERP_BRAND_ID, PB.ERP_BRAND_ID, PB.BRAND_ID)
				, PP.LIST_PRICE
				, PP.SALE_PRICE
	</select>

<!-- 	<select id="getRecobellProductList" parameterType="hashMap" resultType="recobellData">
	/* [external.ep.getRecobellProductList][peter][2016. 10. 22.] */
		SELECT 
			PP.PRODUCT_ID
			, PP.ERP_PRODUCT_ID
			, PB.BRAND_ID
			, DC.DISPLAY_CATEGORY_ID
			, PP.LIST_PRICE
			, PP.SALE_PRICE
		FROM PMS_PRODUCT PP
		INNER JOIN PMS_BRAND PB
				ON PB.STORE_ID = PP.STORE_ID
			   AND PB.BRAND_ID = PP.BRAND_ID
		INNER JOIN DMS_DISPLAYCATEGORYPRODUCT CP
				ON CP.STORE_ID = PP.STORE_ID
			   AND CP.PRODUCT_ID = PP.PRODUCT_ID
			   AND CP.DISPLAY_YN = 'Y'
		INNER JOIN DMS_DISPLAYCATEGORY DC
				ON DC.STORE_ID = CP.STORE_ID
			   AND DC.DISPLAY_CATEGORY_ID = CP.DISPLAY_CATEGORY_ID
			   AND DC.DISPLAY_YN = 'Y'
		WHERE PP.STORE_ID = #{storeId}
		  AND PP.PRODUCT_TYPE_CD IN ('PRODUCT_TYPE_CD.GENERAL', 'PRODUCT_TYPE_CD.SET')
		  AND PP.SALE_STATE_CD = 'SALE_STATE_CD.SALE'
		  AND PP.USE_YN = 'Y'
	</select> -->

<!-- 	<select id="getDisplayCategoryList" resultType="String">
	/* [external.ep.getDisplayCategoryList][peter][2016. 10. 27.] */
		SELECT LTRIM (SYS_CONNECT_BY_PATH (DISPLAY_CATEGORY_ID, ','), ',') CATEPATH
          FROM DMS_DISPLAYCATEGORY
         WHERE STORE_ID = #{storeId}
           AND DISPLAY_YN = 'Y'
        START WITH UPPER_DISPLAY_CATEGORY_ID = '00001'
        CONNECT BY PRIOR DISPLAY_CATEGORY_ID = UPPER_DISPLAY_CATEGORY_ID AND LEVEL &lt;= 3
	</select> -->

 </mapper>