<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="external.receiveorder">

	<!-- 중국몰 주문수집 -->
	<select id="getExistCount" parameterType="hashMap" resultType="int">
	/* [external.receiveorder.getExistCount][peter][2016. 8. 4.] */
		SELECT
			COUNT(*)
		  FROM ZTS_TERM.RECEIVE_ORDER
		 WHERE ORDER_ID = #{orderId}
		   AND SKU_ALIAS = #{skuAlias}
		   AND ORDER_DATE = #{orderDate}
	</select>

	<select id="getExchangeRateAmount" parameterType="String" resultType="String">
	/* [external.receiveorder.getExchangeRateAmount][peter][2016. 8. 4.] */
		SELECT
			EXCHANGE_RATE
		  FROM CCS_EXCHANGE
		 WHERE CURRENCY_CD = #{currencyCd}
	</select>

	<select id="getProductId" parameterType="hashMap" resultType="String">
	/* [external.receiveorder.getProductId][peter][2016. 11. 10.] */
		SELECT
			PP.PRODUCT_ID
		  FROM PMS_PRODUCT PP
		INNER JOIN PMS_SALEPRODUCT SP
				ON SP.STORE_ID = PP.STORE_ID
			   AND SP.SALEPRODUCT_ID = #{saleproductId}
			   AND SP.PRODUCT_ID = PP.PRODUCT_ID
		 WHERE PP.STORE_ID = #{storeId}
		   AND PP.USE_YN = 'Y'
	</select>

	<insert id="insertReceiveOrderFromChina" parameterType="omsReceiveordermapping">
	/* [external.receiveorder.insertReceiveOrderFromChina][peter][2016. 8. 3.] */
		<selectKey keyProperty="seq" resultType="String" order="BEFORE">
			SELECT NVL(SEQ, 1) SEQ
			  FROM (SELECT MAX(SEQ)+1 SEQ FROM ZTS_TERM.RECEIVE_ORDER) DUAL
		</selectKey>
		INSERT INTO ZTS_TERM.RECEIVE_ORDER (
			SEQ
			, ORDER_ID
			, MALL_ID
			, MALL_USER_ID
			, RECEIVE_TEL
			, RECEIVE_CEL
			, RECEIVE_NAME
			, RECEIVE_ZIPCODE
			, RECEIVE_ADDR
			, PAY_COST
			, PRODUCT_NAME
			, SALE_COST
			, SALE_CNT
			, SKU_ALIAS
			, CURRENCY_CODE
			, CURRENCY_PRICE
			, ORDER_DATE
			, REG_DATE
			, LP_NO
			, ALIPAY_TRANS_ID
			, PARTNER_TRANS_ID
			, COPY_IDX
			, BO_YN
			, RECEIVE_DATE
		)
		VALUES (
			TO_NUMBER(#{seq, jdbcType=VARCHAR})
			, #{orderId, jdbcType=VARCHAR}
			, #{mallId, jdbcType=VARCHAR}
			, #{mallUserId, jdbcType=VARCHAR}
			, #{receiveTel, jdbcType=VARCHAR}
			, #{receiveCel, jdbcType=VARCHAR}
			, #{receiveName, jdbcType=VARCHAR}
			, #{receiveZipcode, jdbcType=VARCHAR}
			, #{receiveAddr, jdbcType=VARCHAR}
			, #{payCost, jdbcType=VARCHAR}
			, #{productName, jdbcType=VARCHAR}
			, #{saleCost, jdbcType=VARCHAR}
			, #{saleCnt, jdbcType=VARCHAR}
			, #{skuAlias, jdbcType=VARCHAR}
			, #{currencyCode, jdbcType=VARCHAR}
			, #{currencyPrice, jdbcType=NUMERIC}
			, #{orderDate, jdbcType=VARCHAR}
			, #{orderDate, jdbcType=VARCHAR}
			, #{lpNo, jdbcType=VARCHAR}
			, #{alipayTransId, jdbcType=VARCHAR}
			, #{partnerTransId, jdbcType=VARCHAR}
			, '0'
			, #{boYn, jdbcType=VARCHAR}
			, SYSDATE
		)
	</insert>


	<!-- 주문처리 공통 -->
	<update id="updateCopyIdxError">
	/* [external.receiveorder.updateCopyIdxError][peter][2016. 10. 4.] */
		UPDATE ZTS_TERM.RECEIVE_ORDER
		   SET BO_YN = 'V'
		   	 , BO_MSG = '중복된 주문입니다'
		 WHERE SEQ IN (SELECT SEQ FROM ZTS_TERM.RECEIVE_ORDER 
		   				WHERE BO_YN = 'N'
		   				  AND COPY_IDX != '0')
		   AND BO_YN = 'N'
	</update>

	<update id="updateSiteInfoError" parameterType="hashMap">
	/* [external.receiveorder.updateSiteInfoError][peter][2016. 10. 24.] */
		UPDATE ZTS_TERM.RECEIVE_ORDER
		   SET BO_YN = 'V'
		   	 , BO_MSG = '사이트 정보 오류입니다'
		 WHERE SEQ IN (SELECT SEQ FROM ZTS_TERM.RECEIVE_ORDER
						WHERE (MALL_ID, MALL_USER_ID) IN (SELECT MALL_ID, MALL_USER_ID FROM ZTS_TERM.RECEIVE_ORDER WHERE BO_YN = 'N'
														  MINUS
														  SELECT MALL_ID, MALL_USER_ID FROM CCS_SITE 
														  WHERE SITE_TYPE_CD IN ('SITE_TYPE_CD.DOMESTIC', 'SITE_TYPE_CD.CHINA')	AND USE_YN = 'Y' AND MALL_ID IS NOT NULL)
						  AND BO_YN = 'N')
		   AND BO_YN = 'N'
	</update>

	<update id="updateOrderIdNullError">
	/* [external.receiveorder.updateOrderIdNullError][peter][2016. 11. 8.] */
		UPDATE ZTS_TERM.RECEIVE_ORDER
		   SET BO_YN = 'V'
		   	 , BO_MSG = '주문번호가 없습니다'
		 WHERE SEQ IN (SELECT SEQ FROM ZTS_TERM.RECEIVE_ORDER 
		   				WHERE BO_YN = 'N'
		   				  AND (ORDER_ID IS NULL OR ORDER_ID = ''))
		   AND BO_YN = 'N'
	</update>

	<update id="updateRegisterAgainError" parameterType="hashMap">
	/* [external.receiveorder.updateRegisterAgainError][peter][2016. 11. 8.] */
		UPDATE ZTS_TERM.RECEIVE_ORDER
		   SET BO_YN = 'V'
		   	 , BO_MSG = '기등록 주문 오류입니다'
		 WHERE SEQ IN (SELECT TM.SEQ FROM ZTS_TERM.RECEIVE_ORDER TM, OMS_ORDER BO
         				WHERE TM.BO_YN = 'N'
         				  AND INSTR(TM.ORDER_ID, '+', -1) = 0
           				  AND TM.ORDER_ID = BO.SITE_ORDER_ID)
		   AND BO_YN = 'N'
	</update>

	<update id="updateSkuAliasNullError">
	/* [external.receiveorder.updateSkuAliasNullError][peter][2016. 11. 8.] */
		UPDATE ZTS_TERM.RECEIVE_ORDER
		   SET BO_YN = 'V'
		   	 , BO_MSG = '옵션코드가 없습니다'
		 WHERE SEQ IN (SELECT SEQ FROM ZTS_TERM.RECEIVE_ORDER 
		   				WHERE BO_YN = 'N'
		   				  AND (SKU_ALIAS IS NULL OR SKU_ALIAS = ''))
		   AND BO_YN = 'N'
	</update>

	<update id="updateOverseaDeliveryYn">
	/* [external.receiveorder.updateOverseaDeliveryYn][peter][2016. 6. 29.] */
		UPDATE ZTS_TERM.RECEIVE_ORDER
		   SET OVERSEA_DELIVERY_YN = 'Y'
		 WHERE BO_YN = 'N'
		   AND COPY_IDX = '0'
		   AND SEQ IN (SELECT SEQ FROM ZTS_TERM.RECEIVE_ORDER 
		   					WHERE BO_YN = 'N'
		   					  AND COPY_IDX = '0'
		   					  AND INSTR(RECEIVE_ADDR, '롯데닷컴 해외배송') > 0)
	</update>

	<select id="getReceiveOrderList" parameterType="hashMap" resultType="omsReceiveordermapping">
	/* [external.receiveorder.getReceiveOrderList][peter][2016. 6. 29.] */
		SELECT 
			RO.SEQ
            , RO.IDX
            , RO.ORDER_ID
            , RO.MALL_ID
            , RO.MALL_USER_ID
            , RO.ORDER_STATUS
            , RO.USER_ID
            , RO.USER_NAME
            , RO.USER_TEL
            , RO.USER_CEL
            , RO.USER_EMAIL
            , RO.RECEIVE_TEL
            , RO.RECEIVE_CEL
            , RO.RECEIVE_EMAIL
            , RO.DELV_MSG
            , RO.RECEIVE_NAME
            , RO.RECEIVE_ZIPCODE
            , RO.RECEIVE_ADDR
            , RO.PAY_COST
            , RO.ORDER_DATE
            , RO.MALL_PRODUCT_ID
            , RO.PRODUCT_ID
            , RO.SKU_ID
            , RO.PRODUCT_NAME
            , RO.SALE_COST
            , RO.SKU_VALUE
            , RO.SALE_CNT
            , RO.SKU_ALIAS
            , RO.ORDER_GUBUN
            , RO.ORDER_ETC_2
            , RO.ORDER_ETC_3
            , RO.COPY_IDX
            , RO.GOODS_NM_PR
            , RO.LP_NO
            , RO.CURRENCY_CODE
            , RO.CURRENCY_PRICE
            , RO.EMS_NO
            , RO.ALIPAY_TRANS_ID
            , RO.PARTNER_TRANS_ID
            , CS.SITE_ID
            , CS.SITE_TYPE_CD
            , #{storeId}		AS STORE_ID
            , #{insId}			AS INS_ID
		FROM ZTS_TERM.RECEIVE_ORDER RO
		INNER JOIN CCS_SITE CS
				ON CS.STORE_ID = #{storeId}
			   AND CS.USE_YN = 'Y'
			   AND CS.MALL_ID = RO.MALL_ID
			   AND CS.MALL_USER_ID = RO.MALL_USER_ID
			<if test="mallType == null or mallType == ''">
			   AND CS.SITE_TYPE_CD = 'SITE_TYPE_CD.DOMESTIC'
			</if>
			<if test="mallType != null and mallType != ''">
			   AND CS.SITE_TYPE_CD = 'SITE_TYPE_CD.CHINA'
			</if>
		WHERE RO.COPY_IDX = '0'
		<if test="mallType == null or mallType == ''">
		  AND RO.BO_YN = 'N'
		</if>
		<if test="mallType == 'TMALL'">
		  AND RO.BO_YN = 'T'
		  AND RO.MALL_ID = 'TMALL'
		</if>
		<if test="mallType == 'CNMALL'">
		  AND RO.BO_YN = 'C'
		  AND RO.MALL_ID = '0to7_CN'
		</if>
		<if test="mallType == 'JDMALL'">
		  AND RO.BO_YN = 'J'
		  AND RO.MALL_ID IN ('JD_HK_Goong', 'JD_HK_0to7')
		</if>
		ORDER BY RO.ORDER_ID, CS.SITE_ID, RO.RECEIVE_NAME, RO.RECEIVE_ADDR
	</select>

	<select id="getSaleproductExistYn" parameterType="hashMap" resultType="String">
	/* [external.receiveorder.getSaleproductExistYn][peter][2016. 11. 8.] */
		SELECT PP.PRODUCT_TYPE_CD
		  FROM PMS_SALEPRODUCT PS
		INNER JOIN PMS_PRODUCT PP
		  		ON PP.STORE_ID = PS.STORE_ID
		  	   AND PP.PRODUCT_ID = PS.PRODUCT_ID
		  	   AND PP.USE_YN = 'Y'
		 WHERE PS.STORE_ID = #{storeId}
		   AND PS.SALEPRODUCT_ID = #{saleproductId}
	</select>

 	<resultMap id="getProductDetail" autoMapping="true" type="gcp.pms.model.PmsProduct">
		<id property="storeId" column="STORE_ID" />
		<id property="productId" column="PRODUCT_ID" />
		<result property="brandId" column="BRAND_ID" />
		<result property="businessId" column="BUSINESS_ID" />
		<result property="name" column="PRODUCT_NAME" />
		<result property="erpProductId" column="ERP_PRODUCT_ID" />
		<result property="exportErpProductId" column="EXPORT_ERP_PRODUCT_ID" />
		<result property="categoryId" column="CATEGORY_ID" />
		<result property="brandId" column="BRAND_ID" />
		<result property="productTypeCd" column="PRODUCT_TYPE_CD" />
		<result property="saleStateCd" column="SALE_STATE_CD" />
		<result property="exportErpProductId" column="EXPORT_ERP_PRODUCT_ID" />
		<result property="maker" column="MAKER" />
		<result property="unitQty" column="UNIT_QTY" />
		<result property="taxTypeCd" column="TAX_TYPE_CD" />
		<result property="optionYn" column="OPTION_YN" />
		<result property="textOptionYn" column="TEXT_OPTION_YN" />
		<result property="textOptionName" column="TEXT_OPTION_NAME" />
		<result property="listPrice" column="LIST_PRICE" />
		<result property="salePrice" column="SALE_PRICE" />
		<result property="supplyPrice" column="SUPPLY_PRICE" />
		<result property="commissionRate" column="COMMISSION_RATE" />
		<result property="pointSaveRate" column="POINT_SAVE_RATE" />
		<result property="deliveryFeeFreeYn" column="DELIVERY_FEE_FREE_YN" />
		<result property="productNoticeTypeCd" column="PRODUCT_NOTICE_TYPE_CD" />
		<result property="reserveYn" column="RESERVE_YN" />
		<result property="fixedDeliveryYn" column="FIXED_DELIVERY_YN" />
		<result property="wrapYn" column="WRAP_YN" />
		<result property="wrapVolume" column="WRAP_VOLUME" />
		<result property="overseasPurchaseYn" column="OVERSEAS_PURCHASE_YN" />
		<result property="boxDeliveryYn" column="BOX_DELIVERY_YN" />
		<result property="deliveryPolicyNo" column="DELIVERY_POLICY_NO" />
		<association property="ccsBusiness" javaType="gcp.ccs.model.CcsBusiness">
			<id property="storeId" column="STORE_ID" />
			<id property="businessId" column="BUSINESS_ID" />
			<result property="name" column="BUSINESS_NAME" />
			<result property="saleTypeCd" column="SALE_TYPE_CD" />
			<result property="purchaseYn" column="PURCHASE_YN" />
		</association>
		<association property="pmsSaleproduct" javaType="gcp.pms.model.PmsSaleproduct">
			<id property="storeId" column="STORE_ID" />
			<id property="productId" column="PRODUCT_ID" />
			<id property="saleproductId" column="SALEPRODUCT_ID" />
			<result property="erpSaleproductId" column="ERP_SALEPRODUCT_ID" />
			<result property="name" column="SALEPRODUCT_NAME" />
			<result property="realStockQty" column="REAL_STOCK_QTY" />
			<result property="addSalePrice" column="ADD_SALE_PRICE" />
			<result property="saleproductStateCd" column="SALEPRODUCT_STATE_CD" />
		</association>
	</resultMap>
	<select id="getProductInfo" parameterType="pmsProductSearch" resultMap="getProductDetail">
	/* [external.receiveorder.getProductInfo][peter][2016. 6. 22.] */
		SELECT 
			PP.PRODUCT_ID
			, PP.NAME			AS PRODUCT_NAME
			, PP.ERP_PRODUCT_ID
			, PP.EXPORT_ERP_PRODUCT_ID
			, PP.CATEGORY_ID
			, PP.BRAND_ID
			, PP.BUSINESS_ID
			, CB.NAME			AS BUSINESS_NAME
			, CB.SALE_TYPE_CD
			, CB.PURCHASE_YN
			, PP.PRODUCT_TYPE_CD
			, PP.SALE_STATE_CD
			, PP.MAKER
			, PP.UNIT_QTY
			, PP.TAX_TYPE_CD
			, PP.OPTION_YN
			, PP.TEXT_OPTION_YN
			, PP.LIST_PRICE
			, PP.SALE_PRICE
			, PP.SUPPLY_PRICE
			, PP.COMMISSION_RATE
			, PP.POINT_SAVE_RATE
			, PP.DELIVERY_FEE_FREE_YN
			, PP.PRODUCT_NOTICE_TYPE_CD
			, PP.RESERVE_YN
			, PP.FIXED_DELIVERY_YN
			, PP.WRAP_YN
			, PP.WRAP_VOLUME
			, PP.OVERSEAS_PURCHASE_YN
			, PP.BOX_DELIVERY_YN
			, PP.DELIVERY_POLICY_NO
			, PS.SALEPRODUCT_ID
			, PS.ERP_SALEPRODUCT_ID
			, PS.NAME			AS SALEPRODUCT_NAME
			, PS.REAL_STOCK_QTY
			, PS.ADD_SALE_PRICE
			, PS.SALEPRODUCT_STATE_CD
		FROM PMS_PRODUCT PP
		INNER JOIN CCS_BUSINESS CB
				ON CB.STORE_ID = PP.STORE_ID
			   AND CB.BUSINESS_ID = PP.BUSINESS_ID
		INNER JOIN PMS_SALEPRODUCT PS
				ON PS.STORE_ID = PP.STORE_ID
			   AND PS.PRODUCT_ID = PP.PRODUCT_ID
			   AND PS.SALEPRODUCT_ID = #{saleproductId}
		WHERE PP.STORE_ID = #{storeId}
		  AND PP.USE_YN = 'Y'
	</select>

<!-- 	<resultMap id="getSetProductInfo" autoMapping="true" type="gcp.pms.model.PmsSetproduct">
		<id property="storeId" column="STORE_ID" />
		<id property="productId" column="PRODUCT_ID" />
		<id property="subProductId" column="SUB_PRODUCT_ID" />
		<result property="qty" column="QTY" />
		<result property="sumListPrice" column="SUM_LIST_PRICE" />
		<result property="saleproductId" column="SALEPRODUCT_ID" />
		<result property="saleproductName" column="SALEPRODUCT_NAME" />
		<result property="addSaleprice" column="ADD_SALE_PRICE" />
		<association property="pmsProduct" javaType="gcp.pms.model.PmsProduct">
			<id property="storeId" column="STORE_ID" />
			<id property="productId" column="PRODUCT_ID" />
			<result property="listPrice" column="LIST_PRICE" />
		</association>
	</resultMap> -->
	<select id="getSubProductList" parameterType="hashMap" resultType="pmsSetproduct">
	/* [external.receiveorder.getSubProductList][peter][2016. 7. 6.] */
		SELECT
            PST.PRODUCT_ID
            , PST.SUB_PRODUCT_ID
            , PST.NAME
            , PST.QTY
            , PP.LIST_PRICE * PST.QTY	AS SUM_LIST_PRICE
            , PP.SALE_PRICE
            , PSL.SALEPRODUCT_ID
            , PSL.NAME					AS SALEPRODUCT_NAME
            , PSL.ADD_SALE_PRICE
        FROM PMS_SETPRODUCT PST
        INNER JOIN PMS_PRODUCT PP
        		ON PP.STORE_ID = PST.STORE_ID
        	   AND PP.PRODUCT_ID = PST.SUB_PRODUCT_ID
        	   AND PP.USE_YN = 'Y'
        INNER JOIN PMS_SALEPRODUCT PSL
        		ON PSL.STORE_ID = PST.STORE_ID
        	   AND PSL.PRODUCT_ID = PST.SUB_PRODUCT_ID
        WHERE PST.STORE_ID = #{storeId}
          AND PST.PRODUCT_ID = #{productId}
	</select>

	<update id="updateOrderAmtInOmsOrder" parameterType="hashMap">
	/* [external.receiveorder.updateOrderAmtInOmsOrder][peter][2016. 8. 9.] */
		UPDATE OMS_ORDER
		   SET ORDER_AMT = #{orderAmt}
		   	 , PAYMENT_AMT = #{orderAmt}
		 WHERE ORDER_ID = #{orderId}
	</update>

	<update id="updatePaymentAmtInOmsPayment" parameterType="hashMap">
	/* [external.receiveorder.updatePaymentAmtInOmsPayment][peter][2016. 8. 9.] */
		UPDATE OMS_PAYMENT
		   SET PAYMENT_AMT = #{orderAmt}
		 WHERE ORDER_ID = #{orderId}
	</update>

<!-- 	<select id="getUpperOrderProductNo" parameterType="hashMap" resultType="int">
	/* [external.receiveorder.getUpperOrderProductNo][peter][2016. 8. 9.] */
		SELECT
			ORDER_PRODUCT_NO
		  FROM OMS_ORDERPRODUCT
		 WHERE ORDER_ID = #{orderId}
		   AND SALEPRODUCT_ID = #{saleproductId}
	</select> -->

	<update id="updateUpperOrderProductNoOfPresent" parameterType="hashMap">
	/* [external.receiveorder.updateUpperOrderProductNoOfPresent][peter][2016. 8. 9.] */
		UPDATE OMS_ORDERPRODUCT OP
		   SET UPPER_ORDER_PRODUCT_NO = (SELECT ORDER_PRODUCT_NO FROM OMS_ORDERPRODUCT WHERE ORDER_ID = OP.ORDER_ID AND SALEPRODUCT_ID = #{skuAlias} AND ORDER_PRODUCT_TYPE_CD IN ('ORDER_PRODUCT_TYPE_CD.GENERAL', 'ORDER_PRODUCT_TYPE_CD.SET'))
		   	   , PRESENT_ID = NULL
		 WHERE ORDER_ID = #{orderId}
		   AND SALEPRODUCT_ID = #{orderEtc2}
		   AND ORDER_PRODUCT_TYPE_CD = 'ORDER_PRODUCT_TYPE_CD.PRODUCTPRESENT'
		   AND PRESENT_ID = #{skuAlias}
	</update>

	<update id="updateUpperOrderProductNoOfSub" parameterType="String">
	/* [external.receiveorder.updateUpperOrderProductNoOfSet][peter][2016. 11. 14.] */
		UPDATE OMS_ORDERPRODUCT OP
		   SET UPPER_ORDER_PRODUCT_NO = (SELECT MAX(ORDER_PRODUCT_NO) FROM OMS_ORDERPRODUCT WHERE ORDER_ID = OP.ORDER_ID AND SALEPRODUCT_ID = OP.PRESENT_ID AND ORDER_PRODUCT_TYPE_CD = 'ORDER_PRODUCT_TYPE_CD.SET')
		   	   , PRESENT_ID = NULL
		 WHERE ORDER_ID = #{orderId}
		   AND ORDER_PRODUCT_TYPE_CD = 'ORDER_PRODUCT_TYPE_CD.SUB'
		   AND PRESENT_ID IS NOT NULL
	</update>

	<select id="getOmsDeliveryExistCount" parameterType="hashMap" resultType="int">
	/* [external.receiveorder.getOmsDeliveryExistCount][peter][2016. 10. 19.] */
		SELECT
			COUNT(*)
          FROM OMS_DELIVERY
         WHERE ORDER_ID = #{orderId}
           AND DELIVERY_ADDRESS_NO = #{deliveryAddressNo} 
           AND DELIVERY_POLICY_NO = #{deliveryPolicyNo}
	</select>

	<select id="getOmsDeliveryInfo" resultType="omsDelivery">
	/* [external.receiveorder.getOmsDeliveryInfo][peter][2016. 10. 19.] */
		SELECT
			STORE_ID
            , DELIVERY_POLICY_NO
            , NAME
            , DELIVERY_SERVICE_CD
            , 0		AS DELIVERY_FEE
            , 0		AS ORDER_DELIVERY_FEE
            , 0		AS DELIVERY_COUPON_DC_AMT
            , 0		AS APPLY_DELIVERY_FEE
            , 'N'	AS WRAP_TOGETHER_YN
            , 0		AS ORDER_WRAP_FEE
            , 0		AS WRAP_COUPON_DC_AMT
            , 0		AS APPLY_WRAP_FEE
          FROM CCS_DELIVERYPOLICY
         WHERE DELIVERY_POLICY_NO = #{deliveryPolicyNo}
	</select>
	
<!-- 	<select id="getOmsDeliveryList" parameterType="String" resultType="omsDelivery">
	/* [external.receiveorder.getOmsDeliveryList][peter][2016. 8. 16.] */
		SELECT
			OP.ORDER_ID
			, OP.DELIVERY_ADDRESS_NO
            , OP.DELIVERY_POLICY_NO
            , DP.NAME
            , DP.DELIVERY_SERVICE_CD
            , DP.DELIVERY_FEE_TYPE_CD
            , 0		AS DELIVERY_FEE
            , 0		AS ORDER_DELIVERY_FEE
            , 0		AS DELIVERY_COUPON_DC_AMT
            , 0		AS APPLY_DELIVERY_FEE
            , 'N'	AS WRAP_TOGETHER_YN
            , 0		AS ORDER_WRAP_FEE
            , 0		AS WRAP_COUPON_DC_AMT
            , 0		AS APPLY_WRAP_FEE
          FROM OMS_ORDERPRODUCT OP, CCS_DELIVERYPOLICY DP
         WHERE OP.ORDER_ID = #{orderId}
           AND OP.DELIVERY_POLICY_NO = DP.DELIVERY_POLICY_NO
        GROUP BY OP.ORDER_ID
        		, OP.DELIVERY_ADDRESS_NO
        		, OP.DELIVERY_POLICY_NO
        		, DP.NAME
            	, DP.DELIVERY_SERVICE_CD
            	, DP.DELIVERY_FEE_TYPE_CD
	</select> -->

	<select id="getNewOrderProductNo" parameterType="String" resultType="java.math.BigDecimal">
	/* [external.receiveorder.getNewOrderProductNo][peter][2016. 11. 10.] */
		SELECT NVL(MAX(ORDER_PRODUCT_NO),0) + 1 
		  FROM OMS_ORDERPRODUCT
		 WHERE ORDER_ID = #{boOrderId}
	</select>

	<update id="updateOutQtyOfOrderproduct" parameterType="omsOrderproduct">
	/* [external.receiveorder.updateOutQtyOfOrderproduct][peter][2016. 11. 21.] */
		UPDATE OMS_ORDERPRODUCT
		   SET OUT_QTY = #{orderQty}
		   	   , SHIP_DT = SYSDATE
		 WHERE ORDER_ID = #{orderId}
		   AND ORDER_PRODUCT_NO = #{orderProductNo}
		   AND SALEPRODUCT_ID = #{saleproductId}
	</update>

<!-- 	<select id="getOrderProductStateList" parameterType="String" resultType="String">
	/* [external.receiveorder.getOrderProductStateList][peter][2016. 11. 21.] */
		SELECT DISTINCT ORDER_PRODUCT_STATE_CD
		  FROM OMS_ORDERPRODUCT
		 WHERE ORDER_ID = #{boOrderId}
	</select> -->

	<update id="updateDeliveryStateOfOmsOrder" parameterType="String">
	/* [external.receiveorder.updateDeliveryStateOfOmsOrder][peter][2016. 11. 21.] */
		UPDATE OMS_ORDER
		   SET ORDER_DELIVERY_STATE_CD = 'ORDER_DELIVERY_STATE_CD.SHIP'
		 WHERE ORDER_ID = #{boOrderId}
		   AND NOT EXISTS (
			  SELECT 1 
			    FROM OMS_ORDERPRODUCT
			   WHERE ORDER_ID = #{boOrderId}
			     AND ORDER_PRODUCT_STATE_CD &lt;&gt; 'ORDER_PRODUCT_STATE_CD.SHIP'
		   )
	</update>

	<update id="updateReceiveOrderError" parameterType="omsReceiveordermapping">
	/* [external.receiveorder.updateReceiveOrderError][peter][2016. 6. 24.] */
		UPDATE ZTS_TERM.RECEIVE_ORDER
		   SET BO_YN = 'V'
			   , BO_REC_DATE = SYSDATE
			   , BO_MSG = #{boMsg}
		 WHERE SEQ = #{seq}
		   AND BO_YN = 'N'
	</update>

	<update id="updateReceiveOrderSuccess" parameterType="hashMap">
	/* [external.receiveorder.updateReceiveOrderSuccess][peter][2016. 10. 24.] */
		UPDATE ZTS_TERM.RECEIVE_ORDER
		   SET BO_YN = 'Y'
			   , BO_REC_DATE = SYSDATE
			   , BO_ORDER_ID = TO_NUMBER(#{orderId})
			   , BO_MSG = null
		 WHERE SEQ = #{seq}
		   AND BO_YN = 'N'
	</update>

</mapper>