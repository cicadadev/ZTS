<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="external.tms">
	<insert id="insertQueue">
	/* [external.tms.insertMail][roy][2016. 10. 13.] */
		INSERT INTO TMS_QUEUE (			MSG_CODE,
		
										 <if test="toId != null and toId !=''">
							             	TO_ID,
							     		 </if>
							     		 
							     		 <if test="toName != null and toName !=''">
							             	TO_NAME,
							     		 </if>
							     		 
							     		 <if test="toEmail != null and toEmail !=''">
							             	TO_EMAIL,
							     		 </if>
							     		 
							     		 <if test="fromName != null and fromName !=''">
							             	FROM_NAME,
							     		 </if>
							     		 
							     		 <if test="fromEmail != null and fromEmail !=''">
							             	FROM_EMAIL,
							     		 </if>
							     		 
							     		 <if test="subject != null and subject !=''">
							             	SUBJECT,
							     		 </if>
		                                 
		                                 <if test="mapContent != null and mapContent !=''">
							             	MAP_CONTENT,
							     		 </if>
		     		 
		     		 					<if test="mapContent2 != null and mapContent2 !=''">
							             	MAP_CONTENT2,
							     		 </if>
							     		 
		     		 					 <if test="toPhone != null and toPhone !=''">
							             	TO_PHONE,
							     		 </if>
							     		 
							     		 <if test="toToken != null and toToken !=''">
							             	TO_TOKEN,
							     		 </if>
							     		 
							     		 <if test="fromPhone != null and fromPhone !=''">
							             	FROM_PHONE,
							     		 </if>
							     		 
							     		 <if test="securePwd != null and securePwd !=''">
							             	SECURE_PWD,
							     		 </if>
							     		 
		                                 <if test="map1 != null and map1 !=''">
							             	MAP1,
							     		 </if>
							     		 
							     		 <if test="map2 != null and map2 !=''">
							             	MAP2,
							     		 </if>
							     		 
							     		 <if test="map3 != null and map3 !=''">
							             	MAP3,
							     		 </if>
							     		 
							     		 <if test="map4 != null and map4 !=''">
							             	MAP4,
							     		 </if>
							     		 
							     		 <if test="map5 != null and map5 !=''">
							             	MAP5,
							     		 </if>
							     		 
							     		 <if test="map6 != null and map6 !=''">
							             	MAP6,
							     		 </if>
							     		 
							     		 <if test="map7 != null and map7 !=''">
							             	MAP7,
							     		 </if>
							     		 
							     		 <if test="map8 != null and map8 !=''">
							             	MAP8,
							     		 </if>
							     		 
							     		 <if test="map9 != null and map9 !=''">
							             	MAP9,
							     		 </if>
							     		 
							     		 <if test="map10 != null and map10 !=''">
							             	MAP10,
							     		 </if>
							     		 
							     		 <if test="map11 != null and map11 !=''">
							             	MAP11,
							     		 </if>
							     		 
							     		 <if test="map12 != null and map12 !=''">
							             	MAP12,
							     		 </if>
							     		 
							     		 <if test="map13 != null and map13 !=''">
							             	MAP13,
							     		 </if>
							     		 
							     		 <if test="map14 != null and map14 !=''">
							             	MAP14,
							     		 </if>
							     		 
							     		 <if test="map15 != null and map15 !=''">
							             	MAP15,
							     		 </if>
							     		 
							     		 <if test="map16 != null and map16 !=''">
							             	MAP16,
							     		 </if>
							     		 
							     		 <if test="map17 != null and map17 !=''">
							             	MAP17,
							     		 </if>
							     		 
							     		 <if test="map18 != null and map18 !=''">
							             	MAP18,
							     		 </if>
							     		 
							     		 <if test="map19 != null and map19 !=''">
							             	MAP19,
							     		 </if>
							     		 
							     		 <if test="map20 != null and map20 !=''">
							             	MAP20,
							     		 </if>
							     		 
		                                 TARGET_DATE,
		                                 REG_DATE,
		                                 UDT_DATE
		                                 )
		     VALUES (
		     		 #{msgCode, 				jdbcType=VARCHAR},
		     		 
		     		 <if test="toId != null and toId !=''">
		             	#{toId, 				jdbcType=VARCHAR},
		     		 </if>
		     		 
		     		 <if test="toName != null and toName !=''">
		             	#{toName, 				jdbcType=VARCHAR},
		     		 </if>
		     		 
		     		 <if test="toEmail != null and toEmail !=''">
		             	#{toEmail, 				jdbcType=VARCHAR},
		     		 </if>
		     		 
		     		 <if test="fromName != null and fromName !=''">
		             	#{fromName, 				jdbcType=VARCHAR},
		     		 </if>
		     		 
		     		 <if test="fromEmail != null and fromEmail !=''">
		             	#{fromEmail, 				jdbcType=VARCHAR},
		     		 </if>
		     		 
		     		 <if test="subject != null and subject !=''">
		             	#{subject, 				jdbcType=VARCHAR},
		     		 </if>
		     		 
		     		 <if test="mapContent != null and mapContent !=''">
		             	#{mapContent, 				jdbcType=VARCHAR},
		     		 </if>
		     		 
		     		 <if test="mapContent2 != null and mapContent2 !=''">
		             	#{mapContent2, 				jdbcType=VARCHAR},
		     		 </if>
		     		 
		     		 <if test="toPhone != null and toPhone !=''">
		             	#{toPhone, 				jdbcType=VARCHAR},
		     		 </if>
		     		 
		     		 <if test="toToken != null and toToken !=''">
		             	#{toToken, 				jdbcType=VARCHAR},
		     		 </if>
		     		 
		     		 <if test="fromPhone != null and fromPhone !=''">
		             	#{fromPhone, 				jdbcType=VARCHAR},
		     		 </if>
		     		 
		     		 <if test="securePwd != null and securePwd !=''">
		             	#{securePwd, 				jdbcType=VARCHAR},
		     		 </if>
							     		 
		     		 <if test="map1 != null and map1 !=''">
		             	#{map1, 				jdbcType=VARCHAR},
		     		 </if>
		     		 
		     		 <if test="map2 != null and map2 !=''">
		             	#{map2, 				jdbcType=VARCHAR},
		     		 </if>
		     		 
		     		 <if test="map3 != null and map3 !=''">
		             	#{map3, 				jdbcType=VARCHAR},
		     		 </if>
		     		 
		     		 <if test="map4 != null and map4 !=''">
		             	#{map4, 				jdbcType=VARCHAR},
		     		 </if>
		     		 
		     		 <if test="map5 != null and map5 !=''">
		             	#{map5, 				jdbcType=VARCHAR},
		     		 </if>
		     		 
		     		 <if test="map6 != null and map6 !=''">
		             	#{map6, 				jdbcType=VARCHAR},
		     		 </if>
		     		 
		     		 <if test="map7 != null and map7 !=''">
		             	#{map7, 				jdbcType=VARCHAR},
		     		 </if>
		     		 
		     		 <if test="map8 != null and map8 !=''">
		             	#{map8, 				jdbcType=VARCHAR},
		     		 </if>
		     		 
		     		 <if test="map9 != null and map9 !=''">
		             	#{map9, 				jdbcType=VARCHAR},
		     		 </if>
		     		 
		     		 <if test="map10 != null and map10 !=''">
		             	#{map10, 				jdbcType=VARCHAR},
		     		 </if>
		     		 
		     		 <if test="map11 != null and map11 !=''">
		             	#{map11, 				jdbcType=VARCHAR},
		     		 </if>
		     		 
		     		 <if test="map12 != null and map12 !=''">
		             	#{map12, 				jdbcType=VARCHAR},
		     		 </if>
		     		 
		     		 <if test="map13 != null and map13 !=''">
		             	#{map13, 				jdbcType=VARCHAR},
		     		 </if>
		     		 
		     		 <if test="map14 != null and map14 !=''">
		             	#{map14, 				jdbcType=VARCHAR},
		     		 </if>
		     		 
		     		 <if test="map15 != null and map15 !=''">
		             	#{map15, 				jdbcType=VARCHAR},
		     		 </if>
		     		 
		     		 <if test="map16 != null and map16 !=''">
		             	#{map16, 				jdbcType=VARCHAR},
		     		 </if>
		     		 
		     		 <if test="map17 != null and map17 !=''">
		             	#{map17, 				jdbcType=VARCHAR},
		     		 </if>
		     		 
		     		 <if test="map18 != null and map18 !=''">
		             	#{map18, 				jdbcType=VARCHAR},
		     		 </if>
		     		 
		     		 <if test="map19 != null and map19 !=''">
		             	#{map19, 				jdbcType=VARCHAR},
		     		 </if>
		     		 
		     		 <if test="map20 != null and map20 !=''">
		             	#{map20, 				jdbcType=VARCHAR},
		     		 </if>
		             <if test="targetDate != null and targetDate !=''">
		             	#{targetDate, 				jdbcType=DATETIME},
		     		 </if>
		     		 <if test="targetDate == null or targetDate == ''">
			             now(),
		     		 </if>
		             now(),
		             now()
		             )
	</insert>
	
	<select id="getMemberShoppingAlarmCount" resultType="BigDecimal">
	/* [external.tms.getMemberShoppingAlarmCount][ian][2016. 11. 1.] */
		SELECT IFNULL(COUNT(*), 0) AS COUNT
		  FROM TMS_INAPP_MSG MSG
		 WHERE     MSG.EXPIRE_DATE >= NOW()
		 	   AND CUST_ID = #{memberNo}
		       AND EXISTS		/* 제로투세븐의 디바이스만 추출 */
		              (SELECT A.DEVICE_ID
		                 FROM TMS_APP_DEVICE_LIST A, TMS_SITE_INFO B
		                WHERE     A.SITE_ID = B.SITE_ID
		                      AND B.SITE_KEY = #{siteKey})
		GROUP BY MSG.CUST_ID
	</select>
	
	<resultMap id="memberShoppingAlarm" type="shoppingAlarm">
		<id property="pushId" column="PUSH_ID" />
		<result property="isNew" column="IS_NEW" />
	</resultMap>
	<select id="getMemberShoppingAlarm" resultMap="memberShoppingAlarm">
	/* [external.tms.getMemberShoppingAlarm][ian][2016. 11. 1.] */
		SELECT T1.*,
		 	   CASE WHEN T1.REG_DATE BETWEEN NOW() AND DATE_ADD(NOW(), INTERVAL +1 DAY) THEN 'Y' 
		 	        ELSE 'N' END 
		 	     AS IS_NEW
		  FROM TMS_INAPP_MSG T1
		 WHERE     T1.EXPIRE_DATE >= NOW()		/* 만료일(7일) 안지난것*/
		       AND T1.CUST_ID = #{memberNo}
		       AND EXISTS		/* 제로투세븐의 디바이스만 추출 */
		              (SELECT A.DEVICE_ID
		                 FROM TMS_APP_DEVICE_LIST A, TMS_SITE_INFO B
		                WHERE     A.SITE_ID = B.SITE_ID
		                      AND B.SITE_KEY = #{siteKey})
	</select>
</mapper>