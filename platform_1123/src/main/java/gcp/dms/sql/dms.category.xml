<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dms.category">
	
	<sql id="getCategoryTreeList">
		SELECT *
			FROM ( SELECT LEVEL AS DEPTH,
						DD.DISPLAY_CATEGORY_ID, 
                        DD.DISPLAY_YN,
                        DD.LEAF_YN, 
                        DD.NAME, 
                        NVL(DD.SORT_NO,99999) SORT_NO, 
                        DD.STORE_ID, 
                        DD.TEMPLATE_ID,
                        DD.UPPER_DISPLAY_CATEGORY_ID ,
						LTRIM (SYS_CONNECT_BY_PATH (DD.NAME, '|'), '|') AS FULL_NAME,
						LTRIM (SYS_CONNECT_BY_PATH (DD.DISPLAY_CATEGORY_ID, '|'), '|') AS FULL_DISPLAY_CATEGORY_ID
					FROM DMS_DISPLAYCATEGORY DD
					<if test="storeId != null and storeId != ''">
				        WHERE DD.STORE_ID = #{storeId}           
					</if>
					<choose>
						<when test="rootCategoryId != null and rootCategoryId != ''">
					        START WITH DD.UPPER_DISPLAY_CATEGORY_ID = #{rootCategoryId}
						</when>
						<otherwise>
							START WITH DD.UPPER_DISPLAY_CATEGORY_ID IS NULL
						</otherwise>
					</choose>
			        CONNECT BY PRIOR DD.DISPLAY_CATEGORY_ID = DD.UPPER_DISPLAY_CATEGORY_ID
			        ORDER SIBLINGS BY SORT_NO
				)
			WHERE DISPLAY_YN = 'Y'
	</sql>
	
	<resultMap type="dmsDisplaycategory" id="displayCategoryResult" autoMapping="true">
		<collection property="dmsTemplates" column="{storeId=STORE_ID,templateTypeCd=TEMPLATE_TYPE_CD}" javaType="java.util.ArrayList" select="dms.common.getTemplateListByType" />
	</resultMap>
	<select id="getDisplayCategoryAll" resultMap="displayCategoryResult">
		/* [dms.category.getDisplayCategoryAll][stella][2016.05.03.] */
		SELECT
	 		  LEVEL AS DEPTH
			, DC.STORE_ID
		    , DC.DISPLAY_CATEGORY_ID
		    , DC.UPPER_DISPLAY_CATEGORY_ID
		    , DC.NAME        AS NAME
		    , DC.SORT_NO
		    , DC.TEMPLATE_ID
		    , 'TEMPLATE_TYPE_CD.DISPLAYCATEGORY'	AS TEMPLATE_TYPE_CD
		    , DC.LEAF_YN
		    , DC.DISPLAY_YN
		    , LTRIM (SYS_CONNECT_BY_PATH (DC.NAME, ' > '), ' > ') AS depthFullName
            , NVL (
                 (SELECT 'N'
                    FROM DMS_DISPLAYCATEGORY D1
                   WHERE     D1.UPPER_DISPLAY_CATEGORY_ID = DC.DISPLAY_CATEGORY_ID
                         AND ROWNUM = 1),
                 'Y')
                 LAST_NODE_YN		    
		 FROM 
		 	DMS_DISPLAYCATEGORY DC
		WHERE 
			DC.STORE_ID = #{storeId} 
		START WITH 
			<if test="categoryRootId!=null">
		 		DC.UPPER_DISPLAY_CATEGORY_ID = #{categoryRootId}
			 </if>
			 <if test="categoryRootId==null or categoryRootId==''">
				DC.UPPER_DISPLAY_CATEGORY_ID IS NULL
			 </if>
		CONNECT BY PRIOR 
			DC.DISPLAY_CATEGORY_ID = DC.UPPER_DISPLAY_CATEGORY_ID
		ORDER SIBLINGS BY DC.SORT_NO
	</select>
	
	<select id="getDisplayCategoryList" resultType="dmsDisplaycategory">
	/* [dms.category.getDisplayCategoryList][allen][2016.05.17.] */
		SELECT 
			*
			,(SELECT US.NAME FROM CCS_USER US WHERE DMS_DISPLAYCATEGORY.INS_ID = US.USER_ID AND ROWNUM=1) AS INS_NAME
			,(SELECT US.NAME FROM CCS_USER US WHERE DMS_DISPLAYCATEGORY.UPD_ID = US.USER_ID AND ROWNUM=1) AS UPD_NAME
		  FROM DMS_DISPLAYCATEGORY
		 WHERE USE_YN = 'Y'
		   AND LEAF_YN = 'Y'
		 ORDER BY SORT_NO
	</select>
	
	<select id="getCategoryCouponList" parameterType="dmsDisplaySearch" resultType="dmsDisplaycategory">
		/* [dms.category.getCategoryCouponList][paul][2016.05.24.] */
		<include refid="ccs.common.pagingPre" />
			SELECT 	DD.DISPLAY_CATEGORY_ID , DD.NAME ,
					CONCAT((SELECT NAME1 FROM MMS_MEMBER WHERE MEM_ID = #{loginId} AND STORE_ID = #{storeId} )) AS INS_NAME,
					DP.INS_DT , 
					CONCAT((SELECT NAME1 FROM MMS_MEMBER WHERE MEM_ID = #{loginId} AND STORE_ID = #{storeId} )) AS UPD_NAME,
					DP.UPD_DT 
			FROM DMS_DISPLAYCATEGORY DD , DMS_DISPLAYCATEGORYPRODUCT DP 
			WHERE DD.DISPLAY_CATEGORY_ID = DP.DISPLAY_CATEGORY_ID
			AND DD.STORE_ID = #{storeId}
		<include refid="ccs.common.pagingPost" />
	</select>	
	
	<select id="getProductCategorys" resultType="dmsDisplaycategoryproduct">
	/* [dms.category.getProductCategorys][eddie][2016.05.24.] */
		    SELECT C.DISPLAY_CATEGORY_ID, #{productId} PRODUCT_ID,
		           LTRIM (SYS_CONNECT_BY_PATH (C.NAME, ' > '), ' > ')
		              AS DEPTH_FULL_NAME,
		              C.DISPLAY_YN
		      FROM    DMS_DISPLAYCATEGORY C
		     WHERE     C.STORE_ID = #{storeId}
		           AND C.DISPLAY_CATEGORY_ID IN (SELECT DISPLAY_CATEGORY_ID
		                                           FROM DMS_DISPLAYCATEGORYPRODUCT
		                                          WHERE PRODUCT_ID = #{productId}
		                                            AND STORE_ID = #{storeId})
		START WITH C.UPPER_DISPLAY_CATEGORY_ID IS NULL
		CONNECT BY PRIOR C.DISPLAY_CATEGORY_ID = C.UPPER_DISPLAY_CATEGORY_ID	
	</select>
	
	<delete id="deleteDisplayCategoryProduct">
	/* [dms.category.deleteDisplayCategoryProduct][eddie][2016.05.24.] */
		DELETE FROM DMS_DISPLAYCATEGORYPRODUCT
		      WHERE PRODUCT_ID = #{productId} AND STORE_ID = #{storeId}
	</delete>
	
	<update id="updateDisplayCategorySortNoIncre" parameterType="dmsDisplaycategory">
		/* [dms.category.updateDisplayCategorySortNoIncre][stella][2016.06.15.] */
		UPDATE
			DMS_DISPLAYCATEGORY
		 SET
		 	SORT_NO = SORT_NO + 1
		WHERE
			DISPLAY_CATEGORY_ID IN (SELECT DISPLAY_CATEGORY_ID FROM DMS_DISPLAYCATEGORY
									WHERE STORE_ID = #{storeId} AND UPPER_DISPLAY_CATEGORY_ID = #{upperDisplayCategoryId} AND SORT_NO &lt; #{originSortNo})
			AND DISPLAY_CATEGORY_ID &lt;&gt; #{displayCategoryId}
	</update>
	
	<update id="updateDisplayCategorySortNoDecre" parameterType="dmsDisplaycategory">
		/* [dms.category.updateDisplayCategorySortNoDecre][stella][2016.06.15.] */
		UPDATE
			DMS_DISPLAYCATEGORY
		 SET
		 	SORT_NO = SORT_NO - 1
		WHERE
			DISPLAY_CATEGORY_ID IN (SELECT DISPLAY_CATEGORY_ID FROM DMS_DISPLAYCATEGORY
									WHERE STORE_ID = #{storeId} AND UPPER_DISPLAY_CATEGORY_ID = #{upperDisplayCategoryId} AND SORT_NO &gt; #{originSortNo})
			AND DISPLAY_CATEGORY_ID &lt;&gt; #{displayCategoryId}
	</update>
	
	<insert id="insertDisplayCategory" parameterType="dmsDisplaycategory">
		/* [dms.category.insertDisplayCategory][stella][2016.07.05.] */
		<selectKey keyProperty="displayCategoryId" order="BEFORE" resultType="String">
			SELECT NVL(MAX(TO_NUMBER(DISPLAY_CATEGORY_ID)), 0) + 1 AS displayCategoryId FROM DMS_DISPLAYCATEGORY WHERE STORE_ID = #{storeId}
		</selectKey>
		INSERT
			INTO DMS_DISPLAYCATEGORY (
				STORE_ID
				, DISPLAY_CATEGORY_ID
				, UPPER_DISPLAY_CATEGORY_ID
				, NAME
				, LEAF_YN
				, TEMPLATE_ID
				, SORT_NO
				, DISPLAY_YN
				, INS_DT
				, INS_ID
				, UPD_DT
				, UPD_ID
			) VALUES (
				#{storeId}
				, #{displayCategoryId}
				, #{upperDisplayCategoryId}
				, #{name}
				, #{leafYn}
				, #{templateId}
				, #{sortNo}
				, #{displayYn}
				, SYSDATE
				, #{insId}
				, SYSDATE
				, #{updId}
			)
	</insert>
	
	<resultMap type="dmsDisplaycategory" id="getAllCategoryListResult" autoMapping="true">
		<result property="depthFullName" 			column="FULL_NAME"/>
		<result property="depth" 					column="DEPTH"/>
		<result property="depthDisplayCategoryId" 	column="FULL_DISPLAY_CATEGORY_ID"/>
	</resultMap>
	<select id="getDepthAllCategoryList" resultMap="getAllCategoryListResult">
		/*[dms.category.getAllCategoryList][emily][2016. 6. 29.]*/
		<include refid="getCategoryTreeList"/>
		<if test="displayCategoryId != null and displayCategoryId != ''">
			AND DISPLAY_CATEGORY_ID =#{displayCategoryId}
		</if>
		<if test="depth != null and depth != ''">
		    AND DEPTH = #{depth}
		</if>
			ORDER BY UPPER_DISPLAY_CATEGORY_ID,SORT_NO
	</select>
	
	<select id="getDisplaycategoryProductMap" resultType="java.lang.String">
	/*[dms.category.getDisplaycategoryProductMap][emily][2016. 7. 19.]*/
		SELECT 1
		  FROM DMS_DISPLAYCATEGORYPRODUCT
		 WHERE STORE_ID = #{storeId} AND DISPLAY_CATEGORY_ID = #{displayCategoryId}
		   AND ROWNUM = 1
	</select>
	
	<select id="getChildCategory" resultType="java.lang.String">
	/* [dms.category.getChildCategory][eddie][2016. 05. 09.] */
		SELECT 1
		  FROM DMS_DISPLAYCATEGORY
		 WHERE UPPER_DISPLAY_CATEGORY_ID = #{displayCategoryId} AND STORE_ID = #{storeId} AND ROWNUM &lt; 2	
	</select>	
	
	<resultMap id="getDepth2CategoryListResult" type="dmsDisplaycategory" autoMapping="true">
		 <id property="storeId" 						column="STORE_ID"/>
		 <id property="displayCategoryId" 				column="DISPLAY_CATEGORY_ID"/>
		 <result property="depth" 						column="DEPTH"/>
		 <result property="totalCount" 					column="TOTAL_COUNT"/>
		<collection property="dmsDisplaycategorys" 	ofType="dmsDisplaycategory">
			<result property="displayCategoryId" 			column="LW_DISPLAY_CATEGORY_ID"/>
			<result property="upperDisplayCategoryId" 		column="LW_UPPER_DISPLAY_CATEGORY_ID"/>
			<result property="name" 						column="LW_NAME"/>
			<result property="leafYn" 						column="LW_LEAF_YN"/>
			<result property="templateId" 					column="LW_TEMPLATE_ID"/>
			<result property="sortNo" 						column="LW_SORT_NO"/>
			<result property="displayYn" 					column="LW_DISPLAY_YN"/>
			<result property="depth" 						column="LW_DEPTH"/>
		</collection>
	</resultMap>
	<select id="getDepth2CategoryList" resultMap="getDepth2CategoryListResult">
		/* [dms.category.getDepth2CategoryList][emily][2016. 07. 26.] */
		SELECT COUNT(*) OVER () AS TOTAL_COUNT,
				UP.*,
		       	LW.DISPLAY_CATEGORY_ID AS LW_DISPLAY_CATEGORY_ID, 
		       	LW.DISPLAY_YN AS LW_DISPLAY_YN,       
		       	LW.LEAF_YN AS LW_LEAF_YN, 
		       	LW.NAME AS LW_NAME, 
		       	LW.SORT_NO AS LW_SORT_NO, 
		       	LW.STORE_ID AS LW_STORE_ID, 
		       	LW.TEMPLATE_ID AS LW_TEMPLATE_ID,       
		       	LW.UPPER_DISPLAY_CATEGORY_ID AS  LW_UPPER_DISPLAY_CATEGORY_ID,
		       	LW.DEPTH AS LW_DEPTH
		FROM ( <include refid="getCategoryTreeList"/>
				<if test="depth != null and depth != ''">
				    AND DEPTH = #{depth}
				</if>
				<if test="displayCategoryId != null and displayCategoryId != ''">
				    AND DISPLAY_CATEGORY_ID = #{displayCategoryId}
				</if>
		)UP
		LEFT OUTER JOIN ( <include refid="getCategoryTreeList"/>)LW /*하위카테고리*/
		ON( UP.STORE_ID=LW.STORE_ID AND UP.DISPLAY_CATEGORY_ID = LW.UPPER_DISPLAY_CATEGORY_ID)
		ORDER BY LW.SORT_NO
	</select>
	
	<select id="getDisplayCategoryproduct" resultType="dmsDisplaycategoryproduct">
		/* [dms.category.getDepth2CategoryList][emily][2016. 07. 26.] */
		SELECT
			CP.DISPLAY_CATEGORY_ID
			, CP.PRODUCT_ID
		  FROM
		  	DMS_DISPLAYCATEGORYPRODUCT CP
		  	JOIN PMS_PRODUCT P
		  		ON CP.STORE_ID = P.STORE_ID
		  		AND CP.PRODUCT_ID = P.PRODUCT_ID
		  		<if test="addCategoryId != null and addCategoryId != ''">
			 		AND P.CATEGORY_ID = #{addCategoryId}
			 	</if> 
		 WHERE
		 	CP.STORE_ID = #{storeId}
		 	AND CP.DISPLAY_CATEGORY_ID = #{displayCategoryId}	 	
	</select>

	<select id="getRecommendCategory" resultMap="getAllCategoryListResult">
		/*[dms.category.getRecommendCategory][emily][2016. 11. 01.]*/
		<include refid="getCategoryTreeList"/>
			AND LEAF_YN = #{leafYn}
			AND NAME LIKE #{searchKeyword} ||'%'
			ORDER BY UPPER_DISPLAY_CATEGORY_ID,SORT_NO
	</select>
	
	<select id="getLowDisplaycategory" resultType="dmsDisplaycategory">
		/*[dms.category.getUpperDisplaycategory][emily][2016. 11. 01.]*/
		SELECT *
		 FROM DMS_DISPLAYCATEGORY
		 WHERE STORE_ID='1001'
		 AND UPPER_DISPLAY_CATEGORY_ID=#{upperDisplayCategoryId}
	</select>
</mapper>