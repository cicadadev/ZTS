<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dms.special">
	
	<select id="getSubscriptionPrdList" resultMap="categoryMap">
	/* [dms.special.getSubscriptionPrdList][allen][2016. 9. 20.] */
		SELECT 
             CASE A.DEPTH   WHEN 3 THEN (SELECT NAME FROM DMS_DISPLAYCATEGORY WHERE DISPLAY_CATEGORY_ID = A.UPPER_DISPLAY_CATEGORY_ID)
                          WHEN 1 THEN (SELECT NAME FROM DMS_DISPLAYCATEGORY WHERE UPPER_DISPLAY_CATEGORY_ID = A.DISPLAY_CATEGORY_ID)
                          ELSE A.NAME
                          END CATEGORY_NAME
                         , A.*
                         , B.PRODUCT_ID
          FROM (
                    SELECT T4.*, LEVEL AS DEPTH 
                    FROM DMS_DISPLAYCATEGORY T4
                    WHERE T4.DISPLAY_YN = 'Y'
                      AND T4.LEAF_YN = 'Y'
                    START WITH T4.UPPER_DISPLAY_CATEGORY_ID = #{rootCategoryId}
                    CONNECT BY PRIOR T4.DISPLAY_CATEGORY_ID = T4.UPPER_DISPLAY_CATEGORY_ID
                ) A JOIN 

                (
                    SELECT   
                    		 T1.PRODUCT_ID, T2.DISPLAY_CATEGORY_ID
                      FROM PMS_PRODUCT T1
                      JOIN DMS_DISPLAYCATEGORYPRODUCT T2
                        ON T1.PRODUCT_ID = T2.PRODUCT_ID
                      WHERE T1.STORE_ID = #{storeId} 
                      AND T1.REGULAR_DELIVERY_YN = 'Y'
                      AND SYSDATE BETWEEN T1.SALE_START_DT AND T1.SALE_END_DT
                      AND T1.SALE_STATE_CD = 'SALE_STATE_CD.SALE'
                ) B
            ON A.DISPLAY_CATEGORY_ID = B.DISPLAY_CATEGORY_ID
	</select>
	
	
	<select id="getPickupBrandList" resultType="pmsBrand">
	/* [dms.special.getPickupBrandList][allen][2016. 9. 20.] */
		SELECT  T2.BRAND_ID, T2.NAME
          FROM PMS_PRODUCT T1
          JOIN PMS_BRAND T2
            ON T1.BRAND_ID = T2.BRAND_ID
           AND T1.STORE_ID = T2.STORE_ID
           AND T1.STORE_ID = #{storeId}
          JOIN CCS_CODE code
            ON T2.BRAND_ID = code.CD
           AND CODE.CD_GROUP_CD = 'BRAND_CD'
           AND code.USE_YN = 'Y'
          JOIN DMS_DISPLAYCATEGORYPRODUCT T3
            ON T1.PRODUCT_ID = T3.PRODUCT_ID
          JOIN DMS_DISPLAYCATEGORY T4
            ON T3.DISPLAY_CATEGORY_ID = T4.DISPLAY_CATEGORY_ID
            AND T4.DISPLAY_YN = 'Y'
            JOIN (
                        SELECT SUM(T2.REAL_STOCK_QTY) AS OFFSTOCKQTY, PRD.PRODUCT_ID 
                        FROM PMS_PRODUCT PRD
                        JOIN CCS_CODE code
                          ON PRD.BRAND_ID = code.CD
                         AND CODE.CD_GROUP_CD = 'BRAND_CD' 
                         AND code.USE_YN = 'Y'
                         AND PRD.STORE_ID = #{storeId}
                         JOIN PMS_SALEPRODUCT T1
                           ON PRD.PRODUCT_ID = T1.PRODUCT_ID
                          AND T1.STORE_ID = #{storeId}
                         JOIN PMS_OFFSHOPSTOCK T2
                          ON T1.SALEPRODUCT_ID = T2.SALEPRODUCT_ID
                         JOIN CCS_OFFSHOP T3
                           ON T2.OFFSHOP_ID = T3.OFFSHOP_ID 
                         WHERE PRD.OFFSHOP_PICKUP_YN = 'Y'
                         
<!--                          AND SYSDATE BETWEEN PRD.SALE_START_DT AND PRD.SALE_END_DT -->
                         AND PRD.SALE_STATE_CD NOT IN ('SALE_STATE_CD.MDSTOP', 'SALE_STATE_CD.END')
                         AND T3.STORE_ID = #{storeId}
                         AND T3.OFFSHOP_PICKUP_YN = 'Y'
                         AND T3.OFFSHOP_STATE_CD = 'OFFSHOP_STATE_CD.RUN'
                         <if test="offshopId != null and offshopId != ''">
                          AND T3.OFFSHOP_ID = #{offshopId}
                         </if>
                         
                         GROUP BY PRD.PRODUCT_ID 
                          
                ) OFFSTOCK
             ON T1.PRODUCT_ID = OFFSTOCK.PRODUCT_ID
             AND OFFSTOCK.OFFSTOCKQTY > 0 
             WHERE T1.OFFSHOP_PICKUP_YN = 'Y'
<!--              AND SYSDATE BETWEEN T1.SALE_START_DT AND T1.SALE_END_DT -->
			 AND SALE_STATE_CD NOT IN ('SALE_STATE_CD.MDSTOP', 'SALE_STATE_CD.END')
             AND T3.DISPLAY_YN = 'Y'
             GROUP BY T2.BRAND_ID, T2.NAME
	</select>
	
	
	<resultMap type="dmsDisplayCategory" id="categoryMap" autoMapping="true">
		<id column="UPPER_DISPLAY_CATEGORY_ID" property="upperDisplayCategoryId"/>
		<result column="DISPLAY_CATEGORY_ID" property="displayCategoryId"/>
		<result column="CATEGORY_NAME" property="categoryName"/>
		<collection property="dmsDisplaycategoryproducts" ofType="gcp.dms.model.DmsDisplaycategoryproduct">
			<id column="UPPER_DISPLAY_CATEGORY_ID" property="twoDepthCategoryId"/>
			<id column="PRODUCT_ID" property="productId"/>
			<result column="DISPLAY_CATEGORY_ID" property="displayCategoryId"/>
			<association property="pmsProduct" column="PRODUCT_ID" javaType="pmsProduct">
				<id property="productId" column="PRODUCT_ID" />
				<id property="name" column="PRODUCT_NAME" />
				<id property="offshopImg" column="OFFSHOP_IMG" />
				<result property="salePrice" column="PRODUCT_SALE_PRICE" />
				<result property="listPrice" column="LIST_PRICE" />
				<result property="offshopPickupDcRate" column="OFFSHOP_PICKUP_DC_RATE" />
				<result property="pickupPrice" column="PICKUP_PRICE" />
				<association property="pmsProductprice" column="PRODUCT_ID" javaType="pmsProductprice">
					<id property="productId" 					column="PRODUCT_ID" />
					<result property="salePrice"				column="PRODUCT_SALE_PRICE" />
					<result property="pointYn" 					column="POINT_YN" />
					<result property="deliveryFeeFreeYn" 		column="DELIVERY_FEE_FREE_YN" />
					<result property="couponId" 				column="COUPON_ID" />
					<result property="prestigeSalePrice"		column="PRESTIGE_SALE_PRICE" />
					<result property="prestigePointYn"			column="PRESTIGE_POINT_YN" />
					<result property="prestigeDeliveryFeeFreeYn" column="PRESTIGE_DELIVERY_FEE_FREE_YN" />
					<result property="prestigeCouponId"			column="PRESTIGE_COUPON_ID" />
					<result property="vipSalePrice"				column="VIP_SALE_PRICE" />
					<result property="vipPointYn" 				column="VIP_POINT_YN" /> 
					<result property="vipDeliveryFeeFreeYn" 	column="VIP_DELIVERY_FEE_FREE_YN" />
					<result property="vipCouponId" 				column="VIP_COUPON_ID" />
					<result property="goldSalePrice"			column="GOLD_SALE_PRICE" />
					<result property="goldPointYn" 				column="GOLD_POINT_YN" />
					<result property="goldDeliveryFeeFreeYn"	column="GOLD_DELIVERY_FEE_FREE_YN" />
					<result property="goldCouponId"				column="GOLD_COUPON_ID" />
					<result property="silverSalePrice"			column="SILVER_SALE_PRICE" />
					<result property="silverPointYn"			column="SILVER_POINT_YN" />
					<result property="silverDeliveryFeeFreeYn"	column="SILVER_DELIVERY_FEE_FREE_YN" />
					<result property="silverCouponId"			column="SILVER_COUPON_ID" />
					<result property="familySalePrice"			column="FAMILY_SALE_PRICE" />
					<result property="familyPointYn"			column="FAMILY_POINT_YN" />
					<result property="familyDeliveryFeeFreeYn"	column="FAMILY_DELIVERY_FEE_FREE_YN" />
					<result property="familyCouponId"			column="FAMILY_COUPON_ID" />
					<result property="welcomeSalePrice" 		column="WELCOME_SALE_PRICE" />
					<result property="welcomePointYn" 			column="WELCOME_POINT_YN" />
					<result property="welcomeDeliveryFeeFreeYn" column="WELCOME_DELIVERY_FEE_FREE_YN" />
					<result property="welcomeCouponId" 			column="WELCOME_COUPON_ID" />
				</association>
			</association>
		</collection>
	</resultMap>
	
	
	
	<select id="getPickupInfoList" resultMap="categoryMap">
	/* [dms.special.getPickupInfoList][allen][2016. 9. 20.] */
	
		<include refid="ccs.common.pagingPre" />
		SELECT CASE RESULT.LEV   WHEN 3 THEN (SELECT NAME FROM DMS_DISPLAYCATEGORY WHERE DISPLAY_CATEGORY_ID = RESULT.UPPER_DISPLAY_CATEGORY_ID AND STORE_ID = #{storeId})
                          WHEN 1 THEN (SELECT NAME FROM DMS_DISPLAYCATEGORY WHERE UPPER_DISPLAY_CATEGORY_ID = RESULT.DISPLAY_CATEGORY_ID)
                          ELSE RESULT.NAME
                          END CATEGORY_NAME
                        , RESULT.*
          FROM (
				SELECT      
                  ROWNUM AS ROW_NUM
                , A.DISPLAY_CATEGORY_ID
                , A.UPPER_DISPLAY_CATEGORY_ID
                , A.NAME
                , A.SORT_NO
                , A.LEV  
                , B.PRODUCT_ID
                , B.SALE_PRICE
                , B.LIST_PRICE
                , B.PRODUCT_NAME 
                , B.BRAND_NAME 
                , B.BRAND_ID
                , B.OFFSHOP_PICKUP_DC_RATE
                , B.PRODUCT_SALE_PRICE
                , B.OFFSHOP_IMG
                , B.ORDER_QTY
                , B.RATING
                , B.INS_DT
           FROM
                (
                    SELECT 
                             T4.DISPLAY_CATEGORY_ID
                           , T4.UPPER_DISPLAY_CATEGORY_ID
                           , T4.NAME
                           , T4.SORT_NO
                    	   , LEVEL AS LEV 
                   	  FROM DMS_DISPLAYCATEGORY T4
                    WHERE T4.DISPLAY_YN = 'Y'
                     AND T4.STORE_ID = #{storeId}
                    <if test="displayCategoryId != null and displayCategoryId != ''">
                      	AND T4.DISPLAY_CATEGORY_ID = #{displayCategoryId}
                      	</if>
                    START WITH T4.UPPER_DISPLAY_CATEGORY_ID = #{rootCategoryId}
                    CONNECT BY PRIOR T4.DISPLAY_CATEGORY_ID = T4.UPPER_DISPLAY_CATEGORY_ID
                ) A JOIN 

                (   
                    SELECT   T1.PRODUCT_ID
                           , T1.SALE_PRICE
                           , T1.NAME AS PRODUCT_NAME 
                           , T2.NAME AS BRAND_NAME 
                           , T2.BRAND_ID
                           , T1.OFFSHOP_PICKUP_DC_RATE
                           , T1.OFFSHOP_IMG
                           , T1.LIST_PRICE
                           , DECODE(NVL(T1.OFFSHOP_PICKUP_DC_RATE, 0), 0, T1.SALE_PRICE, (T1.SALE_PRICE * (100 - NVL(T1.OFFSHOP_PICKUP_DC_RATE,0)) / 100)) AS PRODUCT_SALE_PRICE
                           , T3.DISPLAY_CATEGORY_ID
                           , summary.ORDER_QTY
                           , summary.RATING
                           , T1.INS_DT
                      FROM PMS_PRODUCT T1
                      JOIN PMS_BRAND T2
                        ON T1.BRAND_ID = T2.BRAND_ID
                       AND T1.STORE_ID = T2.STORE_ID 
                       AND T1.STORE_ID = #{storeId}
                      JOIN CCS_CODE CODE
           			    ON T1.BRAND_ID = CODE.CD
          			   AND CODE.CD_GROUP_CD = 'BRAND_CD'
          			   AND CODE.USE_YN = 'Y' 
                      JOIN (
                                    SELECT SUM(T2.REAL_STOCK_QTY) AS OFFSTOCKQTY, PRD.PRODUCT_ID 
                                    FROM PMS_PRODUCT PRD
                                    JOIN CCS_CODE CODE
                          			  ON PRD.BRAND_ID = CODE.CD
                         			  AND CODE.CD_GROUP_CD = 'BRAND_CD'
                         			  AND CODE.USE_YN = 'Y' 
                         			  AND PRD.STORE_ID = #{storeId}
                                     JOIN PMS_SALEPRODUCT T1
                                       ON PRD.PRODUCT_ID = T1.PRODUCT_ID
                                      AND T1.STORE_ID = #{storeId} 
                                     JOIN PMS_OFFSHOPSTOCK T2
                                      ON T1.SALEPRODUCT_ID = T2.SALEPRODUCT_ID
                                     JOIN CCS_OFFSHOP T3
                                       ON T2.OFFSHOP_ID = T3.OFFSHOP_ID
                                      AND T3.STORE_ID = #{storeId}
                                     <if test="memberNo != null and memberNo != ''">
										 JOIN MMS_INTERESTOFFSHOP T4
	                                       ON T3.OFFSHOP_ID = T4.OFFSHOP_ID
	                                      AND T4.MEMBER_NO = #{memberNo}                                       
                                     </if> 
                                     WHERE PRD.OFFSHOP_PICKUP_YN = 'Y'
<!--                                       AND SYSDATE BETWEEN PRD.SALE_START_DT AND PRD.SALE_END_DT -->
                         			  AND PRD.SALE_STATE_CD NOT IN ('SALE_STATE_CD.MDSTOP', 'SALE_STATE_CD.END')
                        			  AND T3.OFFSHOP_PICKUP_YN = 'Y'
                        			  AND T3.OFFSHOP_STATE_CD = 'OFFSHOP_STATE_CD.RUN'
                                     <if test="offshopId != null and offshopId != ''">
                                     AND T3.OFFSHOP_ID = #{offshopId}
                                     </if>
                                     <if test="areaDiv1 != null and areaDiv1 != ''">
                                     AND T3.AREA_DIV1 = #{areaDiv1}
                                     </if>
                                     <if test="areaDiv2 != null and areaDiv2 != ''">
                                     AND T3.AREA_DIV2 = #{areaDiv2}
                                     </if>
                                     <if test="offshopTypeCd != null and offshopTypeCd != ''">
                                     AND T3.OFFSHOP_TYPE_CD = #{offshopTypeCd}
                                     </if>
                                     <if test="searchKeyword != null and searchKeyword != ''">
                                     AND T3.NAME LIKE  '%'|| #{searchKeyword} ||'%'
                                     </if>
                                     GROUP BY PRD.PRODUCT_ID 
                                      
                            ) OFFSTOCK
                         ON T1.PRODUCT_ID = OFFSTOCK.PRODUCT_ID
                         AND OFFSTOCK.OFFSTOCKQTY > 0                
                      JOIN DMS_DISPLAYCATEGORYPRODUCT T3
                        ON T1.PRODUCT_ID = T3.PRODUCT_ID
                       AND T1.STORE_ID = T3.STORE_ID
                      JOIN DMS_DISPLAYCATEGORY T6
                        ON T3.DISPLAY_CATEGORY_ID = T6.DISPLAY_CATEGORY_ID
                        AND T3.STORE_ID = T6.STORE_ID
                        AND T6.DISPLAY_YN = 'Y'
                      LEFT JOIN PMS_PRODUCTSUMMARY summary
                        ON T1.PRODUCT_ID = summary.PRODUCT_ID
                       AND T1.STORE_ID = summary.STORE_ID
                      WHERE T1.OFFSHOP_PICKUP_YN = 'Y' 
                        <if test="brandId != null and brandId != ''">
                        	AND T2.BRAND_ID = #{brandId}
                        </if>
                	) B
              ON A.DISPLAY_CATEGORY_ID = B.DISPLAY_CATEGORY_ID
               ) RESULT
                <if test="mobileSort != null and mobileSort != ''">
	      			ORDER BY  CASE #{mobileSort} WHEN 'PRODUCT_SORT_CD.POPULAR' THEN RESULT.ORDER_QTY END DESC 
	      	 	   			, CASE #{mobileSort} WHEN 'PRODUCT_SORT_CD.REVIEW' THEN RESULT.RATING END DESC
	      	 				, CASE #{mobileSort} WHEN 'PRODUCT_SORT_CD.LOWPRICE' THEN RESULT.PRODUCT_SALE_PRICE END ASC
	      	 				, CASE #{mobileSort} WHEN 'PRODUCT_SORT_CD.HIGHPRICE' THEN RESULT.PRODUCT_SALE_PRICE END DESC
      	 		 			, CASE #{mobileSort} WHEN 'PRODUCT_SORT_CD.LATEST' THEN RESULT.INS_DT END DESC
		     	</if>
		     <if test="mobileSort == null or mobileSort == ''">
		     	ORDER BY RESULT.ORDER_QTY
		     </if>
               <include refid="ccs.common.pagingPost" />
	</select>
	
	<select id="getGiftshopCategoryList" resultMap="categoryMap">
	/* [dms.special.getGiftshopCategoryList][allen][2016. 9. 20.] */
		SELECT  CASE A.LEV   WHEN 3 THEN (SELECT NAME FROM DMS_DISPLAYCATEGORY WHERE DISPLAY_CATEGORY_ID = A.UPPER_DISPLAY_CATEGORY_ID)
                          WHEN 1 THEN (SELECT NAME FROM DMS_DISPLAYCATEGORY WHERE UPPER_DISPLAY_CATEGORY_ID = A.DISPLAY_CATEGORY_ID)
                          ELSE A.NAME
                          END CATEGORY_NAME
                          , A.*
          FROM
                (
                    SELECT 
                             T4.DISPLAY_CATEGORY_ID
                           , T4.UPPER_DISPLAY_CATEGORY_ID
                           , T4.NAME
                           , T4.SORT_NO
                    , LEVEL AS LEV FROM
                    DMS_DISPLAYCATEGORY T4
                    WHERE T4.DISPLAY_YN = 'Y'
                    START WITH T4.UPPER_DISPLAY_CATEGORY_ID = '00001'
                    CONNECT BY PRIOR T4.DISPLAY_CATEGORY_ID = T4.UPPER_DISPLAY_CATEGORY_ID
                ) A JOIN 

                (   
                    SELECT   T1.PRODUCT_ID
                           , T1.SALE_PRICE
                           , T3.DISPLAY_CATEGORY_ID
                      FROM PMS_PRODUCT T1
                      JOIN DMS_DISPLAYCATEGORYPRODUCT T3
                        ON T1.PRODUCT_ID = T3.PRODUCT_ID
                      LEFT JOIN PMS_PRODUCTSUMMARY T5
                        ON T1.PRODUCT_ID = T5.PRODUCT_ID
                      WHERE T1.STORE_ID = #{storeId} 
                      	AND SYSDATE BETWEEN T1.SALE_START_DT AND T1.SALE_END_DT
                        AND T1.SALE_STATE_CD = 'SALE_STATE_CD.SALE'
                        AND T1.GIFT_YN = 'Y'
                        AND T1.PRODUCT_ID IN 
                        <foreach collection="productIdList" item="productId"  open="(" separator="," close=")">
		        			#{productId} 
		  				</foreach>
                ) B
               ON A.DISPLAY_CATEGORY_ID = B.DISPLAY_CATEGORY_ID
               ORDER BY A.SORT_NO
	</select>
	
	
	
	<select id="getMainPickupPrdList" resultType="pmsProduct">
		/* [dms.special.getMainPickupPrdList][emily][2016.10.03] */
		SELECT *
		FROM ( SELECT PR.*, T5.ORDER_QTY, NVL(T5.RATING,0)RATING
					FROM ( SELECT  T1.STORE_ID, T1.PRODUCT_ID
<!-- 								   , T1.SALE_PRICE -->
								   , T1.NAME
								   , T1.OFFSHOP_PICKUP_DC_RATE
								   , DECODE(NVL(T1.OFFSHOP_PICKUP_DC_RATE, 0), 0, T1.SALE_PRICE, (T1.SALE_PRICE * (100 - NVL(T1.OFFSHOP_PICKUP_DC_RATE,0)) / 100)) AS SALE_PRICE
								   , T1.LIST_PRICE
								FROM PMS_PRODUCT T1
									, (     SELECT SUM(T2.REAL_STOCK_QTY) AS OFFSTOCKQTY, PRD.PRODUCT_ID 
		                                    FROM PMS_PRODUCT PRD
		                                    JOIN CCS_CODE CODE
		                          			  ON PRD.BRAND_ID = CODE.CD
		                         			  AND CODE.CD_GROUP_CD = 'BRAND_CD'
		                         			  AND CODE.USE_YN = 'Y' 
		                         			  AND PRD.STORE_ID = #{storeId}
		                                     JOIN PMS_SALEPRODUCT T1
		                                       ON PRD.PRODUCT_ID = T1.PRODUCT_ID
		                                      AND T1.STORE_ID = #{storeId} 
		                                     JOIN PMS_OFFSHOPSTOCK T2
		                                      ON T1.SALEPRODUCT_ID = T2.SALEPRODUCT_ID
		                                     JOIN CCS_OFFSHOP T3
		                                       ON T2.OFFSHOP_ID = T3.OFFSHOP_ID
									     WHERE PRD.STORE_ID = T1.STORE_ID
									     AND PRD.PRODUCT_ID = T1.PRODUCT_ID
									     AND T1.STORE_ID = T2.STORE_ID 
									     AND T1.SALEPRODUCT_ID = T2.SALEPRODUCT_ID
									     AND T2.STORE_ID = T3.STORE_ID 
									     AND T2.OFFSHOP_ID = T3.OFFSHOP_ID
									     AND PRD.OFFSHOP_PICKUP_YN = 'Y' 
									     AND T3.OFFSHOP_PICKUP_YN = 'Y'
                        			     AND T3.OFFSHOP_STATE_CD = 'OFFSHOP_STATE_CD.RUN'
									 GROUP BY PRD.STORE_ID,PRD.PRODUCT_ID 
									 ) OFF
								 WHERE T1.PRODUCT_ID = OFF.PRODUCT_ID
								 AND OFF.OFFSTOCKQTY > 0
								 AND T1.STORE_ID = #{storeId}
								 AND SYSDATE BETWEEN T1.SALE_START_DT AND T1.SALE_END_DT
                        		 AND T1.SALE_STATE_CD NOT IN ('SALE_STATE_CD.MDSTOP', 'SALE_STATE_CD.END')
					 	)PR 
					 	LEFT JOIN PMS_PRODUCTSUMMARY T5
							ON (PR.STORE_ID =T5.STORE_ID AND  PR.PRODUCT_ID = T5.PRODUCT_ID)
						ORDER BY RATING DESC
			)
		<trim prefix="WHERE" prefixOverrides="AND|OR">
		    <if test="rownum != null and rownum != ''">
			    AND ROWNUM <![CDATA[<=]]> #{rownum}
		    </if>
	    </trim>
	</select>
	
	<resultMap type="pmsProduct" id="productMap" autoMapping="true">
		<id column="PRODUCT_ID" property="productId"/>
		<result property="listPrice"				column="LIST_PRICE" />
		<association property="pmsProductprice" column="PRODUCT_ID" javaType="pmsProductprice">
			<id property="productId" 					column="PRODUCT_ID" />
			<result property="salePrice"				column="PRODUCT_SALE_PRICE" />
			<result property="pointYn" 					column="POINT_YN" />
			<result property="deliveryFeeFreeYn" 		column="DELIVERY_FEE_FREE_YN" />
			<result property="couponId" 				column="COUPON_ID" />
			<result property="prestigeSalePrice"		column="PRESTIGE_SALE_PRICE" />
			<result property="prestigePointYn"			column="PRESTIGE_POINT_YN" />
			<result property="prestigeDeliveryFeeFreeYn" column="PRESTIGE_DELIVERY_FEE_FREE_YN" />
			<result property="prestigeCouponId"			column="PRESTIGE_COUPON_ID" />
			<result property="vipSalePrice"				column="VIP_SALE_PRICE" />
			<result property="vipPointYn" 				column="VIP_POINT_YN" /> 
			<result property="vipDeliveryFeeFreeYn" 	column="VIP_DELIVERY_FEE_FREE_YN" />
			<result property="vipCouponId" 				column="VIP_COUPON_ID" />
			<result property="goldSalePrice"			column="GOLD_SALE_PRICE" />
			<result property="goldPointYn" 				column="GOLD_POINT_YN" />
			<result property="goldDeliveryFeeFreeYn"	column="GOLD_DELIVERY_FEE_FREE_YN" />
			<result property="goldCouponId"				column="GOLD_COUPON_ID" />
			<result property="silverSalePrice"			column="SILVER_SALE_PRICE" />
			<result property="silverPointYn"			column="SILVER_POINT_YN" />
			<result property="silverDeliveryFeeFreeYn"	column="SILVER_DELIVERY_FEE_FREE_YN" />
			<result property="silverCouponId"			column="SILVER_COUPON_ID" />
			<result property="familySalePrice"			column="FAMILY_SALE_PRICE" />
			<result property="familyPointYn"			column="FAMILY_POINT_YN" />
			<result property="familyDeliveryFeeFreeYn"	column="FAMILY_DELIVERY_FEE_FREE_YN" />
			<result property="familyCouponId"			column="FAMILY_COUPON_ID" />
			<result property="welcomeSalePrice" 		column="WELCOME_SALE_PRICE" />
			<result property="welcomePointYn" 			column="WELCOME_POINT_YN" />
			<result property="welcomeDeliveryFeeFreeYn" column="WELCOME_DELIVERY_FEE_FREE_YN" />
			<result property="welcomeCouponId" 			column="WELCOME_COUPON_ID" />
		</association>
	</resultMap>
	
	<select id="getThemeProductList" resultMap="productMap">
	/* [dms.special.getThemeProductList][allen][2016. 9. 20.] */
		<include refid="ccs.common.pagingPre" />
		SELECT /*+ INDEX ( prd IDX_PMS_PRODUCT_DATE ) */
				prd.PRODUCT_ID
              ,	prd.NAME
              ,	prd.SALE_PRICE		AS PRODUCT_SALE_PRICE
              ,	prd.LIST_PRICE
              , price.SALE_PRICE       			
			  , price.POINT_YN                     
			  , price.DELIVERY_FEE_FREE_YN         
			  , price.COUPON_ID                    
			  , price.PRESTIGE_SALE_PRICE          
			  , price.PRESTIGE_POINT_YN            
			  , price.PRESTIGE_DELIVERY_FEE_FREE_YN
			  , price.PRESTIGE_COUPON_ID           
			  , price.VIP_SALE_PRICE
			  , price.VIP_POINT_YN
			  , price.VIP_DELIVERY_FEE_FREE_YN
			  , price.VIP_COUPON_ID
			  , price.GOLD_SALE_PRICE
			  , price.GOLD_POINT_YN
			  , price.GOLD_DELIVERY_FEE_FREE_YN
			  , price.GOLD_COUPON_ID
			  , price.SILVER_SALE_PRICE
			  , price.SILVER_POINT_YN
			  , price.SILVER_DELIVERY_FEE_FREE_YN
			  , price.SILVER_COUPON_ID
			  , price.FAMILY_SALE_PRICE
			  , price.FAMILY_POINT_YN
			  , price.FAMILY_DELIVERY_FEE_FREE_YN
			  , price.FAMILY_COUPON_ID
			  , price.WELCOME_SALE_PRICE
			  , price.WELCOME_POINT_YN
			  , price.WELCOME_DELIVERY_FEE_FREE_YN
			  , price.WELCOME_COUPON_ID
		 FROM PMS_PRODUCT prd
		 JOIN PMS_PRODUCTPRICE price
  		   ON prd.PRODUCT_ID = price.PRODUCT_ID
  		  AND prd.STORE_ID = price.STORE_ID
  		  AND prd.STORE_ID = #{storeId}
		 LEFT JOIN PMS_PRODUCTSUMMARY summary
  		   ON prd.PRODUCT_ID = summary.PRODUCT_ID
  		  AND prd.STORE_ID = summary.STORE_ID
		 WHERE prd.THEME_CD IS NOT NULL
		   AND prd.STORE_ID = #{storeId}
  		   AND prd.GIFT_YN = 'Y'
  		   AND SYSDATE BETWEEN prd.SALE_START_DT AND prd.SALE_END_DT
  		   AND prd.SALE_STATE_CD = 'SALE_STATE_CD.SALE'
  		   <if test="themeCd != null and themeCd != ''">
  		   AND prd.THEME_CD = #{themeCd}
  		   </if>
  		   <if test="ageTypeCds != null and ageTypeCds.length > 0 and ageTypeCds != '[]'">
					AND prd.PRODUCT_ID = (SELECT PRODUCT_ID FROM PMS_PRODUCTAGE 
	                              WHERE PRODUCT_ID = prd.PRODUCT_ID 
	                              AND AGE_TYPE_CD IN 
	                              <foreach collection="ageTypeCds" item="ageTypeCd"  open="(" separator="," close=")">
										#{ageTypeCd} 
			   					  </foreach>
	                        			)
	      	
  		 </if>
	     <if test="genderTypeCd != null and genderTypeCd != ''">
	      	AND prd.GENDER_TYPE_CD = #{genderTypeCd}
	     </if>
	     <if test="minPrice != null and minPrice != ''">
	      	<if test="maxPrice != null and maxPrice != ''">
	      		<choose>
					<when test="memGradeCd == 'MEM_GRADE_CD.GOLD'">
						AND price.GOLD_SALE_PRICE BETWEEN #{minPrice} AND #{maxPrice}
					</when>	      		
					<when test="memGradeCd == 'MEM_GRADE_CD.SILVER'">
						AND price.SILVER_SALE_PRICE BETWEEN #{minPrice} AND #{maxPrice}
					</when>	      		
					<when test="memGradeCd == 'MEM_GRADE_CD.WELCOME'">
						AND price.WELCOME_SALE_PRICE BETWEEN #{minPrice} AND #{maxPrice}
					</when>	      		
					<when test="memGradeCd == 'MEM_GRADE_CD.FAMILY'">
						AND price.FAMILY_SALE_PRICE BETWEEN #{minPrice} AND #{maxPrice}
					</when>	      		
					<when test="memGradeCd == 'MEM_GRADE_CD.VIP'">
						AND price.VIP_SALE_PRICE BETWEEN #{minPrice} AND #{maxPrice}
					</when>	      		
					<when test="memGradeCd == 'MEM_GRADE_CD.PRESTIGE'">
						AND price.PRESTIGE_SALE_PRICE BETWEEN #{minPrice} AND #{maxPrice}
					</when>	      		
	      			<otherwise>
	      				AND price.SALE_PRICE BETWEEN #{minPrice} AND #{maxPrice}
	      			</otherwise>
	      		</choose>	
	      	</if>
	     </if>
 		 <if test="mobileSort != null and mobileSort != ''">
	      		<include refid="productSort"/>
	     </if>
	     <if test="mobileSort == null or mobileSort == ''">
	     	ORDER BY summary.ORDER_QTY
	     </if>
 		 <include refid="ccs.common.pagingPost" />
	</select>
	
	
	
	
	<select id="getThemeCategoryNproductList" resultMap="categoryMap">
	/* [dms.special.getThemeCategoryNproductList][allen][2016. 9. 20.] */
		SELECT  
                CASE A.LEV   WHEN 3 THEN (SELECT NAME FROM DMS_DISPLAYCATEGORY WHERE DISPLAY_CATEGORY_ID = A.UPPER_DISPLAY_CATEGORY_ID)
                                          WHEN 1 THEN (SELECT NAME FROM DMS_DISPLAYCATEGORY WHERE UPPER_DISPLAY_CATEGORY_ID = A.DISPLAY_CATEGORY_ID)
                                          ELSE A.NAME
                                          END CATEGORY_NAME
               , a.DISPLAY_CATEGORY_ID TWO_DEPTH_CATEGORY_ID
               , a.UPPER_DISPLAY_CATEGORY_ID
              
               , B.*
           FROM 
                (
                    SELECT 
                             T4.DISPLAY_CATEGORY_ID
                           , T4.UPPER_DISPLAY_CATEGORY_ID
                           , T4.NAME
                           , T4.SORT_NO
                    , LEVEL AS LEV FROM
                    DMS_DISPLAYCATEGORY T4
                    WHERE T4.DISPLAY_YN = 'Y'
                    START WITH T4.UPPER_DISPLAY_CATEGORY_ID = #{rootCategoryId}
                    CONNECT BY PRIOR T4.DISPLAY_CATEGORY_ID = T4.UPPER_DISPLAY_CATEGORY_ID
                ) A JOIN
                (
                   SELECT 
                			prd.PRODUCT_ID
                		  ,	prd.NAME				AS PRODUCT_NAME
                		  ,	prd.SALE_PRICE		AS PRODUCT_SALE_PRICE
                		  ,	prd.LIST_PRICE		
                		  , price.SALE_PRICE       			
						  , price.POINT_YN                     
						  , price.DELIVERY_FEE_FREE_YN         
						  , price.COUPON_ID                    
						  , price.PRESTIGE_SALE_PRICE          
						  , price.PRESTIGE_POINT_YN            
						  , price.PRESTIGE_DELIVERY_FEE_FREE_YN
						  , price.PRESTIGE_COUPON_ID           
						  , price.VIP_SALE_PRICE
						  , price.VIP_POINT_YN
						  , price.VIP_DELIVERY_FEE_FREE_YN
						  , price.VIP_COUPON_ID
						  , price.GOLD_SALE_PRICE
						  , price.GOLD_POINT_YN
						  , price.GOLD_DELIVERY_FEE_FREE_YN
						  , price.GOLD_COUPON_ID
						  , price.SILVER_SALE_PRICE
						  , price.SILVER_POINT_YN
						  , price.SILVER_DELIVERY_FEE_FREE_YN
						  , price.SILVER_COUPON_ID
						  , price.FAMILY_SALE_PRICE
						  , price.FAMILY_POINT_YN
						  , price.FAMILY_DELIVERY_FEE_FREE_YN
						  , price.FAMILY_COUPON_ID
						  , price.WELCOME_SALE_PRICE
						  , price.WELCOME_POINT_YN
						  , price.WELCOME_DELIVERY_FEE_FREE_YN
						  , price.WELCOME_COUPON_ID 
               			  , T4.DISPLAY_CATEGORY_ID
			         FROM PMS_PRODUCT prd
			         JOIN DMS_DISPLAYCATEGORYPRODUCT T4
			           ON prd.PRODUCT_ID = T4.PRODUCT_ID
			         JOIN PMS_PRODUCTPRICE price
			             ON prd.PRODUCT_ID = price.PRODUCT_ID
			         LEFT JOIN PMS_PRODUCTSUMMARY summary
			             ON prd.PRODUCT_ID = summary.PRODUCT_ID
			         WHERE prd.STORE_ID = #{storeId} 
			         	 AND prd.THEME_CD IS NOT NULL
			             AND prd.GIFT_YN = 'Y'
			             AND SYSDATE BETWEEN prd.SALE_START_DT AND prd.SALE_END_DT
			             AND prd.SALE_STATE_CD = 'SALE_STATE_CD.SALE'
			             <if test="themeCd != null and themeCd != ''">
			             AND prd.THEME_CD = #{themeCd} 
			             </if>
			             <if test="ageTypeCds != null and ageTypeCds.length > 0">
	      						AND prd.PRODUCT_ID IN (SELECT PRODUCT_ID FROM PMS_PRODUCTAGE 
                                       WHERE PRODUCT_ID = prd.PRODUCT_ID 
                                       AND AGE_TYPE_CD IN 
                                       <foreach collection="ageTypeCds" item="ageTypeCd"  open="(" separator="," close=")">
		      								#{ageTypeCd} 
		  							   </foreach>
                                 )
	      	
	     				 </if>
					     <if test="genderTypeCd != null and genderTypeCd != ''">
					      	AND prd.GENDER_TYPE_CD = #{genderTypeCd}
					     </if>
					     <if test="minPrice != null and minPrice != ''">
					      	<if test="maxPrice != null and maxPrice != ''">
					      		<choose>
									<when test="memGradeCd == 'MEM_GRADE_CD.GOLD'">
										AND price.GOLD_SALE_PRICE BETWEEN #{minPrice} AND #{maxPrice}
									</when>	      		
									<when test="memGradeCd == 'MEM_GRADE_CD.SILVER'">
										AND price.SILVER_SALE_PRICE BETWEEN #{minPrice} AND #{maxPrice}
									</when>	      		
									<when test="memGradeCd == 'MEM_GRADE_CD.WELCOME'">
										AND price.WELCOME_SALE_PRICE BETWEEN #{minPrice} AND #{maxPrice}
									</when>	      		
									<when test="memGradeCd == 'MEM_GRADE_CD.FAMILY'">
										AND price.FAMILY_SALE_PRICE BETWEEN #{minPrice} AND #{maxPrice}
									</when>	      		
									<when test="memGradeCd == 'MEM_GRADE_CD.VIP'">
										AND price.VIP_SALE_PRICE BETWEEN #{minPrice} AND #{maxPrice}
									</when>	      		
									<when test="memGradeCd == 'MEM_GRADE_CD.PRESTIGE'">
										AND price.PRESTIGE_SALE_PRICE BETWEEN #{minPrice} AND #{maxPrice}
									</when>	      		
					      			<otherwise>
					      				AND T2.SALE_PRICE BETWEEN #{minPrice} AND #{maxPrice}
					      			</otherwise>
					      		</choose>	
					      	</if>
					     </if>
			         	<if test="mobileSort != null and mobileSort != ''">
	      					<include refid="productSort"/>
	      				</if>
	      				<if test="mobileSort == null or mobileSort == ''">
	      					ORDER BY summary.ORDER_QTY
	      				</if>
			        ) b
			      ON A.DISPLAY_CATEGORY_ID = B.DISPLAY_CATEGORY_ID
	</select>
	
	
	<select id="getGiftShopCornerPrdList" resultMap="productMap">
	/* [dms.special.getGiftShopCornerPrdList][allen][2016. 9. 20.] */
		 SELECT 
 				prd.PRODUCT_ID
           	  ,	prd.NAME
           	  ,	prd.SALE_PRICE		AS PRODUCT_SALE_PRICE
           	  , price.SALE_PRICE       			
			  , price.POINT_YN                     
			  , price.DELIVERY_FEE_FREE_YN         
			  , price.COUPON_ID                    
			  , price.PRESTIGE_SALE_PRICE          
			  , price.PRESTIGE_POINT_YN            
			  , price.PRESTIGE_DELIVERY_FEE_FREE_YN
			  , price.PRESTIGE_COUPON_ID           
			  , price.VIP_SALE_PRICE
			  , price.VIP_POINT_YN
			  , price.VIP_DELIVERY_FEE_FREE_YN
			  , price.VIP_COUPON_ID
			  , price.GOLD_SALE_PRICE
			  , price.GOLD_POINT_YN
			  , price.GOLD_DELIVERY_FEE_FREE_YN
			  , price.GOLD_COUPON_ID
			  , price.SILVER_SALE_PRICE
			  , price.SILVER_POINT_YN
			  , price.SILVER_DELIVERY_FEE_FREE_YN
			  , price.SILVER_COUPON_ID
			  , price.FAMILY_SALE_PRICE
			  , price.FAMILY_POINT_YN
			  , price.FAMILY_DELIVERY_FEE_FREE_YN
			  , price.FAMILY_COUPON_ID
			  , price.WELCOME_SALE_PRICE
			  , price.WELCOME_POINT_YN
			  , price.WELCOME_DELIVERY_FEE_FREE_YN
			  , price.WELCOME_COUPON_ID 
	      FROM DMS_DISPLAY T1
	      JOIN DMS_DISPLAYITEM T2
	        ON T1.DISPLAY_ID = T2.DISPLAY_ID
	      JOIN PMS_PRODUCT prd
	        ON T2.DISPLAY_ITEM_ID = prd.PRODUCT_ID
	      JOIN PMS_PRODUCTPRICE price
	        ON prd.PRODUCT_ID = price.PRODUCT_ID
	      LEFT JOIN PMS_PRODUCTSUMMARY summary
	        ON prd.PRODUCT_ID = summary.PRODUCT_ID
	     WHERE T1.DISPLAY_ID = #{displayId}
	      AND T1.STORE_ID = #{storeId}
	      AND SYSDATE BETWEEN prd.SALE_START_DT AND prd.SALE_END_DT
	      AND prd.STORE_ID = #{storeId}
	      AND prd.SALE_STATE_CD = 'SALE_STATE_CD.SALE'
	      <if test="ageTypeCds != null and ageTypeCds.length > 0">
	      	AND prd.PRODUCT_ID = (SELECT PRODUCT_ID FROM PMS_PRODUCTAGE 
                                       WHERE PRODUCT_ID = prd.PRODUCT_ID 
                                       AND AGE_TYPE_CD IN 
                                       <foreach collection="ageTypeCds" item="ageTypeCd"  open="(" separator="," close=")">
		      								#{ageTypeCd} 
		  							   </foreach>
                                 )
	      	
	      </if>
	      <if test="genderTypeCd != null and genderTypeCd != ''">
	      	AND prd.GENDER_TYPE_CD = #{genderTypeCd}
	      </if>
	      <if test="minPrice != null and minPrice != ''">
	      	<if test="maxPrice != null and maxPrice != ''">
	      		<choose>
					<when test="memGradeCd == 'MEM_GRADE_CD.GOLD'">
						AND price.GOLD_SALE_PRICE BETWEEN #{minPrice} AND #{maxPrice}
					</when>	      		
					<when test="memGradeCd == 'MEM_GRADE_CD.SILVER'">
						AND price.SILVER_SALE_PRICE BETWEEN #{minPrice} AND #{maxPrice}
					</when>	      		
					<when test="memGradeCd == 'MEM_GRADE_CD.WELCOME'">
						AND price.WELCOME_SALE_PRICE BETWEEN #{minPrice} AND #{maxPrice}
					</when>	      		
					<when test="memGradeCd == 'MEM_GRADE_CD.FAMILY'">
						AND price.FAMILY_SALE_PRICE BETWEEN #{minPrice} AND #{maxPrice}
					</when>	      		
					<when test="memGradeCd == 'MEM_GRADE_CD.VIP'">
						AND price.VIP_SALE_PRICE BETWEEN #{minPrice} AND #{maxPrice}
					</when>	      		
					<when test="memGradeCd == 'MEM_GRADE_CD.PRESTIGE'">
						AND price.PRESTIGE_SALE_PRICE BETWEEN #{minPrice} AND #{maxPrice}
					</when>	      		
	      			<otherwise>
	      				AND price.SALE_PRICE BETWEEN #{minPrice} AND #{maxPrice}
	      			</otherwise>
	      		</choose>	
	      	</if>
	      </if>
	      <if test="mobileSort != null and mobileSort != ''">
	      	<include refid="productSort"/>
	      </if>
	      <if test="mobileSort == null or mobileSort == ''">
	      	ORDER BY summary.ORDER_QTY
	      </if>
	</select>
	
	
	<sql id="productSort">
		ORDER BY  CASE #{mobileSort} WHEN 'PRODUCT_SORT_CD.POPULAR' THEN summary.ORDER_QTY END DESC 
	      	 	, CASE #{mobileSort} WHEN 'PRODUCT_SORT_CD.REVIEW' THEN summary.RATING END DESC
	      	 	, CASE #{mobileSort} WHEN 'PRODUCT_SORT_CD.LOWPRICE' THEN 
    	 					  		<choose>
										<when test="memGradeCd == 'MEM_GRADE_CD.GOLD'">
											price.GOLD_SALE_PRICE
										</when>	      		
										<when test="memGradeCd == 'MEM_GRADE_CD.SILVER'">
											price.SILVER_SALE_PRICE
										</when>	      		
										<when test="memGradeCd == 'MEM_GRADE_CD.WELCOME'">
											price.WELCOME_SALE_PRICE
										</when>	      		
										<when test="memGradeCd == 'MEM_GRADE_CD.FAMILY'">
											price.FAMILY_SALE_PRICE
										</when>	      		
										<when test="memGradeCd == 'MEM_GRADE_CD.VIP'">
											price.VIP_SALE_PRICE
										</when>	      		
										<when test="memGradeCd == 'MEM_GRADE_CD.PRESTIGE'">
											price.PRESTIGE_SALE_PRICE
										</when>	      		
				      					<otherwise>
				      						price.SALE_PRICE
				      					</otherwise>
				      				</choose>
				      				END ASC
				      				
	      	 	, CASE #{mobileSort} WHEN 'PRODUCT_SORT_CD.HIGHPRICE' THEN
      	 					 		<choose>
										<when test="memGradeCd == 'MEM_GRADE_CD.GOLD'">
											price.GOLD_SALE_PRICE
										</when>	      		
										<when test="memGradeCd == 'MEM_GRADE_CD.SILVER'">
											price.SILVER_SALE_PRICE
										</when>	      		
										<when test="memGradeCd == 'MEM_GRADE_CD.WELCOME'">
											price.WELCOME_SALE_PRICE
										</when>	      		
										<when test="memGradeCd == 'MEM_GRADE_CD.FAMILY'">
											price.FAMILY_SALE_PRICE
										</when>	      		
										<when test="memGradeCd == 'MEM_GRADE_CD.VIP'">
											price.VIP_SALE_PRICE
										</when>	      		
										<when test="memGradeCd == 'MEM_GRADE_CD.PRESTIGE'">
											price.PRESTIGE_SALE_PRICE
										</when>	      		
						      			<otherwise>
						      				price.SALE_PRICE
						      			</otherwise>
						      		</choose>
						      		END DESC
      	 		 , CASE #{mobileSort} WHEN 'PRODUCT_SORT_CD.LATEST' THEN prd.INS_DT END DESC
	</sql>
</mapper>