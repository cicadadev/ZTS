<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ccs.main">
	<select id="getNoticeList" parameterType="String" resultType="ccsNotice">
	  /* [ccs.main.getNoticeList][roy][2016. 8. 4.] */
	  SELECT *
  		FROM (SELECT t.*, ROWNUM rnum
        	 FROM (  
        	 		SELECT *
                    FROM CCS_NOTICE
                    WHERE STORE_ID = #{storeId}
                    	AND DISPLAY_YN = 'Y'
                    	AND SYSDATE BETWEEN START_DT AND END_DT
                    <if test='businessId != null and businessId != ""'>
                    		AND NOTICE_TYPE_CD = 'NOTICE_TYPE_CD.PARTNER'
                    </if>
                    <if test='businessId == null or businessId == ""'>
                    		AND NOTICE_TYPE_CD = 'NOTICE_TYPE_CD.ADMIN'
                    </if>
                    
                	ORDER BY INS_DT DESC) t
             )
 		WHERE rnum BETWEEN 0 and 5
	</select>
	
	<sql id="getProductQna">
		SELECT  PPQ.PRODUCT_QNA_NO, PPQ.TITLE, PPQ.STORE_ID, PPQ.PRODUCT_QNA_STATE_CD, PPQ.INS_DT, CB.BUSINESS_ID 
 		FROM	PMS_PRODUCTQNA PPQ
                	INNER JOIN PMS_PRODUCT PRD
	                   ON PRD.PRODUCT_ID = PPQ.PRODUCT_ID AND PRD.STORE_ID = PPQ.STORE_ID
	            	INNER JOIN CCS_BUSINESS CB
	                   ON CB.BUSINESS_ID = PRD.BUSINESS_ID AND CB.STORE_ID = PPQ.STORE_ID
	    WHERE PPQ.STORE_ID = #{ storeId }
	    ORDER BY PPQ.INS_DT DESC
	</sql>
	
	<select id="getProductQnaList" parameterType="String" resultType="pmsProductqna">
	  /* [ccs.main.getProductQnaList][roy][2016. 8. 5.] */
	  SELECT *
			  FROM (SELECT t.*
			          FROM (  
			                  SELECT ROW_NUMBER() OVER(ORDER BY PPQ.PRODUCT_QNA_NO) AS RNUM,
			                         PPQ.PRODUCT_QNA_NO,
			                         PPQ.TITLE,
			                         PPQ.STORE_ID,
			                         PPQ.PRODUCT_QNA_STATE_CD,
			                         PPQ.INS_DT,
			                         CB.BUSINESS_ID
			                    FROM PMS_PRODUCTQNA PPQ
			                    JOIN PMS_PRODUCT PRD
			                      ON     PRD.PRODUCT_ID = PPQ.PRODUCT_ID
			                    AND PRD.STORE_ID = PPQ.STORE_ID
			                    JOIN CCS_BUSINESS CB
			                      ON     CB.BUSINESS_ID = PRD.BUSINESS_ID
			                     AND CB.STORE_ID = PPQ.STORE_ID
			                    WHERE CB.STORE_ID = #{storeId}
			                     AND CB.BUSINESS_ID = #{businessId}
			                ) t
			         )
			 WHERE RNUM &lt; 6
	</select>
	
	<select id="getProductQnaState" resultType="pmsProductqna">
		/* [ccs.main.getProductQnaState][roy][2016. 8. 5.] */
		SELECT  	(SELECT COUNT (*) FROM (<include refid="getProductQna"/>) t
						WHERE t.PRODUCT_QNA_STATE_CD = 'PRODUCT_QNA_STATE_CD.ANSWER' 
						AND t.ins_dt BETWEEN TO_DATE (#{startDate},
                                           'YYYY-MM-DD HH24:MI:SS')
                              AND TO_DATE (#{endDate},
                                           'YYYY-MM-DD HH24:MI:SS')
						AND t.BUSINESS_ID = #{businessId})
          		 		AS ANSWER_COUNT,
     				(SELECT COUNT (*) FROM (<include refid="getProductQna"/>) t
         				WHERE t.PRODUCT_QNA_STATE_CD = 'PRODUCT_QNA_STATE_CD.ACCEPT' 
         				AND t.ins_dt BETWEEN TO_DATE (#{startDate},
                                           'YYYY-MM-DD HH24:MI:SS')
                              AND TO_DATE (#{endDate},
                                           'YYYY-MM-DD HH24:MI:SS')
         				AND t.BUSINESS_ID = #{businessId})
          				AS ACCEPT_COUNT,
       				(SELECT COUNT (*) FROM (<include refid="getProductQna"/>) t
         				WHERE t.PRODUCT_QNA_STATE_CD = 'PRODUCT_QNA_STATE_CD.COMPLETE' 
         				AND t.ins_dt BETWEEN TO_DATE (#{startDate},
                                           'YYYY-MM-DD HH24:MI:SS')
                              AND TO_DATE (#{endDate},
                                           'YYYY-MM-DD HH24:MI:SS')
         				AND t.BUSINESS_ID = #{businessId})
          				AS COMPLETE_COUNT 
        FROM DUAL 
        WHERE rownum=1	
	</select>
	
	<sql id="getInquiry">
		SELECT  CI.INQUIRY_NO, CI.TITLE, CI.STORE_ID, CI.INQUIRY_STATE_CD, CI.INS_DT, CB.BUSINESS_ID 
 		FROM	CCS_INQUIRY CI
                	INNER JOIN CCS_BUSINESS CB
	                   ON CB.BUSINESS_ID = CI.BUSINESS_ID AND CB.STORE_ID = CI.STORE_ID AND CB.BUSINESS_ID = #{businessId}
		WHERE CI.STORE_ID = #{ storeId }
	    ORDER BY CI.INS_DT DESC
	</sql>
	
	<select id="getInquiryList" parameterType="String" resultType="ccsInquiry">
	  /* [ccs.main.getInquiryList][roy][2016. 8. 5.] */
	  SELECT *
  		FROM (SELECT t.*, ROWNUM rnum
        	 FROM (  
        	 		SELECT *
                    FROM CCS_INQUIRY
                    WHERE STORE_ID = #{storeId}
                    	AND BUSINESS_ID = #{businessId}
                	ORDER BY INS_DT DESC) t
             )
 		WHERE rnum BETWEEN 0 and 5
	</select>
                                           
	<select id="getInquiryState" resultType="ccsInquiry">
		/* [ccs.main.getInquiryState][roy][2016. 8. 5.] */
			SELECT  (SELECT COUNT (*) FROM (<include refid="getInquiry"/>) t
						WHERE t.INQUIRY_STATE_CD = 'INQUIRY_STATE_CD.ANSWER' 
						AND t.ins_dt BETWEEN TO_DATE (#{startDate},
                                           'YYYY-MM-DD HH24:MI:SS')
                              AND TO_DATE (#{endDate},
                                           'YYYY-MM-DD HH24:MI:SS')
						AND t.BUSINESS_ID = #{businessId})
          		 		AS ANSWER_COUNT,
     				(SELECT COUNT (*) FROM (<include refid="getInquiry"/>) t
         				WHERE t.INQUIRY_STATE_CD = 'INQUIRY_STATE_CD.ACCEPT' 
							AND t.ins_dt BETWEEN TO_DATE (#{startDate},
                                           'YYYY-MM-DD HH24:MI:SS')
                              AND TO_DATE (#{endDate},
                                           'YYYY-MM-DD HH24:MI:SS')
                                            AND t.BUSINESS_ID = #{businessId})
          				AS ACCEPT_COUNT,
       				(SELECT COUNT (*) FROM (<include refid="getInquiry"/>) t
         				WHERE t.INQUIRY_STATE_CD = 'INQUIRY_STATE_CD.COMPLETE' 
         				AND t.ins_dt BETWEEN TO_DATE (#{startDate},
                                           'YYYY-MM-DD HH24:MI:SS')
                              AND TO_DATE (#{endDate},
                                           'YYYY-MM-DD HH24:MI:SS')
         				AND t.BUSINESS_ID = #{businessId})
          				AS COMPLETE_COUNT 
          	FROM DUAL 
          	WHERE rownum=1
	</select>
	
	<sql id="getOrderDeliveryState">
		SELECT  OO.ORDER_ID, OO.ORDER_DELIVERY_STATE_CD, OO.INS_DT, OP.BUSINESS_ID, SUM(OP.LIST_PRICE) AS PRICE
 		FROM	OMS_ORDER OO
 				LEFT OUTER JOIN OMS_ORDERPRODUCT OP
       				ON OO.ORDER_ID = OP.ORDER_ID
 		GROUP BY OO.ORDER_ID, OO.ORDER_DELIVERY_STATE_CD, OO.INS_DT, OP.BUSINESS_ID
	</sql>
	
	<sql id="getClaimProductState">
		SELECT  OC.ORDER_ID, OC.CLAIM_PRODUCT_STATE_CD, OC.INS_DT, OP.BUSINESS_ID
  		FROM	OMS_CLAIMPRODUCT OC
  				LEFT OUTER JOIN OMS_ORDERPRODUCT OP
       				ON OC.ORDER_ID = OP.ORDER_ID AND OC.ORDER_PRODUCT_NO = OP.ORDER_PRODUCT_NO
 		GROUP BY OC.ORDER_ID, OC.CLAIM_PRODUCT_STATE_CD, OC.INS_DT, OP.BUSINESS_ID
	</sql>
	
	<select id="getOrderState" resultType="omsOrder">
		/* [ccs.main.getOrderState][roy][2016. 8. 5.] */
			SELECT  (SELECT COUNT (*) FROM (<include refid="getOrderDeliveryState"/>) O
						WHERE O.ORDER_DELIVERY_STATE_CD = 'ORDER_DELIVERY_STATE_CD.READY' 
						AND O.ins_dt BETWEEN TO_DATE (#{startDate},
                                           'YYYY-MM-DD HH24:MI:SS')
                              AND TO_DATE (#{endDate},
                                           'YYYY-MM-DD HH24:MI:SS')
						AND O.BUSINESS_ID = #{businessId})
          		 		AS READY_COUNT,
     				(SELECT COUNT (*) FROM (<include refid="getOrderDeliveryState"/>) O
         				WHERE O.ORDER_DELIVERY_STATE_CD = 'ORDER_DELIVERY_STATE_CD.DELIVERY_ORDER' 
         				AND O.ins_dt BETWEEN TO_DATE (#{startDate},
                                           'YYYY-MM-DD HH24:MI:SS')
                              AND TO_DATE (#{endDate},
                                           'YYYY-MM-DD HH24:MI:SS')
         				AND O.BUSINESS_ID = #{businessId})
          				AS DELIVERY_ORDER_COUNT,
       				(SELECT COUNT (*) FROM (<include refid="getOrderDeliveryState"/>) O
         				WHERE O.ORDER_DELIVERY_STATE_CD = 'ORDER_DELIVERY_STATE_CD.SHIP' 
         				AND O.ins_dt BETWEEN TO_DATE (#{startDate},
                                           'YYYY-MM-DD HH24:MI:SS')
                              AND TO_DATE (#{endDate},
                                           'YYYY-MM-DD HH24:MI:SS')
         				AND O.BUSINESS_ID = #{businessId})
          				AS SHIP_COUNT,
       				(SELECT COUNT (*) FROM (<include refid="getOrderDeliveryState"/>) O
         				WHERE O.ORDER_DELIVERY_STATE_CD = 'ORDER_DELIVERY_STATE_CD.DELIVERY' 
         				AND O.ins_dt BETWEEN TO_DATE (#{startDate},
                                           'YYYY-MM-DD HH24:MI:SS')
                              AND TO_DATE (#{endDate},
                                           'YYYY-MM-DD HH24:MI:SS')
         				AND O.BUSINESS_ID = #{businessId})
          				AS DELIVERY_COUNT,
       				(SELECT COUNT (*) FROM (<include refid="getClaimProductState"/>) O
         				WHERE O.CLAIM_PRODUCT_STATE_CD = 'CLAIM_PRODUCT_STATE_CD.RETURN_ORDER' 
         				AND O.ins_dt BETWEEN TO_DATE (#{startDate},
                                           'YYYY-MM-DD HH24:MI:SS')
                              AND TO_DATE (#{endDate},
                                           'YYYY-MM-DD HH24:MI:SS')
         				AND O.BUSINESS_ID = #{businessId})
          				AS RETURN_ORDER_COUNT,
       				(SELECT SUM (O.PRICE) FROM (<include refid="getOrderDeliveryState"/>) O
         				WHERE O.ins_dt BETWEEN TO_DATE (#{startDate},
                                           'YYYY-MM-DD HH24:MI:SS')
                              AND TO_DATE (#{endDate},
                                           'YYYY-MM-DD HH24:MI:SS')
         				AND O.BUSINESS_ID = #{businessId})
          				AS TOTAL_ORDER_AMT
          	FROM DUAL 
          	WHERE rownum=1
	</select>
	
	<resultMap id="productListResult" autoMapping="true" type="pmsProduct">
		<id property="storeId" column="STORE_ID" />
		<id property="productId" column="PRODUCT_ID" />
		<result property="dmsCategoryName" column="DMS_CATEGORY_NAME"/>
		<association property="pmsCategory" column="CATEGORY_ID" javaType="pmsCategory">
	    	<id property="storeId" 		column="STORE_ID" />
	    	<id property="categoryId" 	column="CATEGORY_ID"/>
	    	<result property="name" 	column="PMS_CATEGORY_NAME"/>	    
	    </association>   
	    <association property="pmsSaleproduct" column="SALEPRODUCT_ID" javaType="pmsSaleproduct">
	    	<id property="storeId" 			column="STORE_ID" />
	    	<id property="saleproductId" 	column="SALEPRODUCT_ID"/>
	    	<id property="realStockQty" 	column="REAL_STOCK_QTY"/>
	    	<result property="name" 		column="SALEPRODUCT_NAME"/>	    
	    </association>
	     
	</resultMap>	

	<select id="getProductList" resultMap="productListResult">
	/* [ccs.main.getProductList][roy][2016. 8. 5.] */
		<include refid="ccs.common.pagingPre" />
					SELECT 
						PP.PRODUCT_ID,
                         PP.NAME,
                         PC.NAME AS PMS_CATEGORY_NAME,
                         PS.REAL_STOCK_QTY,
                         PS.SALEPRODUCT_ID,
                         PS.NAME AS SALEPRODUCT_NAME,
                         PP.INS_DT
                    FROM PMS_PRODUCT PP
                         INNER JOIN PMS_CATEGORY PC
                            ON     PC.CATEGORY_ID = PP.CATEGORY_ID
                               AND PC.STORE_ID = PP.STORE_ID
                         INNER JOIN PMS_SALEPRODUCT PS
                            ON     PP.PRODUCT_ID = PS.PRODUCT_ID
                               AND PC.STORE_ID = PP.STORE_ID
                         INNER JOIN CCS_BUSINESS CB
                            ON     CB.BUSINESS_ID = PP.BUSINESS_ID
                               AND CB.STORE_ID = PP.STORE_ID
                   WHERE     PP.STORE_ID = #{ storeId }
                         AND PP.PRODUCT_TYPE_CD IN ('PRODUCT_TYPE_CD.GENERAL', 'PRODUCT_TYPE_CD.SET')
                         AND PS.REAL_STOCK_QTY BETWEEN 0 AND 2
                         AND SALE_STATE_CD = 'SALE_STATE_CD.SALE'
                         AND CB.BUSINESS_ID = #{businessId}
                UNION ALL
                SELECT 
                         PP.PRODUCT_ID,
                         PP.NAME,
                         PC.NAME AS PMS_CATEGORY_NAME,
                         PS.REAL_STOCK_QTY,
                         PS.SALEPRODUCT_ID,
                         PS.NAME AS SALEPRODUCT_NAME,
                         PP.INS_DT
                    FROM PMS_PRODUCT PP
                         INNER JOIN PMS_CATEGORY PC
                            ON     PC.CATEGORY_ID = PP.CATEGORY_ID
                               AND PC.STORE_ID = PP.STORE_ID
                         INNER JOIN PMS_SALEPRODUCT PS
                            ON     PP.PRODUCT_ID = PS.PRODUCT_ID
                               AND PC.STORE_ID = PP.STORE_ID
                         INNER JOIN CCS_BUSINESS CB
                            ON     CB.BUSINESS_ID = PP.BUSINESS_ID
                               AND CB.STORE_ID = PP.STORE_ID
                   WHERE     PP.STORE_ID = #{ storeId }
                         AND PP.PRODUCT_TYPE_CD IN ('PRODUCT_TYPE_CD.GENERAL', 'PRODUCT_TYPE_CD.SET')
                         AND PP.SALE_STATE_CD = 'SALE_STATE_CD.SOLDOUT'
                         AND CB.BUSINESS_ID = #{businessId}
                ORDER BY 7 DESC
 		<include refid="ccs.common.pagingPost" />
	</select>
	
	<select id="getBoProductQnaState" resultType="pmsProductqna">
		SELECT COUNT(*) AS UNCOMPLETE_COUNT
		FROM PMS_PRODUCTQNA 
		WHERE PRODUCT_QNA_STATE_CD not in ('PRODUCT_QNA_STATE_CD.COMPLETE') AND STORE_ID = #{ storeId }
			AND ins_dt BETWEEN TO_DATE (#{startDate},
                                           'YYYY-MM-DD HH24:MI:SS')
                              AND TO_DATE (#{endDate},
                                           'YYYY-MM-DD HH24:MI:SS')
	</select>
	
	<select id="getBoInquiryState" resultType="ccsInquiry">
		SELECT COUNT(*) AS UNCOMPLETE_COUNT
		FROM CCS_INQUIRY 
		WHERE INQUIRY_STATE_CD not in ('INQUIRY_STATE_CD.COMPLETE') AND STORE_ID = #{ storeId }
			AND ins_dt BETWEEN TO_DATE (#{startDate},
                                           'YYYY-MM-DD HH24:MI:SS')
                              AND TO_DATE (#{endDate},
                                           'YYYY-MM-DD HH24:MI:SS')
	</select>
	
	<select id="getMdList" resultType="ccsUser">
	
		SELECT *
  		FROM (SELECT t.*, ROWNUM rnum
        	 FROM (  
        	 		SELECT O.USER_ID, O.NAME, O.EMAIL, O.PHONE2, WM_CONCAT (O.CATEGORY_NAME) AS CATEGORY_NAMES
			  		FROM (  SELECT P.NAME AS CATEGORY_NAME,
			                 C.NAME,
			                 C.EMAIL,
			                 C.PHONE2,
			                 C.USER_ID
			            	FROM    CCS_USER C
				                 LEFT OUTER JOIN
				                    PMS_CATEGORY P
				                 ON C.USER_ID = P.USER_ID AND P.STORE_ID = #{ storeId }
				           WHERE C.STORE_ID = #{ storeId } AND C.MD_YN = 'Y' AND C.USER_STATE_CD = 'USER_STATE_CD.USE'
				        ORDER BY C.INS_DT DESC) O
				        GROUP BY O.USER_ID, O.NAME, O.EMAIL, O.PHONE2
				    ) t
             )
 		WHERE rnum BETWEEN 0 and 10
		
	</select>
	
	<select id="getPopupList" resultType="ccsPopup">
		SELECT CP.POPUP_NO, CP.POSITION, CP.TITLE, CP.DETAIL1
			  FROM    ccs_popup CP
			 WHERE CP.STORE_ID = #{storeId} 
				 AND CP.DISPLAY_YN = 'Y' 
				 AND SYSDATE BETWEEN CP.START_DT
                                           AND CP.END_DT
		 		AND CP.POPUP_TYPE_CD = 'POPUP_TYPE_CD.PARTNER'
			 	AND CP.PC_DISPLAY_YN = 'Y'
			GROUP BY CP.POPUP_NO, CP.POSITION, CP.TITLE, CP.DETAIL1
	</select>
	
</mapper>