<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:security="http://www.springframework.org/schema/security"
    xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.1.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.1.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd">                     
    
    <http auto-config='true' create-session="ifRequired" use-expressions="true" disable-url-rewriting="true" entry-point-ref="restAuthenticationEntryPoint" >        
        
        <headers>
    		<frame-options policy="SAMEORIGIN"/>
    	</headers>	

        <csrf token-repository-ref="csrfTokenRepository" request-matcher-ref="csrfRequestMatcher"/>
    	
        <intercept-url pattern="/resources/**" access="permitAll" />        
        <intercept-url pattern="/mms/member/login" access="permitAll" />
        <intercept-url pattern="/mms/member/login/**" access="permitAll" />        
<!--         <intercept-url pattern="/oms/**" access="hasRole('ROLE_MEMBER')" />  -->
        <intercept-url pattern="/mms/mypage/order/gift**" access="permitAll" />
        <intercept-url pattern="/mms/mypage/gift/**" access="permitAll" />
        <intercept-url pattern="/mms/**" access="hasRole('ROLE_MEMBER')" />
        <intercept-url pattern="/oms/order/regulardelivery" access="hasRole('ROLE_MEMBER')" />
        <intercept-url pattern="/oms/order/mypageList" access="hasRole('ROLE_NON_MEMBER')" />
        <intercept-url pattern="/api/pms/product/qna/save" access="hasRole('ROLE_MEMBER')" />
        <intercept-url pattern="/**" access="permitAll" />
        <form-login login-page="/mms/member/login" 
        			login-processing-url="/j_spring_security_check"
        			username-parameter="j_username"
                    password-parameter="j_password"
                    always-use-default-target='true'        
                    authentication-success-handler-ref="loginSuccessHandler"
                    authentication-failure-handler-ref="loginFailHandler"                                  
                    />
                    
        <logout invalidate-session="true" logout-url="/j_spring_security_logout" success-handler-ref="logoutSuccessHandler" delete-cookies="zts_fo_JSESSIONID"/>                                
        
<!--         <session-management session-fixation-protection="changeSessionId" > -->
<!--         	<concurrency-control max-sessions="2"/>        	                       -->
<!--         </session-management>                 -->
    	    	    	
    	<custom-filter before="SESSION_MANAGEMENT_FILTER" ref="customSessionManagementFilter" />
		<access-denied-handler ref="customDeidHandler"/>	
		
		<remember-me key="remember-me-key" services-ref="rememberMeServices" authentication-success-handler-ref="loginSuccessHandler"/>
		 
    </http>
    
    <beans:bean id="csrfRequestMatcher" class="gcp.frontpc.common.handler.CsrfRequestMatcher"/>
    
    <beans:bean id="rememberMeServices"
          class="org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices">
        <beans:constructor-arg value="remember-me-key"/>
        <beans:constructor-arg ref="memberLoginService"/>
        <beans:constructor-arg ref="tokenRepository"/>
        <beans:property name="cookieName" value="remember-me-ztsfo"/>
        <beans:property name="tokenLength" value="32"/>
        <beans:property name="parameter" value="_spring_security_remember_me"/>
    </beans:bean>

    <beans:bean id="tokenRepository"
          class="org.springframework.security.web.authentication.rememberme.InMemoryTokenRepositoryImpl">
    </beans:bean>
	    

    <!-- strategy -->
    <beans:bean id="customInvalidSessionStrategy" class="gcp.frontpc.common.strategy.CustomInvalidSessionStrategy"/>
    
    <!-- filter -->
    <beans:bean id="customSessionManagementFilter" class="org.springframework.security.web.session.SessionManagementFilter">
	    <beans:constructor-arg name="securityContextRepository" ref="httpSessionSecurityContextRepository" />
	    <beans:property name="invalidSessionStrategy" ref="customInvalidSessionStrategy" />
	</beans:bean>
	
	<beans:bean id="restAuthenticationEntryPoint" class="gcp.frontpc.common.handler.RestAuthenticationEntryPoint">
		<beans:constructor-arg name="loginFormUrl" value="/mms/member/login"/>
	</beans:bean>
	
	<!-- handler -->		  
	<beans:bean id="loginSuccessHandler" class="gcp.frontpc.common.handler.LoginSuccessHandler">
    	<beans:property name="defaultTargetUrl" value="/ccs/common/main"/>
    </beans:bean>
    <beans:bean id="loginFailHandler" class="gcp.frontpc.common.handler.LoginFailHandler">
    	<beans:property name="defaultFailureUrl" value="/mms/member/login" />
    </beans:bean>    
    <beans:bean id="logoutSuccessHandler" class="gcp.frontpc.common.handler.LogoutSuccessHandler"/>    	    
    <beans:bean id="customDeidHandler" class="gcp.frontpc.common.handler.CustomAccessDenidHandler"/>
    <!-- repository -->
    <beans:bean id="httpSessionSecurityContextRepository" class="org.springframework.security.web.context.HttpSessionSecurityContextRepository"/>
     
    <beans:bean id="csrfTokenRepository" class="org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository">
	    <beans:property name="headerName" value="X-XSRF-TOKEN" />	    
	</beans:bean>
 
 	<!-- auth service -->
    <beans:bean id="memberLoginService" class="gcp.mms.service.MemberLoginService" />
    	
    <beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" />        
        	    	    
    <authentication-manager>
    	<authentication-provider user-service-ref="memberLoginService">
    		<password-encoder ref="passwordEncoder" />
    	</authentication-provider>       	    
    </authentication-manager>                     
     
</beans:beans>